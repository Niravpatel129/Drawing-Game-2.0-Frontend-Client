{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b34b63ae1f7ce120e9f7","webpack:///./node_modules/lazy-brush/lib/LazyPoint.js","webpack:///./node_modules/lazy-brush/lib/Point.js","webpack:///./node_modules/catenary-curve/lib/Point.js","webpack:///./src/index.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/lazy-brush/lib/index.js","webpack:///./node_modules/lazy-brush/lib/LazyBrush.js","webpack:///./node_modules/catenary-curve/lib/index.js","webpack:///./node_modules/catenary-curve/lib/Catenary.js","webpack:///./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/drawImage.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_5__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","obj","_createClass","defineProperties","target","props","length","descriptor","writable","key","Constructor","protoProps","staticProps","_Point2","_Point3","default","LazyPoint","_Point","instance","TypeError","_classCallCheck","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","arguments","subClass","superClass","create","constructor","setPrototypeOf","_inherits","point","x","y","angle","distance","angleRotated","Math","PI","sin","cos","diff","getDifferenceTo","sqrt","pow","atan2","Point","midPointBtw","p1","p2","canvasStyle","display","position","canvasTypes","zIndex","__WEBPACK_IMPORTED_MODULE_1_prop_types___default","a","oneOfType","number","string","_default","_this","_PureComponent","componentWillUnmount","canvasObserver","unobserve","canvasContainer","drawImage","imgSrc","image","Image","src","onload","__WEBPACK_IMPORTED_MODULE_5__drawImage__","ctx","grid","img","undo","lines","slice","clear","simulateDrawingLines","immediate","triggerOnChange","getSaveData","JSON","stringify","width","canvasWidth","height","canvasHeight","loadSaveData","saveData","undefined","immediateLoading","Error","_JSON$parse","parse","push","scaleX","scaleY","scaleAvg","map","line","_extends","points","brushRadius","_ref","curTime","timeoutGap","loadTimeOffset","forEach","brushColor","drawPoints","saveLine","_loop","window","setTimeout","handleTouchStart","e","_this$getPointerPos","getPointerPos","lazy","update","both","handleMouseDown","mouseHasMoved","handleTouchMove","preventDefault","_this$getPointerPos2","handlePointerMove","handleTouchEnd","handleMouseUp","brush","getBrushCoordinates","isPressing","handleMouseMove","_this$getPointerPos3","isDrawing","handleCanvasResize","entries","observer","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","next","done","_entry$contentRect","contentRect","setCanvasSize","canvas","interface","drawing","temp","drawGrid","loop","once","style","rect","getBoundingClientRect","clientX","clientY","changedTouches","left","top","disabled","hasChanged","isDisabled","isEnabled","toObject","brushHasMoved","_ref3","lineJoin","lineCap","strokeStyle","clearRect","lineWidth","moveTo","beginPath","len","midPoint","quadraticCurveTo","lineTo","stroke","_ref4","onChange","valuesChanged","_ref5$once","pointer","getPointerCoordinates","drawInterface","requestAnimationFrame","hideGrid","setLineDash","gridColor","countX","countY","hideInterface","fillStyle","arc","fill","catenaryColor","catenary","drawToCanvas","chainLength","__WEBPACK_IMPORTED_MODULE_3_catenary_curve__","componentDidMount","_this2","__WEBPACK_IMPORTED_MODULE_2_lazy_brush__","radius","lazyRadius","devicePixelRatio","enabled","initialPoint","innerWidth","innerHeight","__WEBPACK_IMPORTED_MODULE_4_resize_observer_polyfill__","observe","initX","initY","componentDidUpdate","prevProps","setRadius","render","_this3","__WEBPACK_IMPORTED_MODULE_0_react___default","createElement","className","background","backgroundColor","touchAction","ref","container","_ref6","isInterface","getContext","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","__WEBPACK_IMPORTED_MODULE_0_react__","defaultProps","ReactPropTypesSecret","emptyFunction","shim","propName","componentName","location","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bool","func","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","shape","exact","checkPropTypes","PropTypes","LazyBrush","_LazyBrush2","_interopRequireDefault","_LazyPoint2","_LazyPoint","RADIUS_DEFAULT","_ref$radius","_ref$enabled","_ref$initialPoint","_isEnabled","_hasMoved","newPointerPoint","_ref2$both","equalsTo","getDistanceTo","getAngleTo","moveByAngle","Catenary","_Catenary2","_ref$segments","segments","_ref$iterationLimit","iterationLimit","context","point1","point2","isFlipped","curveData","isStraight","h","v","getCatenaryParameter","log","cosh","offsetX","offsetY","getCurve","mx","my","drawLine","drawCurve","limit","acosh","prevx","count","abs","sinh","data","ox","oy","global","MapShim","Map","getIndex","arr","result","some","entry","index","anonymous","__entries__","prototypeAccessors","size","set","delete","splice","has","callback","list","isBrowser","document","global$1","Function","requestAnimationFrame$1","bind","Date","now","trailingTimeout","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","attributes","childList","characterData","subtree","removeEventListener","disconnect","propertyName","getInstance","instance_","defineConfigurable","keys","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","reduce","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","getPaddings","horizPad","right","vertPad","bottom","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","Constr","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","clearActive","this$1","observation","WeakMap","ResizeObserver","method","__webpack_exports__","g","eval","w","cx","cy","cw","ch","iw","ih","r","min","nw","nh","ar"],"mappings":"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","file":"react-canvas-draw.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactCanvasDraw\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactCanvasDraw\"] = factory(root[\"React\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b34b63ae1f7ce120e9f7","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Point2 = require('./Point');\n\nvar _Point3 = _interopRequireDefault(_Point2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LazyPoint = function (_Point) {\n  _inherits(LazyPoint, _Point);\n\n  function LazyPoint() {\n    _classCallCheck(this, LazyPoint);\n\n    return _possibleConstructorReturn(this, (LazyPoint.__proto__ || Object.getPrototypeOf(LazyPoint)).apply(this, arguments));\n  }\n\n  _createClass(LazyPoint, [{\n    key: 'update',\n\n    /**\n     * Update the x and y values\n     *\n     * @param {Point} point\n     */\n    value: function update(point) {\n      this.x = point.x;\n      this.y = point.y;\n    }\n\n    /**\n     * Move the point to another position using an angle and distance\n     *\n     * @param {number} angle The angle in radians\n     * @param {number} distance How much the point should be moved\n     */\n\n  }, {\n    key: 'moveByAngle',\n    value: function moveByAngle(angle, distance) {\n      // Rotate the angle based on the browser coordinate system ([0,0] in the top left)\n      var angleRotated = angle + Math.PI / 2;\n\n      this.x = this.x + Math.sin(angleRotated) * distance, this.y = this.y - Math.cos(angleRotated) * distance;\n    }\n\n    /**\n     * Check if this point is the same as another point\n     *\n     * @param {Point} point\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'equalsTo',\n    value: function equalsTo(point) {\n      return this.x === point.x && this.y === point.y;\n    }\n\n    /**\n     * Get the difference for x and y axis to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: 'getDifferenceTo',\n    value: function getDifferenceTo(point) {\n      return new _Point3.default(this.x - point.x, this.y - point.y);\n    }\n\n    /**\n     * Calculate distance to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: 'getDistanceTo',\n    value: function getDistanceTo(point) {\n      var diff = this.getDifferenceTo(point);\n\n      return Math.sqrt(Math.pow(diff.x, 2) + Math.pow(diff.y, 2));\n    }\n\n    /**\n     * Calculate the angle to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: 'getAngleTo',\n    value: function getAngleTo(point) {\n      var diff = this.getDifferenceTo(point);\n\n      return Math.atan2(diff.y, diff.x);\n    }\n\n    /**\n     * Return a simple object with x and y properties\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: 'toObject',\n    value: function toObject() {\n      return {\n        x: this.x,\n        y: this.y\n      };\n    }\n  }]);\n\n  return LazyPoint;\n}(_Point3.default);\n\nexports.default = LazyPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lazy-brush/lib/LazyPoint.js\n// module id = 0\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Point =\n/**\n *\n * @param {number} x\n * @param {number} y\n */\nfunction Point(x, y) {\n  _classCallCheck(this, Point);\n\n  this.x = x;\n  this.y = y;\n};\n\nexports.default = Point;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lazy-brush/lib/Point.js\n// module id = 1\n// module chunks = 0","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Point = function () {\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   */\n  function Point(x, y) {\n    _classCallCheck(this, Point);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Update the x and y values\n   *\n   * @param {Point} point\n   */\n\n\n  _createClass(Point, [{\n    key: \"update\",\n    value: function update(point) {\n      this.x = point.x;\n      this.y = point.y;\n    }\n\n    /**\n     * Get the difference for x and y axis to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: \"getDifferenceTo\",\n    value: function getDifferenceTo(point) {\n      return new Point(this.x - point.x, this.y - point.y);\n    }\n\n    /**\n     * Calculate distance to another point\n     *\n     * @param {Point} point\n     * @returns {Point}\n     */\n\n  }, {\n    key: \"getDistanceTo\",\n    value: function getDistanceTo(point) {\n      var diff = this.getDifferenceTo(point);\n\n      return Math.sqrt(Math.pow(diff.x, 2) + Math.pow(diff.y, 2));\n    }\n  }]);\n\n  return Point;\n}();\n\nexports.default = Point;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/catenary-curve/lib/Point.js\n// module id = 2\n// module chunks = 0","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LazyBrush } from \"lazy-brush\";\nimport { Catenary } from \"catenary-curve\";\n\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nimport drawImage from \"./drawImage\";\n\nfunction midPointBtw(p1, p2) {\n  return {\n    x: p1.x + (p2.x - p1.x) / 2,\n    y: p1.y + (p2.y - p1.y) / 2\n  };\n}\n\nconst canvasStyle = {\n  display: \"block\",\n  position: \"absolute\"\n};\n\nconst canvasTypes = [\n  {\n    name: \"interface\",\n    zIndex: 15\n  },\n  {\n    name: \"drawing\",\n    zIndex: 11\n  },\n  {\n    name: \"temp\",\n    zIndex: 12\n  },\n  {\n    name: \"grid\",\n    zIndex: 10\n  }\n];\n\nconst dimensionsPropTypes = PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.string\n]);\n\nexport default class extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func,\n    loadTimeOffset: PropTypes.number,\n    lazyRadius: PropTypes.number,\n    brushRadius: PropTypes.number,\n    brushColor: PropTypes.string,\n    catenaryColor: PropTypes.string,\n    gridColor: PropTypes.string,\n    backgroundColor: PropTypes.string,\n    hideGrid: PropTypes.bool,\n    canvasWidth: dimensionsPropTypes,\n    canvasHeight: dimensionsPropTypes,\n    disabled: PropTypes.bool,\n    imgSrc: PropTypes.string,\n    saveData: PropTypes.string,\n    immediateLoading: PropTypes.bool,\n    hideInterface: PropTypes.bool\n  };\n\n  static defaultProps = {\n    onChange: null,\n    loadTimeOffset: 5,\n    lazyRadius: 12,\n    brushRadius: 10,\n    brushColor: \"#444\",\n    catenaryColor: \"#0a0302\",\n    gridColor: \"rgba(150,150,150,0.17)\",\n    backgroundColor: \"#FFF\",\n    hideGrid: false,\n    canvasWidth: 400,\n    canvasHeight: 400,\n    disabled: false,\n    imgSrc: \"\",\n    saveData: \"\",\n    immediateLoading: false,\n    hideInterface: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.canvas = {};\n    this.ctx = {};\n\n    this.catenary = new Catenary();\n\n    this.points = [];\n    this.lines = [];\n\n    this.mouseHasMoved = true;\n    this.valuesChanged = true;\n    this.isDrawing = false;\n    this.isPressing = false;\n  }\n\n  componentDidMount() {\n    this.lazy = new LazyBrush({\n      radius: this.props.lazyRadius * window.devicePixelRatio,\n      enabled: true,\n      initialPoint: {\n        x: window.innerWidth / 2,\n        y: window.innerHeight / 2\n      }\n    });\n    this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n\n    this.canvasObserver = new ResizeObserver((entries, observer) =>\n      this.handleCanvasResize(entries, observer)\n    );\n    this.canvasObserver.observe(this.canvasContainer);\n\n    this.drawImage();\n    this.loop();\n\n    window.setTimeout(() => {\n      const initX = window.innerWidth / 2;\n      const initY = window.innerHeight / 2;\n      this.lazy.update(\n        { x: initX - this.chainLength / 4, y: initY },\n        { both: true }\n      );\n      this.lazy.update(\n        { x: initX + this.chainLength / 4, y: initY },\n        { both: false }\n      );\n      this.mouseHasMoved = true;\n      this.valuesChanged = true;\n      this.clear();\n\n      // Load saveData from prop if it exists\n      if (this.props.saveData) {\n        this.loadSaveData(this.props.saveData);\n      }\n    }, 100);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lazyRadius !== this.props.lazyRadius) {\n      // Set new lazyRadius values\n      this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n      this.lazy.setRadius(this.props.lazyRadius * window.devicePixelRatio);\n    }\n\n    if (prevProps.saveData !== this.props.saveData) {\n      this.loadSaveData(this.props.saveData);\n    }\n\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      // Signal this.loop function that values changed\n      this.valuesChanged = true;\n    }\n  }\n\n  componentWillUnmount = () => {\n    this.canvasObserver.unobserve(this.canvasContainer);\n  };\n\n  drawImage = () => {\n    if (!this.props.imgSrc) return;\n\n    // Load the image\n    this.image = new Image();\n    this.image.src = this.props.imgSrc;\n\n    // Draw the image once loaded\n    this.image.onload = () =>\n      drawImage({ ctx: this.ctx.grid, img: this.image });\n  };\n\n  undo = () => {\n    const lines = this.lines.slice(0, -1);\n    this.clear();\n    this.simulateDrawingLines({ lines, immediate: true });\n    this.triggerOnChange();\n  };\n\n  getSaveData = () => {\n    // Construct and return the stringified saveData object\n    return JSON.stringify({\n      lines: this.lines,\n      width: this.props.canvasWidth,\n      height: this.props.canvasHeight\n    });\n  };\n\n  loadSaveData = (saveData, immediate = this.props.immediateLoading) => {\n    if (typeof saveData !== \"string\") {\n      throw new Error(\"saveData needs to be of type string!\");\n    }\n\n    const { lines, width, height } = JSON.parse(saveData);\n\n    if (!lines || typeof lines.push !== \"function\") {\n      throw new Error(\"saveData.lines needs to be an array!\");\n    }\n\n    this.clear();\n\n    if (\n      width === this.props.canvasWidth &&\n      height === this.props.canvasHeight\n    ) {\n      this.simulateDrawingLines({\n        lines,\n        immediate\n      });\n    } else {\n      // we need to rescale the lines based on saved & current dimensions\n      const scaleX = this.props.canvasWidth / width;\n      const scaleY = this.props.canvasHeight / height;\n      const scaleAvg = (scaleX + scaleY) / 2;\n\n      this.simulateDrawingLines({\n        lines: lines.map(line => ({\n          ...line,\n          points: line.points.map(p => ({\n            x: p.x * scaleX,\n            y: p.y * scaleY\n          })),\n          brushRadius: line.brushRadius * scaleAvg\n        })),\n        immediate\n      });\n    }\n  };\n\n  simulateDrawingLines = ({ lines, immediate }) => {\n    // Simulate live-drawing of the loaded lines\n    // TODO use a generator\n    let curTime = 0;\n    let timeoutGap = immediate ? 0 : this.props.loadTimeOffset;\n\n    lines.forEach(line => {\n      const { points, brushColor, brushRadius } = line;\n\n      // Draw all at once if immediate flag is set, instead of using setTimeout\n      if (immediate) {\n        // Draw the points\n        this.drawPoints({\n          points,\n          brushColor,\n          brushRadius\n        });\n\n        // Save line with the drawn points\n        this.points = points;\n        this.saveLine({ brushColor, brushRadius });\n        return;\n      }\n\n      // Use timeout to draw\n      for (let i = 1; i < points.length; i++) {\n        curTime += timeoutGap;\n        window.setTimeout(() => {\n          this.drawPoints({\n            points: points.slice(0, i + 1),\n            brushColor,\n            brushRadius\n          });\n        }, curTime);\n      }\n\n      curTime += timeoutGap;\n      window.setTimeout(() => {\n        // Save this line with its props instead of this.props\n        this.points = points;\n        this.saveLine({ brushColor, brushRadius });\n      }, curTime);\n    });\n  };\n\n  handleTouchStart = e => {\n    const { x, y } = this.getPointerPos(e);\n    this.lazy.update({ x, y }, { both: true });\n    this.handleMouseDown(e);\n\n    this.mouseHasMoved = true;\n  };\n\n  handleTouchMove = e => {\n    e.preventDefault();\n    const { x, y } = this.getPointerPos(e);\n    this.handlePointerMove(x, y);\n  };\n\n  handleTouchEnd = e => {\n    this.handleMouseUp(e);\n    const brush = this.lazy.getBrushCoordinates();\n    this.lazy.update({ x: brush.x, y: brush.y }, { both: true });\n    this.mouseHasMoved = true;\n  };\n\n  handleMouseDown = e => {\n    e.preventDefault();\n    this.isPressing = true;\n  };\n\n  handleMouseMove = e => {\n    const { x, y } = this.getPointerPos(e);\n    this.handlePointerMove(x, y);\n  };\n\n  handleMouseUp = e => {\n    e.preventDefault();\n    this.isDrawing = false;\n    this.isPressing = false;\n\n    this.saveLine();\n  };\n\n  handleCanvasResize = (entries, observer) => {\n    const saveData = this.getSaveData();\n    for (const entry of entries) {\n      const { width, height } = entry.contentRect;\n      this.setCanvasSize(this.canvas.interface, width, height);\n      this.setCanvasSize(this.canvas.drawing, width, height);\n      this.setCanvasSize(this.canvas.temp, width, height);\n      this.setCanvasSize(this.canvas.grid, width, height);\n\n      this.drawGrid(this.ctx.grid);\n      this.loop({ once: true });\n    }\n    this.loadSaveData(saveData, true);\n  };\n\n  setCanvasSize = (canvas, width, height) => {\n    canvas.width = width;\n    canvas.height = height;\n    canvas.style.width = width;\n    canvas.style.height = height;\n  };\n\n  getPointerPos = e => {\n    const rect = this.canvas.interface.getBoundingClientRect();\n\n    // use cursor pos as default\n    let clientX = e.clientX;\n    let clientY = e.clientY;\n\n    // use first touch if available\n    if (e.changedTouches && e.changedTouches.length > 0) {\n      clientX = e.changedTouches[0].clientX;\n      clientY = e.changedTouches[0].clientY;\n    }\n\n    // return mouse/touch position inside canvas\n    return {\n      x: clientX - rect.left,\n      y: clientY - rect.top\n    };\n  };\n\n  handlePointerMove = (x, y) => {\n    if (this.props.disabled) return;\n\n    const hasChanged = this.lazy.update({ x, y });\n    const isDisabled = !this.lazy.isEnabled();\n\n    if (\n      (this.isPressing && hasChanged && !this.isDrawing) ||\n      (isDisabled && this.isPressing)\n    ) {\n      // Start drawing and add point\n      this.isDrawing = true;\n      this.points.push(this.lazy.brush.toObject());\n    }\n\n    if (this.isDrawing && (this.lazy.brushHasMoved() || isDisabled)) {\n      // Add new point\n      this.points.push(this.lazy.brush.toObject());\n\n      // Draw current points\n      this.drawPoints({\n        points: this.points,\n        brushColor: this.props.brushColor,\n        brushRadius: this.props.brushRadius\n      });\n    }\n\n    this.mouseHasMoved = true;\n  };\n\n  drawPoints = ({ points, brushColor, brushRadius }) => {\n    this.ctx.temp.lineJoin = \"round\";\n    this.ctx.temp.lineCap = \"round\";\n    this.ctx.temp.strokeStyle = brushColor;\n\n    this.ctx.temp.clearRect(\n      0,\n      0,\n      this.ctx.temp.canvas.width,\n      this.ctx.temp.canvas.height\n    );\n    this.ctx.temp.lineWidth = brushRadius * 2;\n\n    let p1 = points[0];\n    let p2 = points[1];\n\n    this.ctx.temp.moveTo(p2.x, p2.y);\n    this.ctx.temp.beginPath();\n\n    for (var i = 1, len = points.length; i < len; i++) {\n      // we pick the point between pi+1 & pi+2 as the\n      // end point and p1 as our control point\n      var midPoint = midPointBtw(p1, p2);\n      this.ctx.temp.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      p1 = points[i];\n      p2 = points[i + 1];\n    }\n    // Draw last line as a straight line while\n    // we wait for the next point to be able to calculate\n    // the bezier control point\n    this.ctx.temp.lineTo(p1.x, p1.y);\n    this.ctx.temp.stroke();\n  };\n\n  saveLine = ({ brushColor, brushRadius } = {}) => {\n    if (this.points.length < 2) return;\n\n    // Save as new line\n    this.lines.push({\n      points: [...this.points],\n      brushColor: brushColor || this.props.brushColor,\n      brushRadius: brushRadius || this.props.brushRadius\n    });\n\n    // Reset points array\n    this.points.length = 0;\n\n    const width = this.canvas.temp.width;\n    const height = this.canvas.temp.height;\n\n    // Copy the line to the drawing canvas\n    this.ctx.drawing.drawImage(this.canvas.temp, 0, 0, width, height);\n\n    // Clear the temporary line-drawing canvas\n    this.ctx.temp.clearRect(0, 0, width, height);\n\n    this.triggerOnChange();\n  };\n\n  triggerOnChange = () => {\n    this.props.onChange && this.props.onChange(this);\n  };\n\n  clear = () => {\n    this.lines = [];\n    this.valuesChanged = true;\n    this.ctx.drawing.clearRect(\n      0,\n      0,\n      this.canvas.drawing.width,\n      this.canvas.drawing.height\n    );\n    this.ctx.temp.clearRect(\n      0,\n      0,\n      this.canvas.temp.width,\n      this.canvas.temp.height\n    );\n  };\n\n  loop = ({ once = false } = {}) => {\n    if (this.mouseHasMoved || this.valuesChanged) {\n      const pointer = this.lazy.getPointerCoordinates();\n      const brush = this.lazy.getBrushCoordinates();\n\n      this.drawInterface(this.ctx.interface, pointer, brush);\n      this.mouseHasMoved = false;\n      this.valuesChanged = false;\n    }\n\n    if (!once) {\n      window.requestAnimationFrame(() => {\n        this.loop();\n      });\n    }\n  };\n\n  drawGrid = ctx => {\n    if (this.props.hideGrid) return;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    ctx.beginPath();\n    ctx.setLineDash([5, 1]);\n    ctx.setLineDash([]);\n    ctx.strokeStyle = this.props.gridColor;\n    ctx.lineWidth = 0.5;\n\n    const gridSize = 25;\n\n    let countX = 0;\n    while (countX < ctx.canvas.width) {\n      countX += gridSize;\n      ctx.moveTo(countX, 0);\n      ctx.lineTo(countX, ctx.canvas.height);\n    }\n    ctx.stroke();\n\n    let countY = 0;\n    while (countY < ctx.canvas.height) {\n      countY += gridSize;\n      ctx.moveTo(0, countY);\n      ctx.lineTo(ctx.canvas.width, countY);\n    }\n    ctx.stroke();\n  };\n\n  drawInterface = (ctx, pointer, brush) => {\n    if (this.props.hideInterface) return;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    // Draw brush preview\n    ctx.beginPath();\n    ctx.fillStyle = this.props.brushColor;\n    ctx.arc(brush.x, brush.y, this.props.brushRadius, 0, Math.PI * 2, true);\n    ctx.fill();\n\n    // Draw mouse point (the one directly at the cursor)\n    ctx.beginPath();\n    ctx.fillStyle = this.props.catenaryColor;\n    ctx.arc(pointer.x, pointer.y, 4, 0, Math.PI * 2, true);\n    ctx.fill();\n\n    // Draw catenary\n    if (this.lazy.isEnabled()) {\n      ctx.beginPath();\n      ctx.lineWidth = 2;\n      ctx.lineCap = \"round\";\n      ctx.setLineDash([2, 4]);\n      ctx.strokeStyle = this.props.catenaryColor;\n      this.catenary.drawToCanvas(\n        this.ctx.interface,\n        brush,\n        pointer,\n        this.chainLength\n      );\n      ctx.stroke();\n    }\n\n    // Draw brush point (the one in the middle of the brush preview)\n    ctx.beginPath();\n    ctx.fillStyle = this.props.catenaryColor;\n    ctx.arc(brush.x, brush.y, 2, 0, Math.PI * 2, true);\n    ctx.fill();\n  };\n\n  render() {\n    return (\n      <div\n        className={this.props.className}\n        style={{\n          display: \"block\",\n          background: this.props.backgroundColor,\n          touchAction: \"none\",\n          width: this.props.canvasWidth,\n          height: this.props.canvasHeight,\n          ...this.props.style\n        }}\n        ref={container => {\n          if (container) {\n            this.canvasContainer = container;\n          }\n        }}\n      >\n        {canvasTypes.map(({ name, zIndex }) => {\n          const isInterface = name === \"interface\";\n          return (\n            <canvas\n              key={name}\n              ref={canvas => {\n                if (canvas) {\n                  this.canvas[name] = canvas;\n                  this.ctx[name] = canvas.getContext(\"2d\");\n                }\n              }}\n              style={{ ...canvasStyle, zIndex }}\n              onMouseDown={isInterface ? this.handleMouseDown : undefined}\n              onMouseMove={isInterface ? this.handleMouseMove : undefined}\n              onMouseUp={isInterface ? this.handleMouseUp : undefined}\n              onMouseOut={isInterface ? this.handleMouseUp : undefined}\n              onTouchStart={isInterface ? this.handleTouchStart : undefined}\n              onTouchMove={isInterface ? this.handleTouchMove : undefined}\n              onTouchEnd={isInterface ? this.handleTouchEnd : undefined}\n              onTouchCancel={isInterface ? this.handleTouchEnd : undefined}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 5\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/index.js\n// module id = 6\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/factoryWithThrowingShims.js\n// module id = 7\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/lib/ReactPropTypesSecret.js\n// module id = 8\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LazyPoint = exports.Point = exports.LazyBrush = undefined;\n\nvar _LazyBrush = require('./LazyBrush');\n\nvar _LazyBrush2 = _interopRequireDefault(_LazyBrush);\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nvar _LazyPoint = require('./LazyPoint');\n\nvar _LazyPoint2 = _interopRequireDefault(_LazyPoint);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.LazyBrush = _LazyBrush2.default;\nexports.Point = _Point2.default;\nexports.LazyPoint = _LazyPoint2.default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lazy-brush/lib/index.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _LazyPoint = require('./LazyPoint');\n\nvar _LazyPoint2 = _interopRequireDefault(_LazyPoint);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RADIUS_DEFAULT = 30;\n\nvar LazyBrush = function () {\n  /**\n   * constructor\n   *\n   * @param {object} settings\n   * @param {number} settings.radius The radius for the lazy area\n   * @param {boolean} settings.enabled\n   */\n  function LazyBrush() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$radius = _ref.radius,\n        radius = _ref$radius === undefined ? RADIUS_DEFAULT : _ref$radius,\n        _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === undefined ? true : _ref$enabled,\n        _ref$initialPoint = _ref.initialPoint,\n        initialPoint = _ref$initialPoint === undefined ? { x: 0, y: 0 } : _ref$initialPoint;\n\n    _classCallCheck(this, LazyBrush);\n\n    this.radius = radius;\n    this._isEnabled = enabled;\n\n    this.pointer = new _LazyPoint2.default(initialPoint.x, initialPoint.y);\n    this.brush = new _LazyPoint2.default(initialPoint.x, initialPoint.y);\n\n    this.angle = 0;\n    this.distance = 0;\n    this._hasMoved = false;\n  }\n\n  /**\n   * Enable lazy brush calculations.\n   *\n   */\n\n\n  _createClass(LazyBrush, [{\n    key: 'enable',\n    value: function enable() {\n      this._isEnabled = true;\n    }\n\n    /**\n     * Disable lazy brush calculations.\n     *\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this._isEnabled = false;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isEnabled',\n    value: function isEnabled() {\n      return this._isEnabled;\n    }\n\n    /**\n     * Update the radius\n     *\n     * @param {number} radius\n     */\n\n  }, {\n    key: 'setRadius',\n    value: function setRadius(radius) {\n      this.radius = radius;\n    }\n\n    /**\n     * Return the current radius\n     *\n     * @returns {number}\n     */\n\n  }, {\n    key: 'getRadius',\n    value: function getRadius() {\n      return this.radius;\n    }\n\n    /**\n     * Return the brush coordinates as a simple object\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: 'getBrushCoordinates',\n    value: function getBrushCoordinates() {\n      return this.brush.toObject();\n    }\n\n    /**\n     * Return the pointer coordinates as a simple object\n     *\n     * @returns {object}\n     */\n\n  }, {\n    key: 'getPointerCoordinates',\n    value: function getPointerCoordinates() {\n      return this.pointer.toObject();\n    }\n\n    /**\n     * Return the brush as a LazyPoint\n     *\n     * @returns {LazyPoint}\n     */\n\n  }, {\n    key: 'getBrush',\n    value: function getBrush() {\n      return this.brush;\n    }\n\n    /**\n     * Return the pointer as a LazyPoint\n     *\n     * @returns {LazyPoint}\n     */\n\n  }, {\n    key: 'getPointer',\n    value: function getPointer() {\n      return this.pointer;\n    }\n\n    /**\n     * Return the angle between pointer and brush\n     *\n     * @returns {number} Angle in radians\n     */\n\n  }, {\n    key: 'getAngle',\n    value: function getAngle() {\n      return this.angle;\n    }\n\n    /**\n     * Return the distance between pointer and brush\n     *\n     * @returns {number} Distance in pixels\n     */\n\n  }, {\n    key: 'getDistance',\n    value: function getDistance() {\n      return this.distance;\n    }\n\n    /**\n     * Return if the previous update has moved the brush.\n     *\n     * @returns {boolean} Whether the brush moved previously.\n     */\n\n  }, {\n    key: 'brushHasMoved',\n    value: function brushHasMoved() {\n      return this._hasMoved;\n    }\n\n    /**\n     * Updates the pointer point and calculates the new brush point.\n     *\n     * @param {Point} newPointerPoint\n     * @param {Object} options\n     * @param {Boolean} options.both Force update pointer and brush\n     * @returns {Boolean} Whether any of the two points changed\n     */\n\n  }, {\n    key: 'update',\n    value: function update(newPointerPoint) {\n      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref2$both = _ref2.both,\n          both = _ref2$both === undefined ? false : _ref2$both;\n\n      this._hasMoved = false;\n      if (this.pointer.equalsTo(newPointerPoint) && !both) {\n        return false;\n      }\n\n      this.pointer.update(newPointerPoint);\n\n      if (both) {\n        this._hasMoved = true;\n        this.brush.update(newPointerPoint);\n        return true;\n      }\n\n      if (this._isEnabled) {\n        this.distance = this.pointer.getDistanceTo(this.brush);\n        this.angle = this.pointer.getAngleTo(this.brush);\n\n        if (this.distance > this.radius) {\n          this.brush.moveByAngle(this.angle, this.distance - this.radius);\n          this._hasMoved = true;\n        }\n      } else {\n        this.distance = 0;\n        this.angle = 0;\n        this.brush.update(newPointerPoint);\n        this._hasMoved = true;\n      }\n\n      return true;\n    }\n  }]);\n\n  return LazyBrush;\n}();\n\nexports.default = LazyBrush;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lazy-brush/lib/LazyBrush.js\n// module id = 10\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Point = exports.Catenary = undefined;\n\nvar _Catenary = require('./Catenary');\n\nvar _Catenary2 = _interopRequireDefault(_Catenary);\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Catenary = _Catenary2.default;\nexports.Point = _Point2.default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/catenary-curve/lib/index.js\n// module id = 11\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\niven two points and a length, calculate and draw the catenary.\nnavaScript implementation:\nopyright (c) 2018 Jan Hug <me@dulnan.net>\neleased under the MIT license.\nnn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * \nriginal ActionScript implementation:\nopyright poiasd ( http://wonderfl.net/user/poiasd )\nicense ( http://www.opensource.org/licenses/mit-license.php )\nownloaded from: http://wonderfl.net/c/8Bnl\nnnnrchived by and downloaded from:\nhttp://wa.zozuar.org/code.php?c=8Bnl\nn\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EPSILON = 1e-6;\n\nvar Catenary = function () {\n  /**\n   * constructor\n   *\n   * @param {Object} settings\n   * @param {Number} settings.segments Number of segments of the chain.\n   * @param {Number} settings.iterationLimit Maximum amount iterations for getting catenary parameters.\n   */\n  function Catenary() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$segments = _ref.segments,\n        segments = _ref$segments === undefined ? 50 : _ref$segments,\n        _ref$iterationLimit = _ref.iterationLimit,\n        iterationLimit = _ref$iterationLimit === undefined ? 100 : _ref$iterationLimit;\n\n    _classCallCheck(this, Catenary);\n\n    this.p1 = new _Point2.default();\n    this.p2 = new _Point2.default();\n\n    this.segments = segments;\n    this.iterationLimit = iterationLimit;\n  }\n\n  /**\n   * Draws a catenary given two coordinates, a length and a context.\n   * \n   * @param {CanvasRenderingContext2D} context The canvas context to draw the catenary on to.\n   * @param {Point} p1 First point\n   * @param {Point} p2 Second point\n   * @param {Number} chainLength The length of the catenary\n   */\n\n\n  _createClass(Catenary, [{\n    key: 'drawToCanvas',\n    value: function drawToCanvas(context, point1, point2, chainLength) {\n      this.p1.update(point1);\n      this.p2.update(point2);\n\n      var isFlipped = this.p1.x > this.p2.x;\n\n      var p1 = isFlipped ? this.p2 : this.p1;\n      var p2 = isFlipped ? this.p1 : this.p2;\n\n      var distance = p1.getDistanceTo(p2);\n\n      var curveData = [];\n      var isStraight = true;\n\n      // Prevent \"expensive\" catenary calculations if it would only result\n      // in a straight line.\n      if (distance < chainLength) {\n        var diff = p2.x - p1.x;\n\n        // If the distance on the x axis of both points is too small, don't\n        // calculate a catenary.\n        if (diff > 0.01) {\n          var h = p2.x - p1.x;\n          var v = p2.y - p1.y;\n          var a = -this.getCatenaryParameter(h, v, chainLength, this.iterationLimit);\n          var x = (a * Math.log((chainLength + v) / (chainLength - v)) - h) * 0.5;\n          var y = a * Math.cosh(x / a);\n          var offsetX = p1.x - x;\n          var offsetY = p1.y - y;\n          curveData = this.getCurve(a, p1, p2, offsetX, offsetY, this.segments);\n          isStraight = false;\n        } else {\n          var mx = (p1.x + p2.x) * 0.5;\n          var my = (p1.y + p2.y + chainLength) * 0.5;\n\n          curveData = [[p1.x, p1.y], [mx, my], [p2.x, p2.y]];\n        }\n      } else {\n        curveData = [[p1.x, p1.y], [p2.x, p2.y]];\n      }\n\n      if (isStraight) {\n        this.drawLine(curveData, context);\n      } else {\n        this.drawCurve(curveData, context);\n      }\n\n      return curveData;\n    }\n\n    /**\n     * Determines catenary parameter.\n     * \n     * @param {Number} h Horizontal distance of both points.\n     * @param {Number} v Vertical distance of both points.\n     * @param {Number} length The catenary length.\n     * @param {Number} limit Maximum amount of iterations to find parameter.\n     */\n\n  }, {\n    key: 'getCatenaryParameter',\n    value: function getCatenaryParameter(h, v, length, limit) {\n      var m = Math.sqrt(length * length - v * v) / h;\n      var x = Math.acosh(m) + 1;\n      var prevx = -1;\n      var count = 0;\n\n      while (Math.abs(x - prevx) > EPSILON && count < limit) {\n        prevx = x;\n        x = x - (Math.sinh(x) - m * x) / (Math.cosh(x) - m);\n        count++;\n      }\n\n      return h / (2 * x);\n    }\n\n    /**\n     * Calculate the catenary curve.\n     * Increasing the segments value will produce a catenary closer\n     * to reality, but will require more calcluations.\n     * \n     * @param {Number} a The catenary parameter.\n     * @param {Point} p1 First point\n     * @param {Point} p2 Second point\n     * @param {Number} offsetX The calculated offset on the x axis.\n     * @param {Number} offsetY The calculated offset on the y axis.\n     * @param {Number} segments How many \"parts\" the chain should be made of.\n     */\n\n  }, {\n    key: 'getCurve',\n    value: function getCurve(a, p1, p2, offsetX, offsetY, segments) {\n      var data = [p1.x, a * Math.cosh((p1.x - offsetX) / a) + offsetY];\n\n      var d = p2.x - p1.x;\n      var length = segments - 1;\n\n      for (var i = 0; i < length; i++) {\n        var x = p1.x + d * (i + 0.5) / length;\n        var y = a * Math.cosh((x - offsetX) / a) + offsetY;\n        data.push(x, y);\n      }\n\n      data.push(p2.x, a * Math.cosh((p2.x - offsetX) / a) + offsetY);\n\n      return data;\n    }\n\n    /**\n     * Draws a straight line between two points.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     */\n\n  }, {\n    key: 'drawLine',\n    value: function drawLine(data, context) {\n      context.moveTo(data[0][0], data[0][1]);\n\n      context.lineTo(data[1][0], data[1][1]);\n    }\n\n    /**\n     * Draws a quadratic curve between every calculated catenary segment,\n     * so that the segments don't look like straight lines.\n     *\n     * @param {Array} data Even indices are x, odd are y.\n     * @param {CanvasRenderingContext2D} context The context to draw to.\n     * \n     * @returns {Array} The original segment coordinates.\n     */\n\n  }, {\n    key: 'drawCurve',\n    value: function drawCurve(data, context) {\n      var length = data.length * 0.5 - 1;\n      var ox = data[2];\n      var oy = data[3];\n\n      var temp = [];\n\n      context.moveTo(data[0], data[1]);\n\n      for (var i = 2; i < length; i++) {\n        var x = data[i * 2];\n        var y = data[i * 2 + 1];\n        var mx = (x + ox) * 0.5;\n        var my = (y + oy) * 0.5;\n        temp.push([ox, oy, mx, my]);\n        context.quadraticCurveTo(ox, oy, mx, my);\n        ox = x;\n        oy = y;\n      }\n\n      length = data.length;\n      context.quadraticCurveTo(data[length - 4], data[length - 3], data[length - 2], data[length - 1]);\n\n      return temp;\n    }\n  }]);\n\n  return Catenary;\n}();\n\nexports.default = Catenary;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/catenary-curve/lib/Catenary.js\n// module id = 12\n// module chunks = 0","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nexport default index;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\n// module id = 13\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 14\n// module chunks = 0","/** \n * Original from: https://stackoverflow.com/questions/21961839/simulation-background-size-cover-in-canvas\n * Original By Ken Fyrstenberg Nilsen\n * \n * Note: img must be fully loaded or have correct width & height set.\n */\nexport default function drawImageProp({ctx, img, x, y, w, h, offsetX, offsetY} = {}) {\n  // Defaults\n  if (typeof x !== \"number\") x = 0;\n  if (typeof y !== \"number\") y = 0;\n  if (typeof w !== \"number\") w = ctx.canvas.width;\n  if (typeof h !== \"number\") h = ctx.canvas.height;\n  if (typeof offsetX !== \"number\") offsetX = 0.5;\n  if (typeof offsetY !== \"number\") offsetY = 0.5;\n\n  // keep bounds [0.0, 1.0]\n  if (offsetX < 0) offsetX = 0;\n  if (offsetY < 0) offsetY = 0;\n  if (offsetX > 1) offsetX = 1;\n  if (offsetY > 1) offsetY = 1;\n\n  var iw = img.width,\n    ih = img.height,\n    r = Math.min(w / iw, h / ih),\n    nw = iw * r, // new prop. width\n    nh = ih * r, // new prop. height\n    cx,\n    cy,\n    cw,\n    ch,\n    ar = 1;\n\n  // decide which gap to fill\n  if (nw < w) ar = w / nw;\n  if (Math.abs(ar - 1) < 1e-14 && nh < h) ar = h / nh; // updated\n  nw *= ar;\n  nh *= ar;\n\n  // calc source rectangle\n  cw = iw / (nw / w);\n  ch = ih / (nh / h);\n\n  cx = (iw - cw) * offsetX;\n  cy = (ih - ch) * offsetY;\n\n  // make sure source rectangle is valid\n  if (cx < 0) cx = 0;\n  if (cy < 0) cy = 0;\n  if (cw > iw) cw = iw;\n  if (ch > ih) ch = ih;\n\n  // fill image in dest. rectangle\n  ctx.drawImage(img, cx, cy, cw, ch, x, y, w, h);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawImage.js"],"sourceRoot":""}