{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Chat/Chat.js\";\nimport React, { useState, useRef } from \"react\";\nimport \"./Chat.scss\";\nimport Message from \"../Message/Message\";\n\nfunction Chat() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        messages = _useState2[0],\n        addMessage = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        input = _useState4[0],\n        changeInput = _useState4[1];\n\n  const messagesRef = useRef();\n\n  const submitMessage = e => {\n    console.log(messagesRef.current.scrollHeight);\n\n    if (e.charCode === 13) {\n      changeInput(\"\");\n      addMessage([...messages, React.createElement(Message, {\n        message: input,\n        key: messages.length + 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      })]);\n      messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Chat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"messages\",\n    ref: messagesRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, messages.map((e, index) => {\n    return e;\n  })), React.createElement(\"input\", {\n    value: input,\n    onChange: e => changeInput(e.target.value),\n    onKeyPress: submitMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Chat/Chat.js"],"names":["React","useState","useRef","Message","Chat","messages","addMessage","input","changeInput","messagesRef","submitMessage","e","console","log","current","scrollHeight","charCode","length","scrollTop","map","index","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,SAASC,IAAT,GAAgB;AAAA,oBACiBH,QAAQ,CAAC,EAAD,CADzB;AAAA;AAAA,QACPI,QADO;AAAA,QACGC,UADH;;AAAA,qBAEeL,QAAQ,CAAC,EAAD,CAFvB;AAAA;AAAA,QAEPM,KAFO;AAAA,QAEAC,WAFA;;AAId,QAAMC,WAAW,GAAGP,MAAM,EAA1B;;AAEA,QAAMQ,aAAa,GAAGC,CAAC,IAAI;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAW,CAACK,OAAZ,CAAoBC,YAAhC;;AACA,QAAIJ,CAAC,CAACK,QAAF,KAAe,EAAnB,EAAuB;AACrBR,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAF,MAAAA,UAAU,CAAC,CACT,GAAGD,QADM,EAET,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAEE,KAAlB;AAAyB,QAAA,GAAG,EAAEF,QAAQ,CAACY,MAAT,GAAkB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFS,CAAD,CAAV;AAIAR,MAAAA,WAAW,CAACK,OAAZ,CAAoBI,SAApB,GAAgCT,WAAW,CAACK,OAAZ,CAAoBC,YAApD;AACD;AACF,GAVD;;AAYA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAEN,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,CAACc,GAAT,CAAa,CAACR,CAAD,EAAIS,KAAJ,KAAc;AAC1B,WAAOT,CAAP;AACD,GAFA,CADH,CADF,EAME;AACE,IAAA,KAAK,EAAEJ,KADT;AAEE,IAAA,QAAQ,EAAEI,CAAC,IAAIH,WAAW,CAACG,CAAC,CAACU,MAAF,CAASC,KAAV,CAF5B;AAGE,IAAA,UAAU,EAAEZ,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAcD;;AAED,eAAeN,IAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./Chat.scss\";\nimport Message from \"../Message/Message\";\n\nfunction Chat() {\n  const [messages, addMessage] = useState([]);\n  const [input, changeInput] = useState(\"\");\n\n  const messagesRef = useRef();\n\n  const submitMessage = e => {\n    console.log(messagesRef.current.scrollHeight);\n    if (e.charCode === 13) {\n      changeInput(\"\");\n      addMessage([\n        ...messages,\n        <Message message={input} key={messages.length + 1} />\n      ]);\n      messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n    }\n  };\n\n  return (\n    <div className=\"Chat\">\n      <div className=\"messages\" ref={messagesRef}>\n        {messages.map((e, index) => {\n          return e;\n        })}\n      </div>\n      <input\n        value={input}\n        onChange={e => changeInput(e.target.value)}\n        onKeyPress={submitMessage}\n      ></input>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}