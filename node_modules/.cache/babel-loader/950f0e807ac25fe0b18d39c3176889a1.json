{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/WordBlock/WordBlock.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport \"./WordBlock.scss\";\nimport SocketContext from \"../../context\";\nimport { useSelector } from \"react-redux\";\n\nfunction WordBlock() {\n  let _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        word = _useState2[0],\n        setWord = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        gameInProgress = _useState4[0],\n        setStatus = _useState4[1];\n\n  const _useSelector = useSelector(state => state.contactReducer),\n        room = _useSelector.room;\n\n  const canDraw = useSelector(state => state.canDrawReducer);\n  useEffect(() => {\n    socket.on(\"roundEnded\", () => {\n      setStatus(false);\n    });\n    socket.on(\"roundInProgress\", () => {\n      setStatus(true);\n    });\n  }, [socket, gameInProgress]);\n  useEffect(() => {\n    socket.on(\"sendTime\", res => {\n      const time = res.find(i => i.roomId === room);\n      if (time) setWord(time.gameData.word);\n    });\n  }, [socket, word, room]);\n\n  const renderWord = () => {\n    let colorPreset;\n\n    if (canDraw) {\n      colorPreset = \"black\";\n    } else {\n      colorPreset = \"transparent\";\n    }\n\n    return word.split(\"\").map((i, index) => {\n      //   index > 1 ? (colorPreset = \"black\") : (colorPreset = \"transparent\");\n      return React.createElement(\"span\", {\n        style: {\n          color: colorPreset\n        },\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          color: colorPreset\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, i));\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"WordBlock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, renderWord());\n}\n\nexport default WordBlock;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/WordBlock/WordBlock.js"],"names":["React","useContext","useState","useEffect","SocketContext","useSelector","WordBlock","socket","word","setWord","gameInProgress","setStatus","state","contactReducer","room","canDraw","canDrawReducer","on","res","time","find","i","roomId","gameData","renderWord","colorPreset","split","map","index","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAO,kBAAP;AACA,OAAOC,aAAP,MAA0B,eAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,SAASC,SAAT,GAAqB;AAAA,oBACFL,UAAU,CAACG,aAAD,CADR;AAAA,MACbG,MADa,eACbA,MADa;;AAAA,oBAEKL,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,QAEZM,IAFY;AAAA,QAENC,OAFM;;AAAA,qBAGiBP,QAAQ,EAHzB;AAAA;AAAA,QAGZQ,cAHY;AAAA,QAGIC,SAHJ;;AAAA,uBAIFN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAJT;AAAA,QAIXC,IAJW,gBAIXA,IAJW;;AAKnB,QAAMC,OAAO,GAAGV,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACI,cAAhB,CAA3B;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACU,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5BN,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAFD;AAIAJ,IAAAA,MAAM,CAACU,EAAP,CAAU,iBAAV,EAA6B,MAAM;AACjCN,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFD;AAGD,GARQ,EAQN,CAACJ,MAAD,EAASG,cAAT,CARM,CAAT;AAUAP,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACU,EAAP,CAAU,UAAV,EAAsBC,GAAG,IAAI;AAC3B,YAAMC,IAAI,GAAGD,GAAG,CAACE,IAAJ,CAASC,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaR,IAA3B,CAAb;AACA,UAAIK,IAAJ,EAAUV,OAAO,CAACU,IAAI,CAACI,QAAL,CAAcf,IAAf,CAAP;AACX,KAHD;AAID,GALQ,EAKN,CAACD,MAAD,EAASC,IAAT,EAAeM,IAAf,CALM,CAAT;;AAOA,QAAMU,UAAU,GAAG,MAAM;AACvB,QAAIC,WAAJ;;AAEA,QAAIV,OAAJ,EAAa;AACXU,MAAAA,WAAW,GAAG,OAAd;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,GAAG,aAAd;AACD;;AACD,WAAOjB,IAAI,CAACkB,KAAL,CAAW,EAAX,EAAeC,GAAf,CAAmB,CAACN,CAAD,EAAIO,KAAJ,KAAc;AACtC;AACA,aACE;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAEJ;AAAT,SAAb;AAAqC,QAAA,GAAG,EAAEG,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAEJ;AAAT,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCJ,CAAnC,CADF,CADF;AAKD,KAPM,CAAP;AAQD,GAhBD;;AAkBA,SAAO;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BG,UAAU,EAAtC,CAAP;AACD;;AAED,eAAelB,SAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport \"./WordBlock.scss\";\nimport SocketContext from \"../../context\";\nimport { useSelector } from \"react-redux\";\n\nfunction WordBlock() {\n  let { socket } = useContext(SocketContext);\n  const [word, setWord] = useState(\"\");\n  const [gameInProgress, setStatus] = useState();\n  const { room } = useSelector(state => state.contactReducer);\n  const canDraw = useSelector(state => state.canDrawReducer);\n\n  useEffect(() => {\n    socket.on(\"roundEnded\", () => {\n      setStatus(false);\n    });\n\n    socket.on(\"roundInProgress\", () => {\n      setStatus(true);\n    });\n  }, [socket, gameInProgress]);\n\n  useEffect(() => {\n    socket.on(\"sendTime\", res => {\n      const time = res.find(i => i.roomId === room);\n      if (time) setWord(time.gameData.word);\n    });\n  }, [socket, word, room]);\n\n  const renderWord = () => {\n    let colorPreset;\n\n    if (canDraw) {\n      colorPreset = \"black\";\n    } else {\n      colorPreset = \"transparent\";\n    }\n    return word.split(\"\").map((i, index) => {\n      //   index > 1 ? (colorPreset = \"black\") : (colorPreset = \"transparent\");\n      return (\n        <span style={{ color: colorPreset }} key={index}>\n          <p style={{ color: colorPreset }}>{i}</p>\n        </span>\n      );\n    });\n  };\n\n  return <div className=\"WordBlock\">{renderWord()}</div>;\n}\n\nexport default WordBlock;\n"]},"metadata":{},"sourceType":"module"}