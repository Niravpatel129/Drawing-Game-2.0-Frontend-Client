{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/UserList/UserList.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./UserList.scss\";\nimport SocketContext from \"../../context\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ProfileCard from \"../ProfileCard/ProfileCard\";\nimport FlipMove from \"react-flip-move\";\n\nfunction UserList() {\n  const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        roomData = _useState2[0],\n        setRoomData = _useState2[1];\n\n  let _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  let _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      updateUsers = _useState4[1];\n\n  let _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      drawerId = _useState6[0],\n      updateDrawer = _useState6[1];\n\n  let _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      drawerName = _useState8[0],\n      updateDrawerName = _useState8[1];\n\n  const _useSelector = useSelector(state => state.contactReducer),\n        room = _useSelector.room;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (roomData && (roomData === null || roomData === void 0 ? void 0 : roomData.gamedata.drawer)) {\n      if (roomData === null || roomData === void 0 ? void 0 : roomData.gamedata.drawer.user) {\n        if (localStorageData.googleId === (roomData === null || roomData === void 0 ? void 0 : roomData.gamedata.drawer.user.googleUserInfo.googleId)) {\n          dispatch({\n            type: \"SET_DRAW\",\n            payload: true\n          });\n        } else {\n          dispatch({\n            type: \"SET_DRAW\",\n            payload: false\n          });\n        }\n      }\n    }\n\n    if (roomData) {\n      if (users.length >= 2 && !(roomData === null || roomData === void 0 ? void 0 : roomData.gamedata.gameStarted)) {\n        socket.emit(\"gameStart\", room);\n      }\n    }\n\n    socket.on(\"gameStart\", room => {\n      if (room) {\n        dispatch({\n          type: \"SET_NOTIFICATION\",\n          payload: true\n        });\n        dispatch({\n          type: \"SET_MESSAGE\",\n          payload: `Room ${room} has started the game ðŸŽ®`\n        });\n      }\n    });\n  }, [users, roomData, socket, room, dispatch, localStorageData]);\n  useEffect(() => {\n    socket.on(\"checkUserListAgain\", () => {\n      socket.emit(\"getUserList\", room);\n    });\n    socket.on(\"getAllUsers\", res => {\n      if (res !== users) updateUsers(res);\n    });\n    socket.on(\"sendTime\", res => {\n      var _draw$gamedata;\n\n      const draw = res === null || res === void 0 ? void 0 : res.find(i => i.roomId === room);\n      setRoomData(draw);\n\n      if (draw === null || draw === void 0 ? void 0 : (_draw$gamedata = draw.gamedata) === null || _draw$gamedata === void 0 ? void 0 : _draw$gamedata.drawer) {\n        var _draw$gamedata2, _draw$gamedata2$drawe;\n\n        if (draw && (draw === null || draw === void 0 ? void 0 : (_draw$gamedata2 = draw.gamedata) === null || _draw$gamedata2 === void 0 ? void 0 : (_draw$gamedata2$drawe = _draw$gamedata2.drawer) === null || _draw$gamedata2$drawe === void 0 ? void 0 : _draw$gamedata2$drawe.user)) {\n          updateDrawerName(draw === null || draw === void 0 ? void 0 : draw.gamedata.drawer.user.googleUserInfo.name);\n          updateDrawer(draw === null || draw === void 0 ? void 0 : draw.gamedata.drawer.user.googleUserInfo.googleId);\n        }\n      }\n    });\n  }, [socket, room, users]);\n  useEffect(() => {\n    if (drawerName) {\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        payload: true\n      });\n      dispatch({\n        type: \"SET_MESSAGE\",\n        payload: `${drawerName} is now Drawing ðŸŽ¨ðŸŽ¨`\n      });\n    }\n  }, [drawerId, dispatch, drawerName]);\n\n  const renderUser = () => {\n    if (users) {\n      const sortedUsers = users.sort((a, b) => {\n        return b.points - a.points;\n      });\n      return sortedUsers.map((i, index) => {\n        const drawing = i.user.googleUserInfo.googleId === drawerId && (roomData === null || roomData === void 0 ? void 0 : roomData.gamedata.gameStarted);\n        return React.createElement(ProfileCard, {\n          index: index,\n          key: index,\n          points: i.points,\n          src: i.user.googleUserInfo.imageUrl,\n          name: i.user.googleUserInfo.name,\n          drawing: drawing,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        });\n      });\n    }\n  };\n\n  const settings = () => {\n    console.log(\"clicked settings\");\n  };\n\n  return React.createElement(\"div\", {\n    className: \"UserList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Ranking\"), React.createElement(\"div\", {\n    className: \"usersparent\",\n    id: \"parent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"users disable-scrollbars\",\n    id: \"child\",\n    style: {\n      position: \"relative\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(FlipMove, {\n    className: \"FlipMove\",\n    duration: 500,\n    easing: \"ease-in-out\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, renderUser(), renderUser(), renderUser(), renderUser(), renderUser(), renderUser(), renderUser()))), React.createElement(\"img\", {\n    onClick: settings,\n    alt: \"settings\",\n    src: \"https://i.imgur.com/op3hLAL.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }));\n}\n\nexport default UserList;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/UserList/UserList.js"],"names":["React","useContext","useEffect","useState","SocketContext","useSelector","useDispatch","ProfileCard","FlipMove","UserList","localStorageData","JSON","parse","localStorage","getItem","roomData","setRoomData","socket","users","updateUsers","drawerId","updateDrawer","drawerName","updateDrawerName","state","contactReducer","room","dispatch","gamedata","drawer","user","googleId","googleUserInfo","type","payload","length","gameStarted","emit","on","res","draw","find","i","roomId","name","renderUser","sortedUsers","sort","a","b","points","map","index","drawing","imageUrl","settings","console","log","position"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport \"./UserList.scss\";\nimport SocketContext from \"../../context\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ProfileCard from \"../ProfileCard/ProfileCard\";\nimport FlipMove from \"react-flip-move\";\n\nfunction UserList() {\n  const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n  const [roomData, setRoomData] = useState();\n  let { socket } = useContext(SocketContext);\n  let [users, updateUsers] = useState([]);\n  let [drawerId, updateDrawer] = useState();\n  let [drawerName, updateDrawerName] = useState(\"\");\n  const { room } = useSelector(state => state.contactReducer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (roomData && roomData?.gamedata.drawer) {\n      if (roomData?.gamedata.drawer.user) {\n        if (\n          localStorageData.googleId ===\n          roomData?.gamedata.drawer.user.googleUserInfo.googleId\n        ) {\n          dispatch({ type: \"SET_DRAW\", payload: true });\n        } else {\n          dispatch({ type: \"SET_DRAW\", payload: false });\n        }\n      }\n    }\n    if (roomData) {\n      if (users.length >= 2 && !roomData?.gamedata.gameStarted) {\n        socket.emit(\"gameStart\", room);\n      }\n    }\n\n    socket.on(\"gameStart\", room => {\n      if (room) {\n        dispatch({ type: \"SET_NOTIFICATION\", payload: true });\n        dispatch({\n          type: \"SET_MESSAGE\",\n          payload: `Room ${room} has started the game ðŸŽ®`\n        });\n      }\n    });\n  }, [users, roomData, socket, room, dispatch, localStorageData]);\n\n  useEffect(() => {\n    socket.on(\"checkUserListAgain\", () => {\n      socket.emit(\"getUserList\", room);\n    });\n\n    socket.on(\"getAllUsers\", res => {\n      if (res !== users) updateUsers(res);\n    });\n\n    socket.on(\"sendTime\", res => {\n      const draw = res?.find(i => i.roomId === room);\n      setRoomData(draw);\n      if (draw?.gamedata?.drawer) {\n        if (draw && draw?.gamedata?.drawer?.user) {\n          updateDrawerName(draw?.gamedata.drawer.user.googleUserInfo.name);\n          updateDrawer(draw?.gamedata.drawer.user.googleUserInfo.googleId);\n        }\n      }\n    });\n  }, [socket, room, users]);\n\n  useEffect(() => {\n    if (drawerName) {\n      dispatch({ type: \"SET_NOTIFICATION\", payload: true });\n      dispatch({\n        type: \"SET_MESSAGE\",\n        payload: `${drawerName} is now Drawing ðŸŽ¨ðŸŽ¨`\n      });\n    }\n  }, [drawerId, dispatch, drawerName]);\n\n  const renderUser = () => {\n    if (users) {\n      const sortedUsers = users.sort((a, b) => {\n        return b.points - a.points;\n      });\n\n      return sortedUsers.map((i, index) => {\n        const drawing =\n          i.user.googleUserInfo.googleId === drawerId &&\n          roomData?.gamedata.gameStarted;\n        return (\n          <ProfileCard\n            index={index}\n            key={index}\n            points={i.points}\n            src={i.user.googleUserInfo.imageUrl}\n            name={i.user.googleUserInfo.name}\n            drawing={drawing}\n          />\n        );\n      });\n    }\n  };\n  const settings = () => {\n    console.log(\"clicked settings\");\n  };\n\n  return (\n    <div className=\"UserList\">\n      <h2>Ranking</h2>\n      <div className=\"usersparent\" id=\"parent\">\n        <div\n          className=\"users disable-scrollbars\"\n          id=\"child\"\n          style={{ position: \"relative\" }}\n        >\n          <FlipMove className=\"FlipMove\" duration={500} easing=\"ease-in-out\">\n            {renderUser()}\n            {renderUser()}\n            {renderUser()}\n            {renderUser()}\n            {renderUser()}\n            {renderUser()}\n            {renderUser()}\n          </FlipMove>\n        </div>\n      </div>\n      <img\n        onClick={settings}\n        alt=\"settings\"\n        src=\"https://i.imgur.com/op3hLAL.png\"\n      ></img>\n    </div>\n  );\n}\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}