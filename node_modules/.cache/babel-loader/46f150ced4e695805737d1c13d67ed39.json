{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/UserList/UserList.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./UserList.scss\";\nimport SocketContext from \"../../context\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ProfileCard from \"../ProfileCard/ProfileCard\";\n\nfunction UserList() {\n  const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        roomData = _useState2[0],\n        setRoomData = _useState2[1];\n\n  let _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  let _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      updateUsers = _useState4[1];\n\n  let _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      drawerId = _useState6[0],\n      updateDrawer = _useState6[1];\n\n  let _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      drawerName = _useState8[0],\n      updateDrawerName = _useState8[1];\n\n  const _useSelector = useSelector(state => state.contactReducer),\n        room = _useSelector.room;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (roomData && roomData.gameData.drawer) {\n      if (roomData.gameData.drawer.user) {\n        if (localStorageData.googleId === roomData.gameData.drawer.user.googleUserInfo.googleId) {\n          dispatch({\n            type: \"SET_DRAW\",\n            payload: true\n          });\n        } else {\n          dispatch({\n            type: \"SET_DRAW\",\n            payload: false\n          });\n        }\n      }\n    }\n\n    if (roomData) {\n      if (users.length >= 2 && !roomData.gameData.gameStarted) {\n        socket.emit(\"gameStart\", room);\n      }\n    }\n\n    socket.on(\"gameStart\", room => {\n      if (room) {\n        dispatch({\n          type: \"SET_NOTIFICATION\",\n          payload: true\n        });\n        dispatch({\n          type: \"SET_MESSAGE\",\n          payload: `Room ${room} has started the game 🎮`\n        });\n      }\n    });\n  }, [users, roomData, socket, room, dispatch, localStorageData]);\n  useEffect(() => {\n    socket.on(\"checkUserListAgain\", () => {\n      socket.emit(\"getUserList\", room);\n    });\n    socket.on(\"getAllUsers\", res => {\n      updateUsers(res);\n    });\n    socket.on(\"sendTime\", res => {\n      const draw = res.find(i => i.roomId === room);\n      setRoomData(draw);\n\n      if (draw.gameData.drawer) {\n        if (draw && draw.gameData.drawer.user) {\n          updateDrawerName(draw.gameData.drawer.user.googleUserInfo.name);\n          updateDrawer(draw.gameData.drawer.user.googleUserInfo.googleId);\n        }\n      }\n    });\n  }, [socket, room]);\n  useEffect(() => {\n    if (drawerName) {\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        payload: true\n      });\n      dispatch({\n        type: \"SET_MESSAGE\",\n        payload: `${drawerName} is now Drawing 🎨🎨`\n      });\n    }\n  }, [drawerId, dispatch, drawerName]);\n\n  const renderUser = () => {\n    if (users) {\n      const sortedUsers = users.sort((a, b) => {\n        return b.points - a.points;\n      });\n      return sortedUsers.map((i, index) => {\n        const drawing = i.user.googleUserInfo.googleId === drawerId && roomData.gameData.gameStarted;\n        return (// <ProfileCard key={index}/>\n          React.createElement(\"div\", {\n            className: \"user-card\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, i.user.googleUserInfo.name, drawing && React.createElement(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"pencil\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, \" \", \"\\u270F\\uFE0F\")), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, i.points, \" Points\"))\n        );\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"UserList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Ranking\"), React.createElement(\"div\", {\n    className: \"usersparent\",\n    id: \"parent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"users\",\n    id: \"child\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(ProfileCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(ProfileCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(ProfileCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(ProfileCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }))));\n}\n\nexport default UserList;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/UserList/UserList.js"],"names":["React","useContext","useEffect","useState","SocketContext","useSelector","useDispatch","ProfileCard","UserList","localStorageData","JSON","parse","localStorage","getItem","roomData","setRoomData","socket","users","updateUsers","drawerId","updateDrawer","drawerName","updateDrawerName","state","contactReducer","room","dispatch","gameData","drawer","user","googleId","googleUserInfo","type","payload","length","gameStarted","emit","on","res","draw","find","i","roomId","name","renderUser","sortedUsers","sort","a","b","points","map","index","drawing"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport \"./UserList.scss\";\nimport SocketContext from \"../../context\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ProfileCard from \"../ProfileCard/ProfileCard\";\n\nfunction UserList() {\n  const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n  const [roomData, setRoomData] = useState();\n  let { socket } = useContext(SocketContext);\n  let [users, updateUsers] = useState([]);\n  let [drawerId, updateDrawer] = useState();\n  let [drawerName, updateDrawerName] = useState(\"\");\n  const { room } = useSelector(state => state.contactReducer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (roomData && roomData.gameData.drawer) {\n      if (roomData.gameData.drawer.user) {\n        if (\n          localStorageData.googleId ===\n          roomData.gameData.drawer.user.googleUserInfo.googleId\n        ) {\n          dispatch({ type: \"SET_DRAW\", payload: true });\n        } else {\n          dispatch({ type: \"SET_DRAW\", payload: false });\n        }\n      }\n    }\n    if (roomData) {\n      if (users.length >= 2 && !roomData.gameData.gameStarted) {\n        socket.emit(\"gameStart\", room);\n      }\n    }\n\n    socket.on(\"gameStart\", room => {\n      if (room) {\n        dispatch({ type: \"SET_NOTIFICATION\", payload: true });\n        dispatch({\n          type: \"SET_MESSAGE\",\n          payload: `Room ${room} has started the game 🎮`\n        });\n      }\n    });\n  }, [users, roomData, socket, room, dispatch, localStorageData]);\n\n  useEffect(() => {\n    socket.on(\"checkUserListAgain\", () => {\n      socket.emit(\"getUserList\", room);\n    });\n\n    socket.on(\"getAllUsers\", res => {\n      updateUsers(res);\n    });\n\n    socket.on(\"sendTime\", res => {\n      const draw = res.find(i => i.roomId === room);\n      setRoomData(draw);\n      if (draw.gameData.drawer) {\n        if (draw && draw.gameData.drawer.user) {\n          updateDrawerName(draw.gameData.drawer.user.googleUserInfo.name);\n          updateDrawer(draw.gameData.drawer.user.googleUserInfo.googleId);\n        }\n      }\n    });\n  }, [socket, room]);\n\n  useEffect(() => {\n    if (drawerName) {\n      dispatch({ type: \"SET_NOTIFICATION\", payload: true });\n      dispatch({\n        type: \"SET_MESSAGE\",\n        payload: `${drawerName} is now Drawing 🎨🎨`\n      });\n    }\n  }, [drawerId, dispatch, drawerName]);\n\n  const renderUser = () => {\n    if (users) {\n      const sortedUsers = users.sort((a, b) => {\n        return b.points - a.points;\n      });\n\n      return sortedUsers.map((i, index) => {\n        const drawing =\n          i.user.googleUserInfo.googleId === drawerId &&\n          roomData.gameData.gameStarted;\n        return (\n          // <ProfileCard key={index}/>\n\n          <div className=\"user-card\" key={index}>\n            <h3>\n              {i.user.googleUserInfo.name}\n              {drawing && (\n                <span role=\"img\" aria-label=\"pencil\">\n                  {\" \"}\n                  ✏️\n                </span>\n              )}\n            </h3>\n            <p>{i.points} Points</p>\n          </div>\n        );\n      });\n    }\n  };\n\n  return (\n    <div className=\"UserList\">\n      <h2>Ranking</h2>\n      <div className=\"usersparent\" id=\"parent\">\n        <div className=\"users\" id=\"child\">\n          <ProfileCard />\n          <ProfileCard />\n          <ProfileCard />\n          <ProfileCard />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}