{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Canvas/Canvas.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport \"./Canvas.scss\";\nimport { isMobile } from \"react-device-detect\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport io from \"socket.io-client\";\n\nfunction Canvas() {\n  const canvas = useRef();\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        saved = _useState2[0],\n        updatedSaved = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        socket = _useState4[0],\n        updateSocket = _useState4[1];\n\n  useEffect(() => {\n    updateSocket(io.connect(\"http://localhost:5000/\"));\n    setInterval(() => {\n      console.log(socket);\n      if (socket) socket.emit(\"drawingData\", saved);\n    }, 500);\n  }, []);\n\n  if (socket) {\n    socket.on(\"updateData\", data => {\n      if (data) {\n        console.log(\"drawing\");\n        canvas.current.loadSaveData(data, true);\n      }\n    });\n  }\n\n  const undo = () => {\n    canvas.current.undo();\n  };\n\n  const handleOnChange = () => {\n    updatedSaved(canvas.current.getSaveData());\n  };\n\n  return React.createElement(\"section\", {\n    className: \"Canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, !isMobile ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(CanvasDraw, {\n    ref: canvas,\n    canvasWidth: 1200,\n    canvasHeight: 550,\n    disabled: false,\n    lazyRadius: 0,\n    hideInterface: false,\n    onChange: handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: undo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Undo\")) : React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Mobile not supported\"));\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Canvas/Canvas.js"],"names":["React","useRef","useState","useEffect","isMobile","CanvasDraw","io","Canvas","canvas","saved","updatedSaved","socket","updateSocket","connect","setInterval","console","log","emit","on","data","current","loadSaveData","undo","handleOnChange","getSaveData"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,eAAP;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAMC,MAAM,GAAGP,MAAM,EAArB;;AADgB,oBAEcC,QAAQ,EAFtB;AAAA;AAAA,QAETO,KAFS;AAAA,QAEFC,YAFE;;AAAA,qBAGeR,QAAQ,EAHvB;AAAA;AAAA,QAGTS,MAHS;AAAA,QAGDC,YAHC;;AAKhBT,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACN,EAAE,CAACO,OAAH,CAAW,wBAAX,CAAD,CAAZ;AAEAC,IAAAA,WAAW,CAAC,MAAM;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,UAAIA,MAAJ,EAAYA,MAAM,CAACM,IAAP,CAAY,aAAZ,EAA2BR,KAA3B;AACb,KAHU,EAGR,GAHQ,CAAX;AAID,GAPQ,EAON,EAPM,CAAT;;AASA,MAAIE,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACO,EAAP,CAAU,YAAV,EAAwBC,IAAI,IAAI;AAC9B,UAAIA,IAAJ,EAAU;AACRJ,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAR,QAAAA,MAAM,CAACY,OAAP,CAAeC,YAAf,CAA4BF,IAA5B,EAAkC,IAAlC;AACD;AACF,KALD;AAMD;;AAED,QAAMG,IAAI,GAAG,MAAM;AACjBd,IAAAA,MAAM,CAACY,OAAP,CAAeE,IAAf;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC3Bb,IAAAA,YAAY,CAACF,MAAM,CAACY,OAAP,CAAeI,WAAf,EAAD,CAAZ;AACD,GAFD;;AAIA,SACE;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACpB,QAAD,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,GAAG,EAAEI,MADP;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,YAAY,EAAE,GAHhB;AAIE,IAAA,QAAQ,EAAE,KAJZ;AAKE,IAAA,UAAU,EAAE,CALd;AAME,IAAA,aAAa,EAAE,KANjB;AAOE,IAAA,QAAQ,EAAEe,cAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE;AAAQ,IAAA,OAAO,EAAED,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,CADD,GAcC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAfJ,CADF;AAoBD;;AAED,eAAef,MAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport \"./Canvas.scss\";\nimport { isMobile } from \"react-device-detect\";\nimport CanvasDraw from \"react-canvas-draw\";\n\nimport io from \"socket.io-client\";\n\nfunction Canvas() {\n  const canvas = useRef();\n  const [saved, updatedSaved] = useState();\n  const [socket, updateSocket] = useState();\n\n  useEffect(() => {\n    updateSocket(io.connect(\"http://localhost:5000/\"));\n\n    setInterval(() => {\n      console.log(socket);\n      if (socket) socket.emit(\"drawingData\", saved);\n    }, 500);\n  }, []);\n\n  if (socket) {\n    socket.on(\"updateData\", data => {\n      if (data) {\n        console.log(\"drawing\");\n        canvas.current.loadSaveData(data, true);\n      }\n    });\n  }\n\n  const undo = () => {\n    canvas.current.undo();\n  };\n\n  const handleOnChange = () => {\n    updatedSaved(canvas.current.getSaveData());\n  };\n\n  return (\n    <section className=\"Canvas\">\n      {!isMobile ? (\n        <div>\n          <CanvasDraw\n            ref={canvas}\n            canvasWidth={1200}\n            canvasHeight={550}\n            disabled={false}\n            lazyRadius={0}\n            hideInterface={false}\n            onChange={handleOnChange}\n          />\n          <button onClick={undo}>Undo</button>\n        </div>\n      ) : (\n        <h1>Mobile not supported</h1>\n      )}\n    </section>\n  );\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}