{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/RoomList/RoomList.js\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport \"./RoomList.scss\";\nimport SocketContext from \"../../context\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\n\nfunction RoomList() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  let _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  let _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      rooms = _useState2[0],\n      updateRoomList = _useState2[1];\n\n  let _useState3 = useState(\"No Rooms\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      changeTitle = _useState4[1];\n\n  useEffect(() => {\n    socket.emit(\"getAllRooms\");\n  }, [socket]);\n  useEffect(() => {\n    socket.on(\"sendAllRooms\", res => {\n      console.log(res);\n\n      if (res.length > 0) {\n        changeTitle(\"Rooms\");\n      }\n\n      updateRoomList(res);\n    });\n  }, [socket, rooms]);\n\n  const redirect = room => {\n    const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n\n    if (localStorageData) {\n      dispatch({\n        type: \"SET_INFO\",\n        payload: {\n          name: localStorageData.name,\n          room\n        }\n      });\n      history.push(\"/canvas\");\n    }\n  };\n\n  const renderRooms = () => {\n    if (rooms.length > 0) {\n      return rooms.map((i, index) => {\n        return React.createElement(\"div\", {\n          className: \"list-item\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Room \", i.roomId || \"Room Name\"), React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, i.users.length, \"/4\"), React.createElement(\"button\", {\n          onClick: e => redirect(i.roomId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, i.users.length > 4 ? \"FULL\" : \"Join\"));\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"RoomList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, title), renderRooms()), React.createElement(\"div\", {\n    className: \"myButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"New Room\"));\n}\n\nexport default RoomList;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/RoomList/RoomList.js"],"names":["React","useEffect","useContext","useState","SocketContext","useHistory","useDispatch","RoomList","history","dispatch","socket","rooms","updateRoomList","title","changeTitle","emit","on","res","console","log","length","redirect","room","localStorageData","JSON","parse","localStorage","getItem","type","payload","name","push","renderRooms","map","i","index","roomId","users","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport \"./RoomList.scss\";\nimport SocketContext from \"../../context\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\n\nfunction RoomList() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  let { socket } = useContext(SocketContext);\n  let [rooms, updateRoomList] = useState([]);\n  let [title, changeTitle] = useState(\"No Rooms\");\n  useEffect(() => {\n    socket.emit(\"getAllRooms\");\n  }, [socket]);\n\n  useEffect(() => {\n    socket.on(\"sendAllRooms\", res => {\n      console.log(res);\n      if (res.length > 0) {\n        changeTitle(\"Rooms\");\n      }\n      updateRoomList(res);\n    });\n  }, [socket, rooms]);\n\n  const redirect = room => {\n    const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n    if (localStorageData) {\n      dispatch({\n        type: \"SET_INFO\",\n        payload: { name: localStorageData.name, room }\n      });\n      history.push(\"/canvas\");\n    }\n  };\n\n  const renderRooms = () => {\n    if (rooms.length > 0) {\n      return rooms.map((i, index) => {\n        return (\n          <div className=\"list-item\" key={index}>\n            <h3>Room {i.roomId || \"Room Name\"}</h3>\n            <h4>{i.users.length}/4</h4>\n            <button onClick={e => redirect(i.roomId)}>\n              {i.users.length > 4 ? \"FULL\" : \"Join\"}\n            </button>\n          </div>\n        );\n      });\n    }\n  };\n\n  return (\n    <div className=\"RoomList\">\n      <div className=\"Container\">\n        <h1>{title}</h1>\n        {renderRooms()}\n      </div>\n      <div className=\"myButton\">New Room</div>\n    </div>\n  );\n}\n\nexport default RoomList;\n"]},"metadata":{},"sourceType":"module"}