{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/UserList/UserList.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./UserList.scss\";\nimport SocketContext from \"../../context\";\nimport { useSelector } from \"react-redux\";\n\nfunction UserList() {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        roomData = _useState2[0],\n        setRoomData = _useState2[1];\n\n  let _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  let _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      updateUsers = _useState4[1];\n\n  let _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      drawerId = _useState6[0],\n      updateDrawer = _useState6[1];\n\n  const _useSelector = useSelector(state => state.contactReducer),\n        room = _useSelector.room;\n\n  useEffect(() => {\n    socket.on(\"checkUserListAgain\", () => {\n      socket.emit(\"getUserList\", room);\n    });\n    socket.on(\"getAllUsers\", res => {\n      updateUsers(res);\n    });\n    socket.on(\"sendTime\", res => {\n      const draw = res.find(i => i.roomId === room);\n      setRoomData(draw.gameData);\n      if (draw && draw.gameData.drawer.user) updateDrawer(draw.gameData.drawer.user.googleUserInfo.googleId);\n    });\n    console.log(drawerId);\n  }, [socket, room, drawerId]);\n\n  const renderUser = () => {\n    if (users) {\n      return users.map((i, index) => {\n        if (i.user.googleUserInfo.googleId === drawerId) {\n          return React.createElement(\"div\", {\n            className: \"user-card\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, i.user.googleUserInfo.name, React.createElement(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"pencil\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, \"\\u270F\\uFE0F\")), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, i.points, \" Points\"));\n        } else {\n          return React.createElement(\"div\", {\n            className: \"user-card\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, i.user.googleUserInfo.name), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, i.points, \" Points\"));\n        }\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"UserList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Players\"), renderUser());\n}\n\nexport default UserList;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/UserList/UserList.js"],"names":["React","useContext","useEffect","useState","SocketContext","useSelector","UserList","roomData","setRoomData","socket","users","updateUsers","drawerId","updateDrawer","state","contactReducer","room","on","emit","res","draw","find","i","roomId","gameData","drawer","user","googleUserInfo","googleId","console","log","renderUser","map","index","name","points"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport \"./UserList.scss\";\nimport SocketContext from \"../../context\";\nimport { useSelector } from \"react-redux\";\n\nfunction UserList() {\n  const [roomData, setRoomData] = useState();\n  let { socket } = useContext(SocketContext);\n  let [users, updateUsers] = useState([]);\n  let [drawerId, updateDrawer] = useState();\n  const { room } = useSelector(state => state.contactReducer);\n\n  useEffect(() => {\n    socket.on(\"checkUserListAgain\", () => {\n      socket.emit(\"getUserList\", room);\n    });\n\n    socket.on(\"getAllUsers\", res => {\n      updateUsers(res);\n    });\n\n    socket.on(\"sendTime\", res => {\n      const draw = res.find(i => i.roomId === room);\n      setRoomData(draw.gameData);\n      if (draw && draw.gameData.drawer.user)\n        updateDrawer(draw.gameData.drawer.user.googleUserInfo.googleId);\n    });\n\n    console.log(drawerId);\n  }, [socket, room, drawerId]);\n\n  const renderUser = () => {\n    if (users) {\n      return users.map((i, index) => {\n        if (i.user.googleUserInfo.googleId === drawerId) {\n          return (\n            <div className=\"user-card\" key={index}>\n              <h3>\n                {i.user.googleUserInfo.name}\n                <span role=\"img\" aria-label=\"pencil\">\n                  ✏️\n                </span>\n              </h3>\n              <p>{i.points} Points</p>\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"user-card\" key={index}>\n              <h3>{i.user.googleUserInfo.name}</h3>\n              <p>{i.points} Points</p>\n            </div>\n          );\n        }\n      });\n    }\n  };\n\n  return (\n    <div className=\"UserList\">\n      <h4>Players</h4>\n      {renderUser()}\n    </div>\n  );\n}\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}