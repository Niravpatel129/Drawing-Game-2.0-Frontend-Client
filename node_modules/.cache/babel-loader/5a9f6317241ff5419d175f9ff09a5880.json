{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Chat/Chat.js\";\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport \"./Chat.scss\";\nimport Message from \"../Message/Message\";\nimport { useSelector } from \"react-redux\";\nimport SocketContext from \"../../context\";\n\nfunction Chat() {\n  let _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        msg = _useState2[0],\n        addMsg = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        input = _useState4[0],\n        changeInput = _useState4[1];\n\n  const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n\n  const _useSelector = useSelector(state => state.contactReducer),\n        room = _useSelector.room;\n\n  const canDraw = useSelector(state => state.canDrawReducer);\n  const messagesRef = useRef();\n  useEffect(() => {\n    socket.on(\"updateMessage\", res => {\n      addMsg(res);\n    });\n    return () => {\n      socket.off();\n    };\n  }, [socket]);\n  useEffect(() => {\n    messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n  });\n\n  const submitMessage = e => {\n    if (e.charCode === 13) {\n      if (input) {\n        socket.emit(\"chatMessage\", {\n          name: localStorageData,\n          room,\n          input\n        });\n      }\n\n      changeInput(\"\");\n    }\n  };\n\n  const renderMessage = () => {\n    if (msg) return msg.map((e, index) => {\n      return React.createElement(Message, {\n        src: e.name.imageUrl,\n        name: e.name.name,\n        message: e.message,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    });\n  };\n\n  const Chat = () => {\n    let placeholder = \" ✏️\";\n\n    if (canDraw) {\n      placeholder = \"You are drawing!\";\n    }\n\n    return React.createElement(\"div\", {\n      className: \"Chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"ChatBox\")), React.createElement(\"div\", {\n      className: \"messages\",\n      ref: messagesRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, renderMessage()), React.createElement(\"input\", {\n      value: input,\n      onChange: e => changeInput(e.target.value),\n      onKeyPress: submitMessage,\n      placeholder: placeholder,\n      disabled: canDraw,\n      style: {\n        backgroundColor: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, Chat());\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Chat/Chat.js"],"names":["React","useState","useRef","useEffect","useContext","Message","useSelector","SocketContext","Chat","socket","msg","addMsg","input","changeInput","localStorageData","JSON","parse","localStorage","getItem","state","contactReducer","room","canDraw","canDrawReducer","messagesRef","on","res","off","current","scrollTop","scrollHeight","submitMessage","e","charCode","emit","name","renderMessage","map","index","imageUrl","message","placeholder","target","value","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport \"./Chat.scss\";\nimport Message from \"../Message/Message\";\nimport { useSelector } from \"react-redux\";\nimport SocketContext from \"../../context\";\n\nfunction Chat() {\n  let { socket } = useContext(SocketContext);\n\n  const [msg, addMsg] = useState([]);\n  const [input, changeInput] = useState(\"\");\n\n  const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n\n  const { room } = useSelector(state => state.contactReducer);\n  const canDraw = useSelector(state => state.canDrawReducer);\n\n  const messagesRef = useRef();\n\n  useEffect(() => {\n    socket.on(\"updateMessage\", res => {\n      addMsg(res);\n    });\n\n    return () => {\n      socket.off();\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n  });\n\n  const submitMessage = e => {\n    if (e.charCode === 13) {\n      if (input) {\n        socket.emit(\"chatMessage\", { name: localStorageData, room, input });\n      }\n      changeInput(\"\");\n    }\n  };\n\n  const renderMessage = () => {\n    if (msg)\n      return msg.map((e, index) => {\n        return (\n          <Message\n            src={e.name.imageUrl}\n            name={e.name.name}\n            message={e.message}\n            key={index}\n          />\n        );\n      });\n  };\n\n  const Chat = () => {\n    let placeholder = \" ✏️\";\n    if (canDraw) {\n      placeholder = \"You are drawing!\";\n    }\n    return (\n      <div className=\"Chat\">\n        <div className=\"title\">\n          <h1>ChatBox</h1>\n        </div>\n        <div className=\"messages\" ref={messagesRef}>\n          {renderMessage()}\n        </div>\n        <input\n          value={input}\n          onChange={e => changeInput(e.target.value)}\n          onKeyPress={submitMessage}\n          placeholder={placeholder}\n          disabled={canDraw}\n          style={{ backgroundColor: \"red\" }}\n        ></input>\n      </div>\n    );\n  };\n\n  return <React.Fragment>{Chat()}</React.Fragment>;\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}