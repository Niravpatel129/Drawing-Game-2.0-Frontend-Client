{"ast":null,"code":"class Emote {\n  /**\r\n   * Base class for emotes.\r\n   * This constructor is not to be used.\r\n   * @param {Channel} channel - Channel this emote belongs to.\r\n   * @param {string} id - ID of the emote.\r\n   * @param {data} data - The raw emote data.\r\n   */\n  constructor(channel, id, data) {\n    if (new.target.name === Emote.name) {\n      throw new Error('Base Emote class cannot be used');\n    }\n    /**\r\n     * The emote fetcher.\r\n     * @type {EmoteFetcher}\r\n     */\n\n\n    this.fetcher = channel.fetcher;\n    /**\r\n     * The channel this emote belongs to.\r\n     * Only accurate and constant on Twitch emotes.\r\n     * For other types of emotes, use the `owner` or `ownerName` property.\r\n     * @type {Channel}\r\n     */\n\n    this.channel = channel;\n    /**\r\n     * The ID of this emote.\r\n     * @type {string}\r\n     */\n\n    this.id = id;\n    /**\r\n     * The type of this emote.\r\n     * Either `twitch`, `bttv`, or `ffz`.\r\n     * @type {string}\r\n     */\n\n    this.type = null;\n\n    this._setup(data);\n  }\n\n  _setup(data) {\n    /**\r\n     * The code or name of the emote.\r\n     * @type {string}\r\n     */\n    this.code = data.code;\n  }\n\n  toLink() {\n    return null;\n  }\n  /**\r\n   * Override for `toString`.\r\n   * Will give the emote's name.\r\n   * @returns {string}\r\n   */\n\n\n  toString() {\n    return this.code;\n  }\n\n}\n\nmodule.exports = Emote;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/twitch-emoticons/src/struct/Emote.js"],"names":["Emote","constructor","channel","id","data","new","target","name","Error","fetcher","type","_setup","code","toLink","toString","module","exports"],"mappings":"AAAA,MAAMA,KAAN,CAAY;AACR;;;;;;;AAOAC,EAAAA,WAAW,CAACC,OAAD,EAAUC,EAAV,EAAcC,IAAd,EAAoB;AAC3B,QAAIC,GAAG,CAACC,MAAJ,CAAWC,IAAX,KAAoBP,KAAK,CAACO,IAA9B,EAAoC;AAChC,YAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACH;AAED;;;;;;AAIA,SAAKC,OAAL,GAAeP,OAAO,CAACO,OAAvB;AAEA;;;;;;;AAMA,SAAKP,OAAL,GAAeA,OAAf;AAEA;;;;;AAIA,SAAKC,EAAL,GAAUA,EAAV;AAEA;;;;;;AAKA,SAAKO,IAAL,GAAY,IAAZ;;AACA,SAAKC,MAAL,CAAYP,IAAZ;AACH;;AAEDO,EAAAA,MAAM,CAACP,IAAD,EAAO;AACT;;;;AAIA,SAAKQ,IAAL,GAAYR,IAAI,CAACQ,IAAjB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO,IAAP;AACH;AAED;;;;;;;AAKAC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKF,IAAZ;AACH;;AA7DO;;AAgEZG,MAAM,CAACC,OAAP,GAAiBhB,KAAjB","sourcesContent":["class Emote {\r\n    /**\r\n     * Base class for emotes.\r\n     * This constructor is not to be used.\r\n     * @param {Channel} channel - Channel this emote belongs to.\r\n     * @param {string} id - ID of the emote.\r\n     * @param {data} data - The raw emote data.\r\n     */\r\n    constructor(channel, id, data) {\r\n        if (new.target.name === Emote.name) {\r\n            throw new Error('Base Emote class cannot be used');\r\n        }\r\n\r\n        /**\r\n         * The emote fetcher.\r\n         * @type {EmoteFetcher}\r\n         */\r\n        this.fetcher = channel.fetcher;\r\n\r\n        /**\r\n         * The channel this emote belongs to.\r\n         * Only accurate and constant on Twitch emotes.\r\n         * For other types of emotes, use the `owner` or `ownerName` property.\r\n         * @type {Channel}\r\n         */\r\n        this.channel = channel;\r\n\r\n        /**\r\n         * The ID of this emote.\r\n         * @type {string}\r\n         */\r\n        this.id = id;\r\n\r\n        /**\r\n         * The type of this emote.\r\n         * Either `twitch`, `bttv`, or `ffz`.\r\n         * @type {string}\r\n         */\r\n        this.type = null;\r\n        this._setup(data);\r\n    }\r\n\r\n    _setup(data) {\r\n        /**\r\n         * The code or name of the emote.\r\n         * @type {string}\r\n         */\r\n        this.code = data.code;\r\n    }\r\n\r\n    toLink() {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Override for `toString`.\r\n     * Will give the emote's name.\r\n     * @returns {string}\r\n     */\r\n    toString() {\r\n        return this.code;\r\n    }\r\n}\r\n\r\nmodule.exports = Emote;\r\n"]},"metadata":{},"sourceType":"script"}