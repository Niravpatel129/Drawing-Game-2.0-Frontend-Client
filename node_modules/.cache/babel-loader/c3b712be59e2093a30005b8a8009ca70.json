{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Chat/Chat.js\";\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport \"./Chat.scss\";\nimport Message from \"../Message/Message\";\nimport { useSelector } from \"react-redux\";\nimport SocketContext from \"../../context\";\n\nfunction Chat() {\n  let _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        msg = _useState2[0],\n        addMsg = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        input = _useState4[0],\n        changeInput = _useState4[1];\n\n  const _useSelector = useSelector(state => state.contactReducer),\n        name = _useSelector.name,\n        room = _useSelector.room;\n\n  const messagesRef = useRef();\n  useEffect(() => {\n    socket.on(\"updateMessage\", res => {\n      addMsg(res);\n    });\n  }, []);\n  useEffect(() => {\n    messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n  });\n\n  const submitMessage = e => {\n    if (e.charCode === 13) {\n      if (input) {\n        // on key press enter\n        socket.emit(\"chatMessage\", {\n          name,\n          room,\n          input\n        });\n      }\n\n      changeInput(\"\");\n    }\n  };\n\n  const renderMessage = () => {\n    return msg.map((e, index) => {\n      return React.createElement(Message, {\n        name: e.name,\n        message: e.message,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Chat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"ChatBox\")), React.createElement(\"div\", {\n    className: \"messages\",\n    ref: messagesRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, renderMessage()), React.createElement(\"input\", {\n    value: input,\n    onChange: e => changeInput(e.target.value),\n    onKeyPress: submitMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Chat/Chat.js"],"names":["React","useState","useRef","useEffect","useContext","Message","useSelector","SocketContext","Chat","socket","msg","addMsg","input","changeInput","state","contactReducer","name","room","messagesRef","on","res","current","scrollTop","scrollHeight","submitMessage","e","charCode","emit","renderMessage","map","index","message","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,aAAP,MAA0B,eAA1B;;AAEA,SAASC,IAAT,GAAgB;AAAA,oBACGJ,UAAU,CAACG,aAAD,CADb;AAAA,MACRE,MADQ,eACRA,MADQ;;AAAA,oBAGQR,QAAQ,CAAC,EAAD,CAHhB;AAAA;AAAA,QAGPS,GAHO;AAAA,QAGFC,MAHE;;AAAA,qBAIeV,QAAQ,CAAC,EAAD,CAJvB;AAAA;AAAA,QAIPW,KAJO;AAAA,QAIAC,WAJA;;AAAA,uBAMSP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,cAAhB,CANpB;AAAA,QAMNC,IANM,gBAMNA,IANM;AAAA,QAMAC,IANA,gBAMAA,IANA;;AAQd,QAAMC,WAAW,GAAGhB,MAAM,EAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,CAACU,EAAP,CAAU,eAAV,EAA2BC,GAAG,IAAI;AAChCT,MAAAA,MAAM,CAACS,GAAD,CAAN;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAjB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,WAAW,CAACG,OAAZ,CAAoBC,SAApB,GAAgCJ,WAAW,CAACG,OAAZ,CAAoBE,YAApD;AACD,GAFQ,CAAT;;AAIA,QAAMC,aAAa,GAAGC,CAAC,IAAI;AACzB,QAAIA,CAAC,CAACC,QAAF,KAAe,EAAnB,EAAuB;AACrB,UAAId,KAAJ,EAAW;AACT;AACAH,QAAAA,MAAM,CAACkB,IAAP,CAAY,aAAZ,EAA2B;AAAEX,UAAAA,IAAF;AAAQC,UAAAA,IAAR;AAAcL,UAAAA;AAAd,SAA3B;AACD;;AACDC,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,GARD;;AAUA,QAAMe,aAAa,GAAG,MAAM;AAC1B,WAAOlB,GAAG,CAACmB,GAAJ,CAAQ,CAACJ,CAAD,EAAIK,KAAJ,KAAc;AAC3B,aAAO,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAEL,CAAC,CAACT,IAAjB;AAAuB,QAAA,OAAO,EAAES,CAAC,CAACM,OAAlC;AAA2C,QAAA,GAAG,EAAED,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAEZ,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,aAAa,EADhB,CAJF,EAOE;AACE,IAAA,KAAK,EAAEhB,KADT;AAEE,IAAA,QAAQ,EAAEa,CAAC,IAAIZ,WAAW,CAACY,CAAC,CAACO,MAAF,CAASC,KAAV,CAF5B;AAGE,IAAA,UAAU,EAAET,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAeD;;AAED,eAAehB,IAAf","sourcesContent":["import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport \"./Chat.scss\";\nimport Message from \"../Message/Message\";\nimport { useSelector } from \"react-redux\";\nimport SocketContext from \"../../context\";\n\nfunction Chat() {\n  let { socket } = useContext(SocketContext);\n\n  const [msg, addMsg] = useState([]);\n  const [input, changeInput] = useState(\"\");\n\n  const { name, room } = useSelector(state => state.contactReducer);\n\n  const messagesRef = useRef();\n\n  useEffect(() => {\n    socket.on(\"updateMessage\", res => {\n      addMsg(res);\n    });\n  }, []);\n\n  useEffect(() => {\n    messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n  });\n\n  const submitMessage = e => {\n    if (e.charCode === 13) {\n      if (input) {\n        // on key press enter\n        socket.emit(\"chatMessage\", { name, room, input });\n      }\n      changeInput(\"\");\n    }\n  };\n\n  const renderMessage = () => {\n    return msg.map((e, index) => {\n      return <Message name={e.name} message={e.message} key={index} />;\n    });\n  };\n\n  return (\n    <div className=\"Chat\">\n      <div className=\"title\">\n        <h1>ChatBox</h1>\n      </div>\n      <div className=\"messages\" ref={messagesRef}>\n        {renderMessage()}\n      </div>\n      <input\n        value={input}\n        onChange={e => changeInput(e.target.value)}\n        onKeyPress={submitMessage}\n      ></input>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}