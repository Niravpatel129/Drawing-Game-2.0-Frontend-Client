{"ast":null,"code":"import { combineReducers } from \"redux\";\n\nconst contactReducer = (state = {\n  name: \"Guest\",\n  room: 1\n}, action) => {\n  // Do somethin\n  switch (action.type) {\n    case \"SET_INFO\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nconst userInfoReducer = (state = {}, action) => {\n  // Do somethin\n  switch (action.type) {\n    case \"LOGIN_USER\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nconst notificationDisplayReducer = (state = false, action) => {\n  // Do somethin\n  switch (action.type) {\n    case \"SET_NOTIFICATION\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nconst notificationMessageReducer = (state = \"\", action) => {\n  // Do somethin\n  switch (action.type) {\n    case \"SET_MESSAGE\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nconst SpinnerReducer = (currentSpinnerMode = true, action) => {\n  if (action.type === \"TOGGLE_LOADING_SPINNER\") {\n    return action.payload;\n  }\n\n  return currentSpinnerMode;\n};\n\nconst canDrawReducer = (canDraw = false, action) => {\n  if (action.type === \"SET_DRAW\") {\n    return action.payload;\n  }\n\n  return canDraw;\n};\n\nconst drawWordReducer = (state = \"\", action) => {\n  if (action.type === \"SET_WORD\") {\n    return action.payload;\n  }\n\n  return state;\n};\n\nexport default combineReducers({\n  contactReducer,\n  userInfoReducer,\n  notificationDisplayReducer,\n  notificationMessageReducer,\n  SpinnerReducer,\n  canDrawReducer,\n  drawWordReducer\n});","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/reducers/index.js"],"names":["combineReducers","contactReducer","state","name","room","action","type","payload","userInfoReducer","notificationDisplayReducer","notificationMessageReducer","SpinnerReducer","currentSpinnerMode","canDrawReducer","canDraw","drawWordReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,IAAI,EAAE,OAAR;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CAAT,EAAqCC,MAArC,KAAgD;AACrE;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,CARD;;AAUA,MAAMM,eAAe,GAAG,CAACN,KAAK,GAAG,EAAT,EAAaG,MAAb,KAAwB;AAC9C;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,CARD;;AAUA,MAAMO,0BAA0B,GAAG,CAACP,KAAK,GAAG,KAAT,EAAgBG,MAAhB,KAA2B;AAC5D;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,CARD;;AAUA,MAAMQ,0BAA0B,GAAG,CAACR,KAAK,GAAG,EAAT,EAAaG,MAAb,KAAwB;AACzD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,CARD;;AAUA,MAAMS,cAAc,GAAG,CAACC,kBAAkB,GAAG,IAAtB,EAA4BP,MAA5B,KAAuC;AAC5D,MAAIA,MAAM,CAACC,IAAP,KAAgB,wBAApB,EAA8C;AAC5C,WAAOD,MAAM,CAACE,OAAd;AACD;;AACD,SAAOK,kBAAP;AACD,CALD;;AAOA,MAAMC,cAAc,GAAG,CAACC,OAAO,GAAG,KAAX,EAAkBT,MAAlB,KAA6B;AAClD,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAOD,MAAM,CAACE,OAAd;AACD;;AACD,SAAOO,OAAP;AACD,CALD;;AAOA,MAAMC,eAAe,GAAG,CAACb,KAAK,GAAG,EAAT,EAAaG,MAAb,KAAwB;AAC9C,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAOD,MAAM,CAACE,OAAd;AACD;;AACD,SAAOL,KAAP;AACD,CALD;;AAOA,eAAeF,eAAe,CAAC;AAC7BC,EAAAA,cAD6B;AAE7BO,EAAAA,eAF6B;AAG7BC,EAAAA,0BAH6B;AAI7BC,EAAAA,0BAJ6B;AAK7BC,EAAAA,cAL6B;AAM7BE,EAAAA,cAN6B;AAO7BE,EAAAA;AAP6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\n\nconst contactReducer = (state = { name: \"Guest\", room: 1 }, action) => {\n  // Do somethin\n  switch (action.type) {\n    case \"SET_INFO\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst userInfoReducer = (state = {}, action) => {\n  // Do somethin\n  switch (action.type) {\n    case \"LOGIN_USER\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst notificationDisplayReducer = (state = false, action) => {\n  // Do somethin\n  switch (action.type) {\n    case \"SET_NOTIFICATION\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst notificationMessageReducer = (state = \"\", action) => {\n  // Do somethin\n  switch (action.type) {\n    case \"SET_MESSAGE\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst SpinnerReducer = (currentSpinnerMode = true, action) => {\n  if (action.type === \"TOGGLE_LOADING_SPINNER\") {\n    return action.payload;\n  }\n  return currentSpinnerMode;\n};\n\nconst canDrawReducer = (canDraw = false, action) => {\n  if (action.type === \"SET_DRAW\") {\n    return action.payload;\n  }\n  return canDraw;\n};\n\nconst drawWordReducer = (state = \"\", action) => {\n  if (action.type === \"SET_WORD\") {\n    return action.payload;\n  }\n  return state;\n};\n\nexport default combineReducers({\n  contactReducer,\n  userInfoReducer,\n  notificationDisplayReducer,\n  notificationMessageReducer,\n  SpinnerReducer,\n  canDrawReducer,\n  drawWordReducer\n});\n"]},"metadata":{},"sourceType":"module"}