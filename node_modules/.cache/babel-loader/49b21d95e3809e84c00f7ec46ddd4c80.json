{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/ToolBar/ToolBar.js\";\nimport React from \"react\";\nimport \"./ToolBar.scss\";\nimport { useSelector } from \"react-redux\";\n\nfunction ToolBar({\n  canvasRef,\n  handleMouseDown\n}) {\n  const canDraw = useSelector(state => state.canDrawReducer);\n\n  const handleUndo = () => {\n    console.log(\"clicked undo\");\n    canvasRef.current.undo();\n    handleMouseDown();\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ToolBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, canDraw && React.createElement(\"button\", {\n    onClick: handleUndo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Undo\")));\n}\n\nexport default ToolBar;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/ToolBar/ToolBar.js"],"names":["React","useSelector","ToolBar","canvasRef","handleMouseDown","canDraw","state","canDrawReducer","handleUndo","console","log","current","undo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAjB,EAAiD;AAC/C,QAAMC,OAAO,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAA3B;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAP,IAAAA,SAAS,CAACQ,OAAV,CAAkBC,IAAlB;AACAR,IAAAA,eAAe;AAChB,GAJD;;AAMA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,IAAI;AAAQ,IAAA,OAAO,EAAEG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADd,CADF,CADF;AAOD;;AAED,eAAeN,OAAf","sourcesContent":["import React from \"react\";\nimport \"./ToolBar.scss\";\nimport { useSelector } from \"react-redux\";\n\nfunction ToolBar({ canvasRef, handleMouseDown }) {\n  const canDraw = useSelector(state => state.canDrawReducer);\n\n  const handleUndo = () => {\n    console.log(\"clicked undo\");\n    canvasRef.current.undo();\n    handleMouseDown();\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"ToolBar\">\n        {canDraw && <button onClick={handleUndo}>Undo</button>}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default ToolBar;\n"]},"metadata":{},"sourceType":"module"}