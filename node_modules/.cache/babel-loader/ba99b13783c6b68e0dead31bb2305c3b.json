{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/UserList/UserList.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./UserList.scss\";\nimport SocketContext from \"../../context\";\nimport { useSelector } from \"react-redux\";\n\nfunction UserList() {\n  let _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  let _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      updateUsers = _useState2[1];\n\n  let _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      drawer = _useState4[0],\n      updateDrawer = _useState4[1];\n\n  const _useSelector = useSelector(state => state.contactReducer),\n        room = _useSelector.room;\n\n  useEffect(() => {\n    socket.on(\"checkUserListAgain\", () => {\n      socket.emit(\"getUserList\", room);\n    });\n    socket.on(\"getAllUsers\", res => {\n      updateUsers(res);\n    });\n    socket.on(\"sendTime\", res => {\n      const draw = res.find(i => i.roomId === room);\n      if (draw) updateDrawer(draw.gameData.drawer);\n      console.log(draw.gameData.drawer.user.googleUserInfo);\n    });\n    console.log(drawer);\n  }, [socket, room]);\n\n  const renderUser = () => {\n    if (users) {\n      return users.map((i, index) => {\n        return React.createElement(\"div\", {\n          className: \"user-card\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, i.user.googleUserInfo.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, i.points, \" Points\"));\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"UserList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Players\"), renderUser());\n}\n\nexport default UserList;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/UserList/UserList.js"],"names":["React","useContext","useEffect","useState","SocketContext","useSelector","UserList","socket","users","updateUsers","drawer","updateDrawer","state","contactReducer","room","on","emit","res","draw","find","i","roomId","gameData","console","log","user","googleUserInfo","renderUser","map","index","name","points"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,iBAAP;AACA,OAAOC,aAAP,MAA0B,eAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,SAASC,QAAT,GAAoB;AAAA,oBACDL,UAAU,CAACG,aAAD,CADT;AAAA,MACZG,MADY,eACZA,MADY;;AAAA,kBAESJ,QAAQ,CAAC,EAAD,CAFjB;AAAA;AAAA,MAEbK,KAFa;AAAA,MAENC,WAFM;;AAAA,mBAGWN,QAAQ,CAAC,EAAD,CAHnB;AAAA;AAAA,MAGbO,MAHa;AAAA,MAGLC,YAHK;;AAAA,uBAIDN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAJV;AAAA,QAIVC,IAJU,gBAIVA,IAJU;;AAMlBZ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACQ,EAAP,CAAU,oBAAV,EAAgC,MAAM;AACpCR,MAAAA,MAAM,CAACS,IAAP,CAAY,aAAZ,EAA2BF,IAA3B;AACD,KAFD;AAIAP,IAAAA,MAAM,CAACQ,EAAP,CAAU,aAAV,EAAyBE,GAAG,IAAI;AAC9BR,MAAAA,WAAW,CAACQ,GAAD,CAAX;AACD,KAFD;AAIAV,IAAAA,MAAM,CAACQ,EAAP,CAAU,UAAV,EAAsBE,GAAG,IAAI;AAC3B,YAAMC,IAAI,GAAGD,GAAG,CAACE,IAAJ,CAASC,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaP,IAA3B,CAAb;AACA,UAAII,IAAJ,EAAUP,YAAY,CAACO,IAAI,CAACI,QAAL,CAAcZ,MAAf,CAAZ;AACVa,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACI,QAAL,CAAcZ,MAAd,CAAqBe,IAArB,CAA0BC,cAAtC;AACD,KAJD;AAMAH,IAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACD,GAhBQ,EAgBN,CAACH,MAAD,EAASO,IAAT,CAhBM,CAAT;;AAkBA,QAAMa,UAAU,GAAG,MAAM;AACvB,QAAInB,KAAJ,EAAW;AACT,aAAOA,KAAK,CAACoB,GAAN,CAAU,CAACR,CAAD,EAAIS,KAAJ,KAAc;AAC7B,eACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,GAAG,EAAEA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKT,CAAC,CAACK,IAAF,CAAOC,cAAP,CAAsBI,IAA3B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIV,CAAC,CAACW,MAAN,YAFF,CADF;AAMD,OAPM,CAAP;AAQD;AACF,GAXD;;AAaA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGJ,UAAU,EAFb,CADF;AAMD;;AAED,eAAerB,QAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport \"./UserList.scss\";\nimport SocketContext from \"../../context\";\nimport { useSelector } from \"react-redux\";\n\nfunction UserList() {\n  let { socket } = useContext(SocketContext);\n  let [users, updateUsers] = useState([]);\n  let [drawer, updateDrawer] = useState([]);\n  const { room } = useSelector(state => state.contactReducer);\n\n  useEffect(() => {\n    socket.on(\"checkUserListAgain\", () => {\n      socket.emit(\"getUserList\", room);\n    });\n\n    socket.on(\"getAllUsers\", res => {\n      updateUsers(res);\n    });\n\n    socket.on(\"sendTime\", res => {\n      const draw = res.find(i => i.roomId === room);\n      if (draw) updateDrawer(draw.gameData.drawer);\n      console.log(draw.gameData.drawer.user.googleUserInfo);\n    });\n\n    console.log(drawer);\n  }, [socket, room]);\n\n  const renderUser = () => {\n    if (users) {\n      return users.map((i, index) => {\n        return (\n          <div className=\"user-card\" key={index}>\n            <h3>{i.user.googleUserInfo.name}</h3>\n            <p>{i.points} Points</p>\n          </div>\n        );\n      });\n    }\n  };\n\n  return (\n    <div className=\"UserList\">\n      <h4>Players</h4>\n      {renderUser()}\n    </div>\n  );\n}\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}