{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/UserList/UserList.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./UserList.scss\";\nimport SocketContext from \"../../context\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction UserList() {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        roomData = _useState2[0],\n        setRoomData = _useState2[1];\n\n  let _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  let _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      updateUsers = _useState4[1];\n\n  let _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      drawerId = _useState6[0],\n      updateDrawer = _useState6[1];\n\n  const _useSelector = useSelector(state => state.contactReducer),\n        room = _useSelector.room;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (roomData) {\n      if (users.length >= 2 && !roomData.gameData.gameStarted) {\n        socket.emit(\"gameStart\", room);\n      }\n    }\n\n    socket.on(\"gameStart\", room => {\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        payload: true\n      });\n      dispatch({\n        type: \"SET_MESSAGE\",\n        payload: `${room} Room has started the game!!`\n      });\n    });\n  }, [users, roomData, socket, room, dispatch]);\n  useEffect(() => {\n    socket.on(\"checkUserListAgain\", () => {\n      socket.emit(\"getUserList\", room);\n    });\n    socket.on(\"getAllUsers\", res => {\n      updateUsers(res);\n    });\n    socket.on(\"sendTime\", res => {\n      const draw = res.find(i => i.roomId === room);\n      setRoomData(draw);\n      if (draw && draw.gameData.drawer.user) updateDrawer(draw.gameData.drawer.user.googleUserInfo.googleId);\n    });\n  }, [socket, room]);\n  useEffect(() => {\n    console.log(\"drawerId has changed\");\n    dispatch({\n      type: \"SET_NOTIFICATION\",\n      payload: true\n    });\n    dispatch({\n      type: \"SET_MESSAGE\",\n      payload: `${room} Next Drawers Turn!!`\n    });\n  }, [drawerId]);\n\n  const renderUser = () => {\n    if (users) {\n      return users.map((i, index) => {\n        if (i.user.googleUserInfo.googleId === drawerId && roomData.gameData.gameStarted) {\n          return React.createElement(\"div\", {\n            className: \"user-card\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, i.user.googleUserInfo.name, React.createElement(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"pencil\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, \" \", \"\\u270F\\uFE0F\")), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, i.points, \" Points\"));\n        } else {\n          return React.createElement(\"div\", {\n            className: \"user-card\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, i.user.googleUserInfo.name), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, i.points, \" Points\"));\n        }\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"UserList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Players\"), renderUser());\n}\n\nexport default UserList;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/UserList/UserList.js"],"names":["React","useContext","useEffect","useState","SocketContext","useSelector","useDispatch","UserList","roomData","setRoomData","socket","users","updateUsers","drawerId","updateDrawer","state","contactReducer","room","dispatch","length","gameData","gameStarted","emit","on","type","payload","res","draw","find","i","roomId","drawer","user","googleUserInfo","googleId","console","log","renderUser","map","index","name","points"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport \"./UserList.scss\";\nimport SocketContext from \"../../context\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction UserList() {\n  const [roomData, setRoomData] = useState();\n  let { socket } = useContext(SocketContext);\n  let [users, updateUsers] = useState([]);\n  let [drawerId, updateDrawer] = useState();\n  const { room } = useSelector(state => state.contactReducer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (roomData) {\n      if (users.length >= 2 && !roomData.gameData.gameStarted) {\n        socket.emit(\"gameStart\", room);\n      }\n    }\n\n    socket.on(\"gameStart\", room => {\n      dispatch({ type: \"SET_NOTIFICATION\", payload: true });\n      dispatch({\n        type: \"SET_MESSAGE\",\n        payload: `${room} Room has started the game!!`\n      });\n    });\n  }, [users, roomData, socket, room, dispatch]);\n\n  useEffect(() => {\n    socket.on(\"checkUserListAgain\", () => {\n      socket.emit(\"getUserList\", room);\n    });\n\n    socket.on(\"getAllUsers\", res => {\n      updateUsers(res);\n    });\n\n    socket.on(\"sendTime\", res => {\n      const draw = res.find(i => i.roomId === room);\n      setRoomData(draw);\n      if (draw && draw.gameData.drawer.user)\n        updateDrawer(draw.gameData.drawer.user.googleUserInfo.googleId);\n    });\n  }, [socket, room]);\n\n  useEffect(() => {\n    console.log(\"drawerId has changed\");\n    dispatch({ type: \"SET_NOTIFICATION\", payload: true });\n    dispatch({\n      type: \"SET_MESSAGE\",\n      payload: `${room} Next Drawers Turn!!`\n    });\n  }, [drawerId]);\n\n  const renderUser = () => {\n    if (users) {\n      return users.map((i, index) => {\n        if (\n          i.user.googleUserInfo.googleId === drawerId &&\n          roomData.gameData.gameStarted\n        ) {\n          return (\n            <div className=\"user-card\" key={index}>\n              <h3>\n                {i.user.googleUserInfo.name}\n                <span role=\"img\" aria-label=\"pencil\">\n                  {\" \"}\n                  ✏️\n                </span>\n              </h3>\n              <p>{i.points} Points</p>\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"user-card\" key={index}>\n              <h3>{i.user.googleUserInfo.name}</h3>\n              <p>{i.points} Points</p>\n            </div>\n          );\n        }\n      });\n    }\n  };\n\n  return (\n    <div className=\"UserList\">\n      <h4>Players</h4>\n      {renderUser()}\n    </div>\n  );\n}\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}