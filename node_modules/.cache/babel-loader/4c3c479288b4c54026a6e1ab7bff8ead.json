{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/provider/index.js\";\nimport React from \"react\";\nimport SocketContext from \"../context\";\nimport io from \"socket.io-client\";\nlet socket;\n\nconst SocketProvider = props => {\n  if (process.env.NODE_ENV === \"production\") {\n    socket = io.connect(\"https://drawing-game-server-2.herokuapp.com\").then(() => {\n      console.log(\"connected\");\n    });\n  } else {\n    socket = io.connect(\"localhost:5000\").then(() => {\n      console.log(\"connected\");\n    });\n  }\n\n  return React.createElement(SocketContext.Provider, {\n    value: {\n      socket\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default SocketProvider;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/provider/index.js"],"names":["React","SocketContext","io","socket","SocketProvider","props","process","env","NODE_ENV","connect","then","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP,MAA0B,YAA1B;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC9B,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCL,IAAAA,MAAM,GAAGD,EAAE,CACRO,OADM,CACE,6CADF,EAENC,IAFM,CAED,MAAM;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,KAJM,CAAT;AAKD,GAND,MAMO;AACLT,IAAAA,MAAM,GAAGD,EAAE,CAACO,OAAH,CAAW,gBAAX,EAA6BC,IAA7B,CAAkC,MAAM;AAC/CC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,KAFQ,CAAT;AAGD;;AAED,SACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAET,MAAAA;AAAF,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CAACQ,QADT,CADF;AAKD,CAlBD;;AAoBA,eAAeT,cAAf","sourcesContent":["import React from \"react\";\n\nimport SocketContext from \"../context\";\nimport io from \"socket.io-client\";\n\nlet socket;\n\nconst SocketProvider = props => {\n  if (process.env.NODE_ENV === \"production\") {\n    socket = io\n      .connect(\"https://drawing-game-server-2.herokuapp.com\")\n      .then(() => {\n        console.log(\"connected\");\n      });\n  } else {\n    socket = io.connect(\"localhost:5000\").then(() => {\n      console.log(\"connected\");\n    });\n  }\n\n  return (\n    <SocketContext.Provider value={{ socket }}>\n      {props.children}\n    </SocketContext.Provider>\n  );\n};\n\nexport default SocketProvider;\n"]},"metadata":{},"sourceType":"module"}