{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/ToolBar/ToolBar.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport \"./ToolBar.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TwitterPicker } from \"react-color\";\n\nfunction ToolBar({\n  canvasRef,\n  handleMouseDown\n}) {\n  const canDraw = useSelector(state => state.canDrawReducer);\n  const dispatch = useDispatch();\n  const colorPicker = useRef();\n  useEffect(() => {\n    console.log(colorPicker.current.contains(\"#\"));\n  });\n\n  const handleUndo = () => {\n    canvasRef.current.undo();\n    handleMouseDown();\n  };\n\n  const handleClear = () => {\n    canvasRef.current.clear();\n    handleMouseDown();\n  };\n\n  const handleColorChange = (color, event) => {\n    console.log(color.hex);\n    dispatch({\n      type: \"SET_COLOR\",\n      payload: color.hex\n    });\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, canDraw && React.createElement(\"div\", {\n    className: \"ToolBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleClear,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Clear\"), React.createElement(\"button\", {\n    onClick: handleUndo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Undo\"), React.createElement(TwitterPicker, {\n    ref: colorPicker,\n    onChange: handleColorChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n}\n\nexport default ToolBar;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/ToolBar/ToolBar.js"],"names":["React","useRef","useEffect","useSelector","useDispatch","TwitterPicker","ToolBar","canvasRef","handleMouseDown","canDraw","state","canDrawReducer","dispatch","colorPicker","console","log","current","contains","handleUndo","undo","handleClear","clear","handleColorChange","color","event","hex","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAO,gBAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,aAA9B;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAjB,EAAiD;AAC/C,QAAMC,OAAO,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAA3B;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,WAAW,GAAGZ,MAAM,EAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAW,CAACG,OAAZ,CAAoBC,QAApB,CAA6B,GAA7B,CAAZ;AACD,GAFQ,CAAT;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBX,IAAAA,SAAS,CAACS,OAAV,CAAkBG,IAAlB;AACAX,IAAAA,eAAe;AAChB,GAHD;;AAKA,QAAMY,WAAW,GAAG,MAAM;AACxBb,IAAAA,SAAS,CAACS,OAAV,CAAkBK,KAAlB;AACAb,IAAAA,eAAe;AAChB,GAHD;;AAKA,QAAMc,iBAAiB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1CV,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACE,GAAlB;AACAb,IAAAA,QAAQ,CAAC;AAAEc,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAEJ,KAAK,CAACE;AAApC,KAAD,CAAR;AACD,GAHD;;AAKA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,OAAO,IACN;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEW,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAQ,IAAA,OAAO,EAAEF,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEL,WAApB;AAAiC,IAAA,QAAQ,EAAES,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFJ,CADF;AAWD;;AAED,eAAehB,OAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport \"./ToolBar.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TwitterPicker } from \"react-color\";\n\nfunction ToolBar({ canvasRef, handleMouseDown }) {\n  const canDraw = useSelector(state => state.canDrawReducer);\n  const dispatch = useDispatch();\n  const colorPicker = useRef();\n\n  useEffect(() => {\n    console.log(colorPicker.current.contains(\"#\"));\n  });\n\n  const handleUndo = () => {\n    canvasRef.current.undo();\n    handleMouseDown();\n  };\n\n  const handleClear = () => {\n    canvasRef.current.clear();\n    handleMouseDown();\n  };\n\n  const handleColorChange = (color, event) => {\n    console.log(color.hex);\n    dispatch({ type: \"SET_COLOR\", payload: color.hex });\n  };\n\n  return (\n    <React.Fragment>\n      {canDraw && (\n        <div className=\"ToolBar\">\n          <button onClick={handleClear}>Clear</button>\n          <button onClick={handleUndo}>Undo</button>\n          <TwitterPicker ref={colorPicker} onChange={handleColorChange} />\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default ToolBar;\n"]},"metadata":{},"sourceType":"module"}