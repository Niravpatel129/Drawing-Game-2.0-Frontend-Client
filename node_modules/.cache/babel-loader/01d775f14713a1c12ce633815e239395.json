{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Canvas/Canvas.js\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport \"./Canvas.scss\";\n\nfunction Canvas() {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        ctx = _useState2[0],\n        setContext = _useState2[1];\n\n  const canvas = useRef(ctx);\n  let mouseClicked = false;\n  let socket, currX, currY, prevX, prevY, flag, dot_flag, x, y;\n\n  const handleMouseDown = e => {};\n\n  const handleMouseUp = e => {\n    mouseClicked = !mouseClicked;\n  };\n\n  const handleMouseMove = e => {\n    findxy(\"move\", e);\n  };\n\n  const findxy = (res, e) => {\n    if (res === \"down\") {\n      prevX = currX;\n      prevY = currY;\n      currX = e.clientX - canvas.current.offsetLeft;\n      currY = e.clientY - canvas.current.offsetTop;\n      console.log(canvas.current.offsetTop);\n      flag = true;\n      dot_flag = true;\n\n      if (dot_flag) {\n        ctx.beginPath();\n        ctx.fillStyle = x;\n        ctx.fillRect(currX, currY, 2, 2);\n        ctx.closePath();\n        dot_flag = false;\n      }\n    }\n\n    if (res === \"up\" || res === \"out\") {\n      flag = false;\n    }\n\n    if (res === \"move\") {\n      if (flag) {\n        prevX = currX;\n        prevY = currY;\n        currX = e.clientX - canvas.offsetLeft;\n        currY = e.clientY - canvas.offsetTop;\n        draw();\n      }\n\n      function draw() {\n        ctx.beginPath();\n        ctx.moveTo(prevX, prevY);\n        ctx.lineTo(currX, currY);\n        ctx.strokeStyle = x;\n        ctx.lineWidth = y;\n        ctx.stroke();\n        ctx.closePath(); // send draw data\n\n        socket.emit(\"draw\", {\n          currX,\n          currY,\n          prevX,\n          prevY\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    setContext(canvas.current.getContext(\"2d\"));\n  }, [canvas]);\n  return React.createElement(\"section\", {\n    className: \"Canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"canvas\", {\n    ref: canvas,\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Please update your browser\"));\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Canvas/Canvas.js"],"names":["React","useRef","useEffect","useState","Canvas","ctx","setContext","canvas","mouseClicked","socket","currX","currY","prevX","prevY","flag","dot_flag","x","y","handleMouseDown","e","handleMouseUp","handleMouseMove","findxy","res","clientX","current","offsetLeft","clientY","offsetTop","console","log","beginPath","fillStyle","fillRect","closePath","draw","moveTo","lineTo","strokeStyle","lineWidth","stroke","emit","getContext"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport \"./Canvas.scss\";\nfunction Canvas() {\n  const [ctx, setContext] = useState();\n  const canvas = useRef(ctx);\n  let mouseClicked = false;\n  let socket, currX, currY, prevX, prevY, flag, dot_flag, x, y;\n\n  const handleMouseDown = e => {};\n\n  const handleMouseUp = e => {\n    mouseClicked = !mouseClicked;\n  };\n\n  const handleMouseMove = e => {\n    findxy(\"move\", e);\n  };\n\n  const findxy = (res, e) => {\n    if (res === \"down\") {\n      prevX = currX;\n      prevY = currY;\n      currX = e.clientX - canvas.current.offsetLeft;\n      currY = e.clientY - canvas.current.offsetTop;\n\n      console.log(canvas.current.offsetTop);\n      flag = true;\n      dot_flag = true;\n      if (dot_flag) {\n        ctx.beginPath();\n        ctx.fillStyle = x;\n        ctx.fillRect(currX, currY, 2, 2);\n        ctx.closePath();\n        dot_flag = false;\n      }\n    }\n\n    if (res === \"up\" || res === \"out\") {\n      flag = false;\n    }\n\n    if (res === \"move\") {\n      if (flag) {\n        prevX = currX;\n        prevY = currY;\n        currX = e.clientX - canvas.offsetLeft;\n        currY = e.clientY - canvas.offsetTop;\n        draw();\n      }\n\n      function draw() {\n        ctx.beginPath();\n        ctx.moveTo(prevX, prevY);\n        ctx.lineTo(currX, currY);\n        ctx.strokeStyle = x;\n        ctx.lineWidth = y;\n        ctx.stroke();\n        ctx.closePath();\n        // send draw data\n        socket.emit(\"draw\", { currX, currY, prevX, prevY });\n      }\n    }\n  };\n\n  useEffect(() => {\n    setContext(canvas.current.getContext(\"2d\"));\n  }, [canvas]);\n\n  return (\n    <section className=\"Canvas\">\n      <canvas\n        ref={canvas}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        Please update your browser\n      </canvas>\n    </section>\n  );\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}