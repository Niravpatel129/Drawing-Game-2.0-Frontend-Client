{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LazyBrush } from \"lazy-brush\";\nimport { Catenary } from \"catenary-curve\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nimport drawImage from \"./drawImage\";\n\nfunction midPointBtw(p1, p2) {\n  return {\n    x: p1.x + (p2.x - p1.x) / 2,\n    y: p1.y + (p2.y - p1.y) / 2\n  };\n}\n\nvar canvasStyle = {\n  display: \"block\",\n  position: \"absolute\"\n};\nvar canvasTypes = [{\n  name: \"interface\",\n  zIndex: 15\n}, {\n  name: \"drawing\",\n  zIndex: 11\n}, {\n  name: \"temp\",\n  zIndex: 12\n}, {\n  name: \"grid\",\n  zIndex: 10\n}];\nvar dimensionsPropTypes = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\n\nvar _default = (_temp = _class = function (_PureComponent) {\n  _inherits(_default, _PureComponent);\n\n  function _default(props) {\n    _classCallCheck(this, _default);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this.componentWillUnmount = function () {\n      _this.canvasObserver.unobserve(_this.canvasContainer);\n    };\n\n    _this.drawImage = function () {\n      if (!_this.props.imgSrc) return; // Load the image\n\n      _this.image = new Image();\n      _this.image.src = _this.props.imgSrc; // Draw the image once loaded\n\n      _this.image.onload = function () {\n        return drawImage({\n          ctx: _this.ctx.grid,\n          img: _this.image\n        });\n      };\n    };\n\n    _this.undo = function () {\n      var lines = _this.lines.slice(0, -1);\n\n      _this.clear();\n\n      _this.simulateDrawingLines({\n        lines: lines,\n        immediate: true\n      });\n\n      _this.triggerOnChange();\n    };\n\n    _this.getSaveData = function () {\n      // Construct and return the stringified saveData object\n      return JSON.stringify({\n        lines: _this.lines,\n        width: _this.props.canvasWidth,\n        height: _this.props.canvasHeight\n      });\n    };\n\n    _this.loadSaveData = function (saveData) {\n      var immediate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.immediateLoading;\n\n      if (typeof saveData !== \"string\") {\n        throw new Error(\"saveData needs to be of type string!\");\n      }\n\n      var _JSON$parse = JSON.parse(saveData),\n          lines = _JSON$parse.lines,\n          width = _JSON$parse.width,\n          height = _JSON$parse.height;\n\n      if (!lines || typeof lines.push !== \"function\") {\n        throw new Error(\"saveData.lines needs to be an array!\");\n      }\n\n      _this.clear();\n\n      if (width === _this.props.canvasWidth && height === _this.props.canvasHeight) {\n        _this.simulateDrawingLines({\n          lines: lines,\n          immediate: immediate\n        });\n      } else {\n        // we need to rescale the lines based on saved & current dimensions\n        var scaleX = _this.props.canvasWidth / width;\n        var scaleY = _this.props.canvasHeight / height;\n        var scaleAvg = (scaleX + scaleY) / 2;\n\n        _this.simulateDrawingLines({\n          lines: lines.map(function (line) {\n            return _extends({}, line, {\n              points: line.points.map(function (p) {\n                return {\n                  x: p.x * scaleX,\n                  y: p.y * scaleY\n                };\n              }),\n              brushRadius: line.brushRadius * scaleAvg\n            });\n          }),\n          immediate: immediate\n        });\n      }\n    };\n\n    _this.simulateDrawingLines = function (_ref) {\n      var lines = _ref.lines,\n          immediate = _ref.immediate; // Simulate live-drawing of the loaded lines\n      // TODO use a generator\n\n      var curTime = 0;\n      var timeoutGap = immediate ? 0 : _this.props.loadTimeOffset;\n      lines.forEach(function (line) {\n        var points = line.points,\n            brushColor = line.brushColor,\n            brushRadius = line.brushRadius; // Draw all at once if immediate flag is set, instead of using setTimeout\n\n        if (immediate) {\n          // Draw the points\n          _this.drawPoints({\n            points: points,\n            brushColor: brushColor,\n            brushRadius: brushRadius\n          }); // Save line with the drawn points\n\n\n          _this.points = points;\n\n          _this.saveLine({\n            brushColor: brushColor,\n            brushRadius: brushRadius\n          });\n\n          return;\n        } // Use timeout to draw\n\n\n        var _loop = function _loop(i) {\n          curTime += timeoutGap;\n          window.setTimeout(function () {\n            _this.drawPoints({\n              points: points.slice(0, i + 1),\n              brushColor: brushColor,\n              brushRadius: brushRadius\n            });\n          }, curTime);\n        };\n\n        for (var i = 1; i < points.length; i++) {\n          _loop(i);\n        }\n\n        curTime += timeoutGap;\n        window.setTimeout(function () {\n          // Save this line with its props instead of this.props\n          _this.points = points;\n\n          _this.saveLine({\n            brushColor: brushColor,\n            brushRadius: brushRadius\n          });\n        }, curTime);\n      });\n    };\n\n    _this.handleTouchStart = function (e) {\n      var _this$getPointerPos = _this.getPointerPos(e),\n          x = _this$getPointerPos.x,\n          y = _this$getPointerPos.y;\n\n      _this.lazy.update({\n        x: x,\n        y: y\n      }, {\n        both: true\n      });\n\n      _this.handleMouseDown(e);\n\n      _this.mouseHasMoved = true;\n    };\n\n    _this.handleTouchMove = function (e) {\n      e.preventDefault();\n\n      var _this$getPointerPos2 = _this.getPointerPos(e),\n          x = _this$getPointerPos2.x,\n          y = _this$getPointerPos2.y;\n\n      _this.handlePointerMove(x, y);\n    };\n\n    _this.handleTouchEnd = function (e) {\n      _this.handleMouseUp(e);\n\n      var brush = _this.lazy.getBrushCoordinates();\n\n      _this.lazy.update({\n        x: brush.x,\n        y: brush.y\n      }, {\n        both: true\n      });\n\n      _this.mouseHasMoved = true;\n    };\n\n    _this.handleMouseDown = function (e) {\n      e.preventDefault();\n      _this.isPressing = true;\n    };\n\n    _this.handleMouseMove = function (e) {\n      var _this$getPointerPos3 = _this.getPointerPos(e),\n          x = _this$getPointerPos3.x,\n          y = _this$getPointerPos3.y;\n\n      _this.handlePointerMove(x, y);\n    };\n\n    _this.handleMouseUp = function (e) {\n      e.preventDefault();\n      _this.isDrawing = false;\n      _this.isPressing = false;\n\n      _this.saveLine();\n    };\n\n    _this.handleCanvasResize = function (entries, observer) {\n      var saveData = _this.getSaveData();\n\n      for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref2 = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref2 = _i.value;\n        }\n\n        var entry = _ref2;\n        var _entry$contentRect = entry.contentRect,\n            width = _entry$contentRect.width,\n            height = _entry$contentRect.height;\n\n        _this.setCanvasSize(_this.canvas.interface, width, height);\n\n        _this.setCanvasSize(_this.canvas.drawing, width, height);\n\n        _this.setCanvasSize(_this.canvas.temp, width, height);\n\n        _this.setCanvasSize(_this.canvas.grid, width, height);\n\n        _this.drawGrid(_this.ctx.grid);\n\n        _this.loop({\n          once: true\n        });\n      }\n\n      _this.loadSaveData(saveData, true);\n    };\n\n    _this.setCanvasSize = function (canvas, width, height) {\n      canvas.width = width;\n      canvas.height = height;\n      canvas.style.width = width;\n      canvas.style.height = height;\n    };\n\n    _this.getPointerPos = function (e) {\n      var rect = _this.canvas.interface.getBoundingClientRect(); // use cursor pos as default\n\n\n      var clientX = e.clientX;\n      var clientY = e.clientY; // use first touch if available\n\n      if (e.changedTouches && e.changedTouches.length > 0) {\n        clientX = e.changedTouches[0].clientX;\n        clientY = e.changedTouches[0].clientY;\n      } // return mouse/touch position inside canvas\n\n\n      return {\n        x: clientX - rect.left,\n        y: clientY - rect.top\n      };\n    };\n\n    _this.handlePointerMove = function (x, y) {\n      if (_this.props.disabled) return;\n\n      var hasChanged = _this.lazy.update({\n        x: x,\n        y: y\n      });\n\n      var isDisabled = !_this.lazy.isEnabled();\n\n      if (_this.isPressing && hasChanged && !_this.isDrawing || isDisabled && _this.isPressing) {\n        // Start drawing and add point\n        _this.isDrawing = true;\n\n        _this.points.push(_this.lazy.brush.toObject());\n      }\n\n      if (_this.isDrawing && (_this.lazy.brushHasMoved() || isDisabled)) {\n        // Add new point\n        _this.points.push(_this.lazy.brush.toObject()); // Draw current points\n\n\n        _this.drawPoints({\n          points: _this.points,\n          brushColor: _this.props.brushColor,\n          brushRadius: _this.props.brushRadius\n        });\n      }\n\n      _this.mouseHasMoved = true;\n    };\n\n    _this.drawPoints = function (_ref3) {\n      var points = _ref3.points,\n          brushColor = _ref3.brushColor,\n          brushRadius = _ref3.brushRadius;\n      _this.ctx.temp.lineJoin = \"round\";\n      _this.ctx.temp.lineCap = \"round\";\n      _this.ctx.temp.strokeStyle = brushColor;\n\n      _this.ctx.temp.clearRect(0, 0, _this.ctx.temp.canvas.width, _this.ctx.temp.canvas.height);\n\n      _this.ctx.temp.lineWidth = brushRadius * 2;\n      var p1 = points[0];\n      var p2 = points[1];\n\n      _this.ctx.temp.moveTo(p2.x, p2.y);\n\n      _this.ctx.temp.beginPath();\n\n      for (var i = 1, len = points.length; i < len; i++) {\n        // we pick the point between pi+1 & pi+2 as the\n        // end point and p1 as our control point\n        var midPoint = midPointBtw(p1, p2);\n\n        _this.ctx.temp.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\n        p1 = points[i];\n        p2 = points[i + 1];\n      } // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n\n\n      _this.ctx.temp.lineTo(p1.x, p1.y);\n\n      _this.ctx.temp.stroke();\n    };\n\n    _this.saveLine = function () {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          brushColor = _ref4.brushColor,\n          brushRadius = _ref4.brushRadius;\n\n      if (_this.points.length < 2) return; // Save as new line\n\n      _this.lines.push({\n        points: [].concat(_this.points),\n        brushColor: brushColor || _this.props.brushColor,\n        brushRadius: brushRadius || _this.props.brushRadius\n      }); // Reset points array\n\n\n      _this.points.length = 0;\n      var width = _this.canvas.temp.width;\n      var height = _this.canvas.temp.height; // Copy the line to the drawing canvas\n\n      _this.ctx.drawing.drawImage(_this.canvas.temp, 0, 0, width, height); // Clear the temporary line-drawing canvas\n\n\n      _this.ctx.temp.clearRect(0, 0, width, height);\n\n      _this.triggerOnChange();\n    };\n\n    _this.triggerOnChange = function () {\n      _this.props.onChange && _this.props.onChange(_this);\n    };\n\n    _this.clear = function () {\n      _this.lines = [];\n      _this.valuesChanged = true;\n\n      _this.ctx.drawing.clearRect(0, 0, _this.canvas.drawing.width, _this.canvas.drawing.height);\n\n      _this.ctx.temp.clearRect(0, 0, _this.canvas.temp.width, _this.canvas.temp.height);\n    };\n\n    _this.loop = function () {\n      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref5$once = _ref5.once,\n          once = _ref5$once === undefined ? false : _ref5$once;\n\n      if (_this.mouseHasMoved || _this.valuesChanged) {\n        var pointer = _this.lazy.getPointerCoordinates();\n\n        var brush = _this.lazy.getBrushCoordinates();\n\n        _this.drawInterface(_this.ctx.interface, pointer, brush);\n\n        _this.mouseHasMoved = false;\n        _this.valuesChanged = false;\n      }\n\n      if (!once) {\n        window.requestAnimationFrame(function () {\n          _this.loop();\n        });\n      }\n    };\n\n    _this.drawGrid = function (ctx) {\n      if (_this.props.hideGrid) return;\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.beginPath();\n      ctx.setLineDash([5, 1]);\n      ctx.setLineDash([]);\n      ctx.strokeStyle = _this.props.gridColor;\n      ctx.lineWidth = 0.5;\n      var gridSize = 25;\n      var countX = 0;\n\n      while (countX < ctx.canvas.width) {\n        countX += gridSize;\n        ctx.moveTo(countX, 0);\n        ctx.lineTo(countX, ctx.canvas.height);\n      }\n\n      ctx.stroke();\n      var countY = 0;\n\n      while (countY < ctx.canvas.height) {\n        countY += gridSize;\n        ctx.moveTo(0, countY);\n        ctx.lineTo(ctx.canvas.width, countY);\n      }\n\n      ctx.stroke();\n    };\n\n    _this.drawInterface = function (ctx, pointer, brush) {\n      if (_this.props.hideInterface) return;\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // Draw brush preview\n\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.brushColor;\n      ctx.arc(brush.x, brush.y, _this.props.brushRadius, 0, Math.PI * 2, true);\n      ctx.fill(); // Draw mouse point (the one directly at the cursor)\n\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.catenaryColor;\n      ctx.arc(pointer.x, pointer.y, 4, 0, Math.PI * 2, true);\n      ctx.fill(); // Draw catenary\n\n      if (_this.lazy.isEnabled()) {\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n        ctx.lineCap = \"round\";\n        ctx.setLineDash([2, 4]);\n        ctx.strokeStyle = _this.props.catenaryColor;\n\n        _this.catenary.drawToCanvas(_this.ctx.interface, brush, pointer, _this.chainLength);\n\n        ctx.stroke();\n      } // Draw brush point (the one in the middle of the brush preview)\n\n\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.catenaryColor;\n      ctx.arc(brush.x, brush.y, 2, 0, Math.PI * 2, true);\n      ctx.fill();\n    };\n\n    _this.canvas = {};\n    _this.ctx = {};\n    _this.catenary = new Catenary();\n    _this.points = [];\n    _this.lines = [];\n    _this.mouseHasMoved = true;\n    _this.valuesChanged = true;\n    _this.isDrawing = false;\n    _this.isPressing = false;\n    return _this;\n  }\n\n  _default.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this.lazy = new LazyBrush({\n      radius: this.props.lazyRadius * window.devicePixelRatio,\n      enabled: true,\n      initialPoint: {\n        x: window.innerWidth / 2,\n        y: window.innerHeight / 2\n      }\n    });\n    this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n    this.canvasObserver = new ResizeObserver(function (entries, observer) {\n      return _this2.handleCanvasResize(entries, observer);\n    });\n    this.canvasObserver.observe(this.canvasContainer);\n    this.drawImage();\n    this.loop();\n    window.setTimeout(function () {\n      var initX = window.innerWidth / 2;\n      var initY = window.innerHeight / 2;\n\n      _this2.lazy.update({\n        x: initX - _this2.chainLength / 4,\n        y: initY\n      }, {\n        both: true\n      });\n\n      _this2.lazy.update({\n        x: initX + _this2.chainLength / 4,\n        y: initY\n      }, {\n        both: false\n      });\n\n      _this2.mouseHasMoved = true;\n      _this2.valuesChanged = true;\n\n      _this2.clear(); // Load saveData from prop if it exists\n\n\n      if (_this2.props.saveData) {\n        _this2.loadSaveData(_this2.props.saveData);\n      }\n    }, 100);\n  };\n\n  _default.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.lazyRadius !== this.props.lazyRadius) {\n      // Set new lazyRadius values\n      this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n      this.lazy.setRadius(this.props.lazyRadius * window.devicePixelRatio);\n    }\n\n    if (prevProps.saveData !== this.props.saveData) {\n      this.loadSaveData(this.props.saveData);\n    }\n\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      // Signal this.loop function that values changed\n      this.valuesChanged = true;\n    }\n  };\n\n  _default.prototype.render = function render() {\n    var _this3 = this;\n\n    return React.createElement(\"div\", {\n      className: this.props.className,\n      style: _extends({\n        display: \"block\",\n        background: this.props.backgroundColor,\n        touchAction: \"none\",\n        width: this.props.canvasWidth,\n        height: this.props.canvasHeight\n      }, this.props.style),\n      ref: function ref(container) {\n        if (container) {\n          _this3.canvasContainer = container;\n        }\n      }\n    }, canvasTypes.map(function (_ref6) {\n      var name = _ref6.name,\n          zIndex = _ref6.zIndex;\n      var isInterface = name === \"interface\";\n      return React.createElement(\"canvas\", {\n        key: name,\n        ref: function ref(canvas) {\n          if (canvas) {\n            _this3.canvas[name] = canvas;\n            _this3.ctx[name] = canvas.getContext(\"2d\");\n          }\n        },\n        style: _extends({}, canvasStyle, {\n          zIndex: zIndex\n        }),\n        onMouseDown: isInterface ? _this3.handleMouseDown : undefined,\n        onMouseMove: isInterface ? _this3.handleMouseMove : undefined,\n        onMouseUp: isInterface ? _this3.handleMouseUp : undefined,\n        onMouseOut: isInterface ? _this3.handleMouseUp : undefined,\n        onTouchStart: isInterface ? _this3.handleTouchStart : undefined,\n        onTouchMove: isInterface ? _this3.handleTouchMove : undefined,\n        onTouchEnd: isInterface ? _this3.handleTouchEnd : undefined,\n        onTouchCancel: isInterface ? _this3.handleTouchEnd : undefined\n      });\n    }));\n  };\n\n  return _default;\n}(PureComponent), _class.propTypes = {\n  onChange: PropTypes.func,\n  loadTimeOffset: PropTypes.number,\n  lazyRadius: PropTypes.number,\n  brushRadius: PropTypes.number,\n  brushColor: PropTypes.string,\n  catenaryColor: PropTypes.string,\n  gridColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  hideGrid: PropTypes.bool,\n  canvasWidth: dimensionsPropTypes,\n  canvasHeight: dimensionsPropTypes,\n  disabled: PropTypes.bool,\n  imgSrc: PropTypes.string,\n  saveData: PropTypes.string,\n  immediateLoading: PropTypes.bool,\n  hideInterface: PropTypes.bool\n}, _class.defaultProps = {\n  onChange: null,\n  loadTimeOffset: 5,\n  lazyRadius: 12,\n  brushRadius: 10,\n  brushColor: \"#444\",\n  catenaryColor: \"#0a0302\",\n  gridColor: \"rgba(150,150,150,0.17)\",\n  backgroundColor: \"#FFF\",\n  hideGrid: false,\n  canvasWidth: 400,\n  canvasHeight: 400,\n  disabled: false,\n  imgSrc: \"\",\n  saveData: \"\",\n  immediateLoading: false,\n  hideInterface: false\n}, _temp);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/node_modules/react-canvas-draw/es/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_class","_temp","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","LazyBrush","Catenary","ResizeObserver","drawImage","midPointBtw","p1","p2","x","y","canvasStyle","display","position","canvasTypes","name","zIndex","dimensionsPropTypes","oneOfType","number","string","_default","_PureComponent","props","_this","componentWillUnmount","canvasObserver","unobserve","canvasContainer","imgSrc","image","Image","src","onload","ctx","grid","img","undo","lines","slice","clear","simulateDrawingLines","immediate","triggerOnChange","getSaveData","JSON","stringify","width","canvasWidth","height","canvasHeight","loadSaveData","saveData","undefined","immediateLoading","Error","_JSON$parse","parse","push","scaleX","scaleY","scaleAvg","map","line","points","p","brushRadius","_ref","curTime","timeoutGap","loadTimeOffset","forEach","brushColor","drawPoints","saveLine","_loop","window","setTimeout","handleTouchStart","e","_this$getPointerPos","getPointerPos","lazy","update","both","handleMouseDown","mouseHasMoved","handleTouchMove","preventDefault","_this$getPointerPos2","handlePointerMove","handleTouchEnd","handleMouseUp","brush","getBrushCoordinates","isPressing","handleMouseMove","_this$getPointerPos3","isDrawing","handleCanvasResize","entries","observer","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","next","done","entry","_entry$contentRect","contentRect","setCanvasSize","canvas","interface","drawing","temp","drawGrid","loop","once","style","rect","getBoundingClientRect","clientX","clientY","changedTouches","left","top","disabled","hasChanged","isDisabled","isEnabled","toObject","brushHasMoved","_ref3","lineJoin","lineCap","strokeStyle","clearRect","lineWidth","moveTo","beginPath","len","midPoint","quadraticCurveTo","lineTo","stroke","_ref4","concat","onChange","valuesChanged","_ref5","_ref5$once","pointer","getPointerCoordinates","drawInterface","requestAnimationFrame","hideGrid","setLineDash","gridColor","gridSize","countX","countY","hideInterface","fillStyle","arc","Math","PI","fill","catenaryColor","catenary","drawToCanvas","chainLength","componentDidMount","_this2","radius","lazyRadius","devicePixelRatio","enabled","initialPoint","innerWidth","innerHeight","observe","initX","initY","componentDidUpdate","prevProps","setRadius","render","_this3","createElement","className","background","backgroundColor","touchAction","ref","container","_ref6","isInterface","getContext","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","propTypes","func","bool","defaultProps","default"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LazyBrush } from \"lazy-brush\";\nimport { Catenary } from \"catenary-curve\";\n\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nimport drawImage from \"./drawImage\";\n\nfunction midPointBtw(p1, p2) {\n  return {\n    x: p1.x + (p2.x - p1.x) / 2,\n    y: p1.y + (p2.y - p1.y) / 2\n  };\n}\n\nvar canvasStyle = {\n  display: \"block\",\n  position: \"absolute\"\n};\n\nvar canvasTypes = [{\n  name: \"interface\",\n  zIndex: 15\n}, {\n  name: \"drawing\",\n  zIndex: 11\n}, {\n  name: \"temp\",\n  zIndex: 12\n}, {\n  name: \"grid\",\n  zIndex: 10\n}];\n\nvar dimensionsPropTypes = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\n\nvar _default = (_temp = _class = function (_PureComponent) {\n  _inherits(_default, _PureComponent);\n\n  function _default(props) {\n    _classCallCheck(this, _default);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this.componentWillUnmount = function () {\n      _this.canvasObserver.unobserve(_this.canvasContainer);\n    };\n\n    _this.drawImage = function () {\n      if (!_this.props.imgSrc) return;\n\n      // Load the image\n      _this.image = new Image();\n      _this.image.src = _this.props.imgSrc;\n\n      // Draw the image once loaded\n      _this.image.onload = function () {\n        return drawImage({ ctx: _this.ctx.grid, img: _this.image });\n      };\n    };\n\n    _this.undo = function () {\n      var lines = _this.lines.slice(0, -1);\n      _this.clear();\n      _this.simulateDrawingLines({ lines: lines, immediate: true });\n      _this.triggerOnChange();\n    };\n\n    _this.getSaveData = function () {\n      // Construct and return the stringified saveData object\n      return JSON.stringify({\n        lines: _this.lines,\n        width: _this.props.canvasWidth,\n        height: _this.props.canvasHeight\n      });\n    };\n\n    _this.loadSaveData = function (saveData) {\n      var immediate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.immediateLoading;\n\n      if (typeof saveData !== \"string\") {\n        throw new Error(\"saveData needs to be of type string!\");\n      }\n\n      var _JSON$parse = JSON.parse(saveData),\n          lines = _JSON$parse.lines,\n          width = _JSON$parse.width,\n          height = _JSON$parse.height;\n\n      if (!lines || typeof lines.push !== \"function\") {\n        throw new Error(\"saveData.lines needs to be an array!\");\n      }\n\n      _this.clear();\n\n      if (width === _this.props.canvasWidth && height === _this.props.canvasHeight) {\n        _this.simulateDrawingLines({\n          lines: lines,\n          immediate: immediate\n        });\n      } else {\n        // we need to rescale the lines based on saved & current dimensions\n        var scaleX = _this.props.canvasWidth / width;\n        var scaleY = _this.props.canvasHeight / height;\n        var scaleAvg = (scaleX + scaleY) / 2;\n\n        _this.simulateDrawingLines({\n          lines: lines.map(function (line) {\n            return _extends({}, line, {\n              points: line.points.map(function (p) {\n                return {\n                  x: p.x * scaleX,\n                  y: p.y * scaleY\n                };\n              }),\n              brushRadius: line.brushRadius * scaleAvg\n            });\n          }),\n          immediate: immediate\n        });\n      }\n    };\n\n    _this.simulateDrawingLines = function (_ref) {\n      var lines = _ref.lines,\n          immediate = _ref.immediate;\n\n      // Simulate live-drawing of the loaded lines\n      // TODO use a generator\n      var curTime = 0;\n      var timeoutGap = immediate ? 0 : _this.props.loadTimeOffset;\n\n      lines.forEach(function (line) {\n        var points = line.points,\n            brushColor = line.brushColor,\n            brushRadius = line.brushRadius;\n\n        // Draw all at once if immediate flag is set, instead of using setTimeout\n\n        if (immediate) {\n          // Draw the points\n          _this.drawPoints({\n            points: points,\n            brushColor: brushColor,\n            brushRadius: brushRadius\n          });\n\n          // Save line with the drawn points\n          _this.points = points;\n          _this.saveLine({ brushColor: brushColor, brushRadius: brushRadius });\n          return;\n        }\n\n        // Use timeout to draw\n\n        var _loop = function _loop(i) {\n          curTime += timeoutGap;\n          window.setTimeout(function () {\n            _this.drawPoints({\n              points: points.slice(0, i + 1),\n              brushColor: brushColor,\n              brushRadius: brushRadius\n            });\n          }, curTime);\n        };\n\n        for (var i = 1; i < points.length; i++) {\n          _loop(i);\n        }\n\n        curTime += timeoutGap;\n        window.setTimeout(function () {\n          // Save this line with its props instead of this.props\n          _this.points = points;\n          _this.saveLine({ brushColor: brushColor, brushRadius: brushRadius });\n        }, curTime);\n      });\n    };\n\n    _this.handleTouchStart = function (e) {\n      var _this$getPointerPos = _this.getPointerPos(e),\n          x = _this$getPointerPos.x,\n          y = _this$getPointerPos.y;\n\n      _this.lazy.update({ x: x, y: y }, { both: true });\n      _this.handleMouseDown(e);\n\n      _this.mouseHasMoved = true;\n    };\n\n    _this.handleTouchMove = function (e) {\n      e.preventDefault();\n\n      var _this$getPointerPos2 = _this.getPointerPos(e),\n          x = _this$getPointerPos2.x,\n          y = _this$getPointerPos2.y;\n\n      _this.handlePointerMove(x, y);\n    };\n\n    _this.handleTouchEnd = function (e) {\n      _this.handleMouseUp(e);\n      var brush = _this.lazy.getBrushCoordinates();\n      _this.lazy.update({ x: brush.x, y: brush.y }, { both: true });\n      _this.mouseHasMoved = true;\n    };\n\n    _this.handleMouseDown = function (e) {\n      e.preventDefault();\n      _this.isPressing = true;\n    };\n\n    _this.handleMouseMove = function (e) {\n      var _this$getPointerPos3 = _this.getPointerPos(e),\n          x = _this$getPointerPos3.x,\n          y = _this$getPointerPos3.y;\n\n      _this.handlePointerMove(x, y);\n    };\n\n    _this.handleMouseUp = function (e) {\n      e.preventDefault();\n      _this.isDrawing = false;\n      _this.isPressing = false;\n\n      _this.saveLine();\n    };\n\n    _this.handleCanvasResize = function (entries, observer) {\n      var saveData = _this.getSaveData();\n      for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref2 = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref2 = _i.value;\n        }\n\n        var entry = _ref2;\n        var _entry$contentRect = entry.contentRect,\n            width = _entry$contentRect.width,\n            height = _entry$contentRect.height;\n\n        _this.setCanvasSize(_this.canvas.interface, width, height);\n        _this.setCanvasSize(_this.canvas.drawing, width, height);\n        _this.setCanvasSize(_this.canvas.temp, width, height);\n        _this.setCanvasSize(_this.canvas.grid, width, height);\n\n        _this.drawGrid(_this.ctx.grid);\n        _this.loop({ once: true });\n      }\n      _this.loadSaveData(saveData, true);\n    };\n\n    _this.setCanvasSize = function (canvas, width, height) {\n      canvas.width = width;\n      canvas.height = height;\n      canvas.style.width = width;\n      canvas.style.height = height;\n    };\n\n    _this.getPointerPos = function (e) {\n      var rect = _this.canvas.interface.getBoundingClientRect();\n\n      // use cursor pos as default\n      var clientX = e.clientX;\n      var clientY = e.clientY;\n\n      // use first touch if available\n      if (e.changedTouches && e.changedTouches.length > 0) {\n        clientX = e.changedTouches[0].clientX;\n        clientY = e.changedTouches[0].clientY;\n      }\n\n      // return mouse/touch position inside canvas\n      return {\n        x: clientX - rect.left,\n        y: clientY - rect.top\n      };\n    };\n\n    _this.handlePointerMove = function (x, y) {\n      if (_this.props.disabled) return;\n\n      var hasChanged = _this.lazy.update({ x: x, y: y });\n      var isDisabled = !_this.lazy.isEnabled();\n\n      if (_this.isPressing && hasChanged && !_this.isDrawing || isDisabled && _this.isPressing) {\n        // Start drawing and add point\n        _this.isDrawing = true;\n        _this.points.push(_this.lazy.brush.toObject());\n      }\n\n      if (_this.isDrawing && (_this.lazy.brushHasMoved() || isDisabled)) {\n        // Add new point\n        _this.points.push(_this.lazy.brush.toObject());\n\n        // Draw current points\n        _this.drawPoints({\n          points: _this.points,\n          brushColor: _this.props.brushColor,\n          brushRadius: _this.props.brushRadius\n        });\n      }\n\n      _this.mouseHasMoved = true;\n    };\n\n    _this.drawPoints = function (_ref3) {\n      var points = _ref3.points,\n          brushColor = _ref3.brushColor,\n          brushRadius = _ref3.brushRadius;\n\n      _this.ctx.temp.lineJoin = \"round\";\n      _this.ctx.temp.lineCap = \"round\";\n      _this.ctx.temp.strokeStyle = brushColor;\n\n      _this.ctx.temp.clearRect(0, 0, _this.ctx.temp.canvas.width, _this.ctx.temp.canvas.height);\n      _this.ctx.temp.lineWidth = brushRadius * 2;\n\n      var p1 = points[0];\n      var p2 = points[1];\n\n      _this.ctx.temp.moveTo(p2.x, p2.y);\n      _this.ctx.temp.beginPath();\n\n      for (var i = 1, len = points.length; i < len; i++) {\n        // we pick the point between pi+1 & pi+2 as the\n        // end point and p1 as our control point\n        var midPoint = midPointBtw(p1, p2);\n        _this.ctx.temp.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n        p1 = points[i];\n        p2 = points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      _this.ctx.temp.lineTo(p1.x, p1.y);\n      _this.ctx.temp.stroke();\n    };\n\n    _this.saveLine = function () {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          brushColor = _ref4.brushColor,\n          brushRadius = _ref4.brushRadius;\n\n      if (_this.points.length < 2) return;\n\n      // Save as new line\n      _this.lines.push({\n        points: [].concat(_this.points),\n        brushColor: brushColor || _this.props.brushColor,\n        brushRadius: brushRadius || _this.props.brushRadius\n      });\n\n      // Reset points array\n      _this.points.length = 0;\n\n      var width = _this.canvas.temp.width;\n      var height = _this.canvas.temp.height;\n\n      // Copy the line to the drawing canvas\n      _this.ctx.drawing.drawImage(_this.canvas.temp, 0, 0, width, height);\n\n      // Clear the temporary line-drawing canvas\n      _this.ctx.temp.clearRect(0, 0, width, height);\n\n      _this.triggerOnChange();\n    };\n\n    _this.triggerOnChange = function () {\n      _this.props.onChange && _this.props.onChange(_this);\n    };\n\n    _this.clear = function () {\n      _this.lines = [];\n      _this.valuesChanged = true;\n      _this.ctx.drawing.clearRect(0, 0, _this.canvas.drawing.width, _this.canvas.drawing.height);\n      _this.ctx.temp.clearRect(0, 0, _this.canvas.temp.width, _this.canvas.temp.height);\n    };\n\n    _this.loop = function () {\n      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref5$once = _ref5.once,\n          once = _ref5$once === undefined ? false : _ref5$once;\n\n      if (_this.mouseHasMoved || _this.valuesChanged) {\n        var pointer = _this.lazy.getPointerCoordinates();\n        var brush = _this.lazy.getBrushCoordinates();\n\n        _this.drawInterface(_this.ctx.interface, pointer, brush);\n        _this.mouseHasMoved = false;\n        _this.valuesChanged = false;\n      }\n\n      if (!once) {\n        window.requestAnimationFrame(function () {\n          _this.loop();\n        });\n      }\n    };\n\n    _this.drawGrid = function (ctx) {\n      if (_this.props.hideGrid) return;\n\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n      ctx.beginPath();\n      ctx.setLineDash([5, 1]);\n      ctx.setLineDash([]);\n      ctx.strokeStyle = _this.props.gridColor;\n      ctx.lineWidth = 0.5;\n\n      var gridSize = 25;\n\n      var countX = 0;\n      while (countX < ctx.canvas.width) {\n        countX += gridSize;\n        ctx.moveTo(countX, 0);\n        ctx.lineTo(countX, ctx.canvas.height);\n      }\n      ctx.stroke();\n\n      var countY = 0;\n      while (countY < ctx.canvas.height) {\n        countY += gridSize;\n        ctx.moveTo(0, countY);\n        ctx.lineTo(ctx.canvas.width, countY);\n      }\n      ctx.stroke();\n    };\n\n    _this.drawInterface = function (ctx, pointer, brush) {\n      if (_this.props.hideInterface) return;\n\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n      // Draw brush preview\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.brushColor;\n      ctx.arc(brush.x, brush.y, _this.props.brushRadius, 0, Math.PI * 2, true);\n      ctx.fill();\n\n      // Draw mouse point (the one directly at the cursor)\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.catenaryColor;\n      ctx.arc(pointer.x, pointer.y, 4, 0, Math.PI * 2, true);\n      ctx.fill();\n\n      // Draw catenary\n      if (_this.lazy.isEnabled()) {\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n        ctx.lineCap = \"round\";\n        ctx.setLineDash([2, 4]);\n        ctx.strokeStyle = _this.props.catenaryColor;\n        _this.catenary.drawToCanvas(_this.ctx.interface, brush, pointer, _this.chainLength);\n        ctx.stroke();\n      }\n\n      // Draw brush point (the one in the middle of the brush preview)\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.catenaryColor;\n      ctx.arc(brush.x, brush.y, 2, 0, Math.PI * 2, true);\n      ctx.fill();\n    };\n\n    _this.canvas = {};\n    _this.ctx = {};\n\n    _this.catenary = new Catenary();\n\n    _this.points = [];\n    _this.lines = [];\n\n    _this.mouseHasMoved = true;\n    _this.valuesChanged = true;\n    _this.isDrawing = false;\n    _this.isPressing = false;\n    return _this;\n  }\n\n  _default.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this.lazy = new LazyBrush({\n      radius: this.props.lazyRadius * window.devicePixelRatio,\n      enabled: true,\n      initialPoint: {\n        x: window.innerWidth / 2,\n        y: window.innerHeight / 2\n      }\n    });\n    this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n\n    this.canvasObserver = new ResizeObserver(function (entries, observer) {\n      return _this2.handleCanvasResize(entries, observer);\n    });\n    this.canvasObserver.observe(this.canvasContainer);\n\n    this.drawImage();\n    this.loop();\n\n    window.setTimeout(function () {\n      var initX = window.innerWidth / 2;\n      var initY = window.innerHeight / 2;\n      _this2.lazy.update({ x: initX - _this2.chainLength / 4, y: initY }, { both: true });\n      _this2.lazy.update({ x: initX + _this2.chainLength / 4, y: initY }, { both: false });\n      _this2.mouseHasMoved = true;\n      _this2.valuesChanged = true;\n      _this2.clear();\n\n      // Load saveData from prop if it exists\n      if (_this2.props.saveData) {\n        _this2.loadSaveData(_this2.props.saveData);\n      }\n    }, 100);\n  };\n\n  _default.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.lazyRadius !== this.props.lazyRadius) {\n      // Set new lazyRadius values\n      this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n      this.lazy.setRadius(this.props.lazyRadius * window.devicePixelRatio);\n    }\n\n    if (prevProps.saveData !== this.props.saveData) {\n      this.loadSaveData(this.props.saveData);\n    }\n\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      // Signal this.loop function that values changed\n      this.valuesChanged = true;\n    }\n  };\n\n  _default.prototype.render = function render() {\n    var _this3 = this;\n\n    return React.createElement(\n      \"div\",\n      {\n        className: this.props.className,\n        style: _extends({\n          display: \"block\",\n          background: this.props.backgroundColor,\n          touchAction: \"none\",\n          width: this.props.canvasWidth,\n          height: this.props.canvasHeight\n        }, this.props.style),\n        ref: function ref(container) {\n          if (container) {\n            _this3.canvasContainer = container;\n          }\n        }\n      },\n      canvasTypes.map(function (_ref6) {\n        var name = _ref6.name,\n            zIndex = _ref6.zIndex;\n\n        var isInterface = name === \"interface\";\n        return React.createElement(\"canvas\", {\n          key: name,\n          ref: function ref(canvas) {\n            if (canvas) {\n              _this3.canvas[name] = canvas;\n              _this3.ctx[name] = canvas.getContext(\"2d\");\n            }\n          },\n          style: _extends({}, canvasStyle, { zIndex: zIndex }),\n          onMouseDown: isInterface ? _this3.handleMouseDown : undefined,\n          onMouseMove: isInterface ? _this3.handleMouseMove : undefined,\n          onMouseUp: isInterface ? _this3.handleMouseUp : undefined,\n          onMouseOut: isInterface ? _this3.handleMouseUp : undefined,\n          onTouchStart: isInterface ? _this3.handleTouchStart : undefined,\n          onTouchMove: isInterface ? _this3.handleTouchMove : undefined,\n          onTouchEnd: isInterface ? _this3.handleTouchEnd : undefined,\n          onTouchCancel: isInterface ? _this3.handleTouchEnd : undefined\n        });\n      })\n    );\n  };\n\n  return _default;\n}(PureComponent), _class.propTypes = {\n  onChange: PropTypes.func,\n  loadTimeOffset: PropTypes.number,\n  lazyRadius: PropTypes.number,\n  brushRadius: PropTypes.number,\n  brushColor: PropTypes.string,\n  catenaryColor: PropTypes.string,\n  gridColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  hideGrid: PropTypes.bool,\n  canvasWidth: dimensionsPropTypes,\n  canvasHeight: dimensionsPropTypes,\n  disabled: PropTypes.bool,\n  imgSrc: PropTypes.string,\n  saveData: PropTypes.string,\n  immediateLoading: PropTypes.bool,\n  hideInterface: PropTypes.bool\n}, _class.defaultProps = {\n  onChange: null,\n  loadTimeOffset: 5,\n  lazyRadius: 12,\n  brushRadius: 10,\n  brushColor: \"#444\",\n  catenaryColor: \"#0a0302\",\n  gridColor: \"rgba(150,150,150,0.17)\",\n  backgroundColor: \"#FFF\",\n  hideGrid: false,\n  canvasWidth: 400,\n  canvasHeight: 400,\n  disabled: false,\n  imgSrc: \"\",\n  saveData: \"\",\n  immediateLoading: false,\n  hideInterface: false\n}, _temp);\n\nexport { _default as default };"]},"metadata":{},"sourceType":"module"}