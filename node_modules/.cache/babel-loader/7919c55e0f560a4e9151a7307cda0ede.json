{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Canvas/Canvas.js\";\nimport React, { useRef, useEffect, useContext } from \"react\";\nimport \"./Canvas.scss\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport Chat from \"../Chat/Chat\";\nimport SocketContext from \"../../context\";\nimport { useSelector } from \"react-redux\"; // let socket;\n\nfunction Canvas() {\n  let _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n\n  const _useSelector = useSelector(state => state.contactReducer),\n        name = _useSelector.name,\n        room = _useSelector.room;\n\n  const canvas = useRef();\n  useEffect(() => {\n    let googleUserInfo = localStorageData;\n    socket.emit(\"join\", {\n      name,\n      room,\n      googleUserInfo\n    }, () => {\n      socket.emit(\"disconnect\");\n      alert(\"Error\");\n      socket.off();\n    });\n    socket.on(\"updateData\", data => {\n      if (canvas.current && data) {\n        canvas.current.loadSaveData(data, true);\n      }\n    });\n  }, [room, name, socket, localStorageData]);\n  useEffect(() => {\n    return () => {\n      socket.emit(\"disconnect\");\n      console.log(\"will unmount\");\n    };\n  }, [socket]);\n  return React.createElement(\"section\", {\n    className: \"Canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Chat, {\n    socket: socket,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"CanvasContainer\",\n    onMouseUp: () => {\n      socket.emit(\"drawingData\", {\n        data: canvas.current.getSaveData(),\n        room\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(CanvasDraw, {\n    ref: canvas,\n    disabled: false,\n    brushRadius: 6,\n    canvasWidth: 900,\n    canvasHeight: 600,\n    lazyRadius: 0,\n    hideInterface: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"UserList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Players\"), React.createElement(\"div\", {\n    className: \"user-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"RedSkyez\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"4 Points\"))))));\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Canvas/Canvas.js"],"names":["React","useRef","useEffect","useContext","CanvasDraw","Chat","SocketContext","useSelector","Canvas","socket","localStorageData","JSON","parse","localStorage","getItem","state","contactReducer","name","room","canvas","googleUserInfo","emit","alert","off","on","data","current","loadSaveData","console","log","getSaveData"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useContext } from \"react\";\n\nimport \"./Canvas.scss\";\nimport CanvasDraw from \"react-canvas-draw\";\n\nimport Chat from \"../Chat/Chat\";\nimport SocketContext from \"../../context\";\nimport { useSelector } from \"react-redux\";\n\n// let socket;\n\nfunction Canvas() {\n  let { socket } = useContext(SocketContext);\n  const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n  const { name, room } = useSelector(state => state.contactReducer);\n\n  const canvas = useRef();\n\n  useEffect(() => {\n    let googleUserInfo = localStorageData;\n\n    socket.emit(\"join\", { name, room, googleUserInfo }, () => {\n      socket.emit(\"disconnect\");\n      alert(\"Error\");\n      socket.off();\n    });\n\n    socket.on(\"updateData\", data => {\n      if (canvas.current && data) {\n        canvas.current.loadSaveData(data, true);\n      }\n    });\n  }, [room, name, socket, localStorageData]);\n\n  useEffect(() => {\n    return () => {\n      socket.emit(\"disconnect\");\n      console.log(\"will unmount\");\n    };\n  }, [socket]);\n\n  return (\n    <section className=\"Canvas\">\n      <div className=\"Container\">\n        <Chat socket={socket} />\n        <div\n          className=\"CanvasContainer\"\n          onMouseUp={() => {\n            socket.emit(\"drawingData\", {\n              data: canvas.current.getSaveData(),\n              room\n            });\n          }}\n        >\n          <CanvasDraw\n            ref={canvas}\n            disabled={false}\n            brushRadius={6}\n            canvasWidth={900}\n            canvasHeight={600}\n            lazyRadius={0}\n            hideInterface={false}\n          />\n          <div className=\"UserList\">\n            <h1>Players</h1>\n            <div className=\"user-card\">\n              <h3>RedSkyez</h3>\n              <p>4 Points</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}