{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Canvas/Canvas.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./Canvas.scss\";\nimport { isMobile } from \"react-device-detect\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport io from \"socket.io-client\";\nlet socket;\n\nfunction Canvas() {\n  const userInfo = useSelector(state => state.contactReducer);\n  console.log(user);\n  const canvas = useRef();\n  useEffect(() => {\n    socket = io.connect(\"http://localhost:5000/\");\n    socket.on(\"updateData\", data => {\n      if (canvas.current && data) {\n        canvas.current.loadSaveData(data, true);\n      }\n    });\n  }, []);\n\n  const undo = () => {\n    if (canvas) canvas.current.undo();\n  };\n\n  return React.createElement(\"section\", {\n    className: \"Canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, !isMobile ? React.createElement(\"div\", {\n    onMouseUp: () => {\n      socket.emit(\"drawingData\", canvas.current.getSaveData());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(CanvasDraw, {\n    ref: canvas,\n    canvasWidth: 1200,\n    canvasHeight: 550,\n    disabled: false,\n    lazyRadius: 0,\n    hideInterface: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: undo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Undo\")) : React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Mobile not supported\"));\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Canvas/Canvas.js"],"names":["React","useRef","useEffect","useSelector","isMobile","CanvasDraw","io","socket","Canvas","userInfo","state","contactReducer","console","log","user","canvas","connect","on","data","current","loadSaveData","undo","emit","getSaveData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,eAAP;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAMC,QAAQ,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEA,QAAMC,MAAM,GAAGd,MAAM,EAArB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,GAAGD,EAAE,CAACU,OAAH,CAAW,wBAAX,CAAT;AAEAT,IAAAA,MAAM,CAACU,EAAP,CAAU,YAAV,EAAwBC,IAAI,IAAI;AAC9B,UAAIH,MAAM,CAACI,OAAP,IAAkBD,IAAtB,EAA4B;AAC1BH,QAAAA,MAAM,CAACI,OAAP,CAAeC,YAAf,CAA4BF,IAA5B,EAAkC,IAAlC;AACD;AACF,KAJD;AAKD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMG,IAAI,GAAG,MAAM;AACjB,QAAIN,MAAJ,EAAYA,MAAM,CAACI,OAAP,CAAeE,IAAf;AACb,GAFD;;AAIA,SACE;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACjB,QAAD,GACC;AACE,IAAA,SAAS,EAAE,MAAM;AACfG,MAAAA,MAAM,CAACe,IAAP,CAAY,aAAZ,EAA2BP,MAAM,CAACI,OAAP,CAAeI,WAAf,EAA3B;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,UAAD;AACE,IAAA,GAAG,EAAER,MADP;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,YAAY,EAAE,GAHhB;AAIE,IAAA,QAAQ,EAAE,KAJZ;AAKE,IAAA,UAAU,EAAE,CALd;AAME,IAAA,aAAa,EAAE,KANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAaE;AAAQ,IAAA,OAAO,EAAEM,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,CADD,GAiBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAlBJ,CADF;AAuBD;;AAED,eAAeb,MAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport \"./Canvas.scss\";\nimport { isMobile } from \"react-device-detect\";\nimport CanvasDraw from \"react-canvas-draw\";\n\nimport io from \"socket.io-client\";\n\nlet socket;\n\nfunction Canvas() {\n  const userInfo = useSelector(state => state.contactReducer);\n  console.log(user);\n\n  const canvas = useRef();\n\n  useEffect(() => {\n    socket = io.connect(\"http://localhost:5000/\");\n\n    socket.on(\"updateData\", data => {\n      if (canvas.current && data) {\n        canvas.current.loadSaveData(data, true);\n      }\n    });\n  }, []);\n\n  const undo = () => {\n    if (canvas) canvas.current.undo();\n  };\n\n  return (\n    <section className=\"Canvas\">\n      {!isMobile ? (\n        <div\n          onMouseUp={() => {\n            socket.emit(\"drawingData\", canvas.current.getSaveData());\n          }}\n        >\n          <CanvasDraw\n            ref={canvas}\n            canvasWidth={1200}\n            canvasHeight={550}\n            disabled={false}\n            lazyRadius={0}\n            hideInterface={false}\n          />\n          <button onClick={undo}>Undo</button>\n        </div>\n      ) : (\n        <h1>Mobile not supported</h1>\n      )}\n    </section>\n  );\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}