{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Chat/Chat.js\";\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport \"./Chat.scss\";\nimport Message from \"../Message/Message\";\nimport { useSelector } from \"react-redux\";\nimport SocketContext from \"../../context\";\n\nfunction Chat() {\n  let _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  console.log(socket);\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        messages = _useState2[0],\n        addMessage = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        input = _useState4[0],\n        changeInput = _useState4[1];\n\n  const _useSelector = useSelector(state => state.contactReducer),\n        name = _useSelector.name,\n        room = _useSelector.room;\n\n  const messagesRef = useRef();\n  useEffect(() => {\n    messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n  });\n\n  const submitMessage = e => {\n    if (e.charCode === 13) {\n      if (input) {\n        // on key press enter\n        socket.emit(\"chatMessage\", {\n          name,\n          room,\n          input\n        });\n        addMessage([...messages, React.createElement(Message, {\n          message: input,\n          key: messages.length + 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        })]);\n      }\n\n      changeInput(\"\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Chat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"ChatBox\")), React.createElement(\"div\", {\n    className: \"messages\",\n    ref: messagesRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, messages.map((e, index) => {\n    return e;\n  })), React.createElement(\"input\", {\n    value: input,\n    onChange: e => changeInput(e.target.value),\n    onKeyPress: submitMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Chat/Chat.js"],"names":["React","useState","useRef","useEffect","useContext","Message","useSelector","SocketContext","Chat","socket","console","log","messages","addMessage","input","changeInput","state","contactReducer","name","room","messagesRef","current","scrollTop","scrollHeight","submitMessage","e","charCode","emit","length","map","index","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,aAAP,MAA0B,eAA1B;;AAEA,SAASC,IAAT,GAAgB;AAAA,oBACGJ,UAAU,CAACG,aAAD,CADb;AAAA,MACRE,MADQ,eACRA,MADQ;;AAEdC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAFc,oBAGiBR,QAAQ,CAAC,EAAD,CAHzB;AAAA;AAAA,QAGPW,QAHO;AAAA,QAGGC,UAHH;;AAAA,qBAIeZ,QAAQ,CAAC,EAAD,CAJvB;AAAA;AAAA,QAIPa,KAJO;AAAA,QAIAC,WAJA;;AAAA,uBAMST,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,cAAhB,CANpB;AAAA,QAMNC,IANM,gBAMNA,IANM;AAAA,QAMAC,IANA,gBAMAA,IANA;;AAQd,QAAMC,WAAW,GAAGlB,MAAM,EAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,WAAW,CAACC,OAAZ,CAAoBC,SAApB,GAAgCF,WAAW,CAACC,OAAZ,CAAoBE,YAApD;AACD,GAFQ,CAAT;;AAIA,QAAMC,aAAa,GAAGC,CAAC,IAAI;AACzB,QAAIA,CAAC,CAACC,QAAF,KAAe,EAAnB,EAAuB;AACrB,UAAIZ,KAAJ,EAAW;AACT;AACAL,QAAAA,MAAM,CAACkB,IAAP,CAAY,aAAZ,EAA2B;AAAET,UAAAA,IAAF;AAAQC,UAAAA,IAAR;AAAcL,UAAAA;AAAd,SAA3B;AACAD,QAAAA,UAAU,CAAC,CACT,GAAGD,QADM,EAET,oBAAC,OAAD;AAAS,UAAA,OAAO,EAAEE,KAAlB;AAAyB,UAAA,GAAG,EAAEF,QAAQ,CAACgB,MAAT,GAAkB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFS,CAAD,CAAV;AAID;;AACDb,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,GAZD;;AAcA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAEK,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,QAAQ,CAACiB,GAAT,CAAa,CAACJ,CAAD,EAAIK,KAAJ,KAAc;AAC1B,WAAOL,CAAP;AACD,GAFA,CADH,CAJF,EASE;AACE,IAAA,KAAK,EAAEX,KADT;AAEE,IAAA,QAAQ,EAAEW,CAAC,IAAIV,WAAW,CAACU,CAAC,CAACM,MAAF,CAASC,KAAV,CAF5B;AAGE,IAAA,UAAU,EAAER,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAiBD;;AAED,eAAehB,IAAf","sourcesContent":["import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport \"./Chat.scss\";\nimport Message from \"../Message/Message\";\nimport { useSelector } from \"react-redux\";\nimport SocketContext from \"../../context\";\n\nfunction Chat() {\n  let { socket } = useContext(SocketContext);\n  console.log(socket);\n  const [messages, addMessage] = useState([]);\n  const [input, changeInput] = useState(\"\");\n\n  const { name, room } = useSelector(state => state.contactReducer);\n\n  const messagesRef = useRef();\n\n  useEffect(() => {\n    messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n  });\n\n  const submitMessage = e => {\n    if (e.charCode === 13) {\n      if (input) {\n        // on key press enter\n        socket.emit(\"chatMessage\", { name, room, input });\n        addMessage([\n          ...messages,\n          <Message message={input} key={messages.length + 1} />\n        ]);\n      }\n      changeInput(\"\");\n    }\n  };\n\n  return (\n    <div className=\"Chat\">\n      <div className=\"title\">\n        <h1>ChatBox</h1>\n      </div>\n      <div className=\"messages\" ref={messagesRef}>\n        {messages.map((e, index) => {\n          return e;\n        })}\n      </div>\n      <input\n        value={input}\n        onChange={e => changeInput(e.target.value)}\n        onKeyPress={submitMessage}\n      ></input>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}