{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/RoomList/RoomList.js\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport \"./RoomList.scss\";\nimport SocketContext from \"../../context\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport Swal from \"sweetalert2\";\n\nfunction RoomList() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  let _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  let _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      rooms = _useState2[0],\n      updateRoomList = _useState2[1];\n\n  const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n\n  let _useState3 = useState(\"No Active Rooms Found\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      changeTitle = _useState4[1];\n\n  useEffect(() => {\n    socket.emit(\"getAllRooms\");\n  }, [socket]);\n  useEffect(() => {\n    socket.on(\"sendAllRooms\", res => {\n      console.log(res);\n\n      if (res.length > 0) {\n        changeTitle(\"Rooms\");\n      }\n\n      updateRoomList(res);\n    });\n  }, [socket, rooms]);\n\n  const redirect = room => {\n    if (localStorageData) {\n      dispatch({\n        type: \"SET_INFO\",\n        payload: {\n          name: localStorageData.name,\n          room\n        }\n      });\n      history.push(\"/canvas\");\n    } else {\n      history.push(\"/login\");\n    }\n  };\n\n  const newRoom = () => {\n    if (localStorageData) {\n      dispatch({\n        type: \"SET_INFO\",\n        payload: {\n          name: localStorageData.name,\n          room: Math.floor(Math.random() * 500)\n        }\n      });\n      history.push(\"/canvas\");\n    } else {\n      history.push(\"/login\");\n    }\n  };\n\n  const renderRooms = () => {\n    if (rooms.length > 0) {\n      return rooms.map((i, index) => {\n        return React.createElement(\"div\", {\n          className: \"list-item\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Room \", i.roomId || \"Room Name\"), React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, i.users.length, \"/4\"), React.createElement(\"button\", {\n          onClick: e => redirect(i.roomId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, i.users.length > 4 ? \"FULL\" : \"Join\"));\n      });\n    }\n  };\n\n  const changeNick = () => {\n    let currentInfo = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n\n    if (!currentInfo) {\n      Swal.fire(\"wait!\", \"Login first before setting name!\", \"warning\");\n      history.push(\"/login\");\n    } else {\n      Swal.fire({\n        title: \"New Nickname\",\n        input: \"text\"\n      }).then(res => {\n        if (res.value) {\n          currentInfo.name = res.value;\n          localStorage.setItem(\"loginUserInfo\", JSON.stringify(currentInfo));\n        }\n      });\n    }\n  };\n\n  const loginAsGuest = () => {\n    console.log(\"login as guest\");\n    let nickname = \"Guest\";\n    Swal.fire({\n      title: \"set Nickname\",\n      input: \"text\"\n    }).then(res => {\n      if (res.value) {\n        nickname = res.value;\n      }\n    });\n    let guestUser = {\n      googleId: Math.floor(Math.random() * 1000000000000000000000),\n      imageUrl: \"https://lh3.googleusercontent.com/-ExcCE_u-6AA/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3re0f6aLElaFPaWzTzCEPQKovJ8fsw/s96-c/photo.jpg\",\n      email: \"guest@gmail.com\",\n      name: nickname || \"Guest\",\n      givenName: \"test\",\n      familyName: \"test\"\n    };\n    console.log(localStorageData);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"RoomList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"child\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, title), renderRooms())), React.createElement(\"div\", {\n    onClick: newRoom,\n    className: \"myButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"New Room\"), React.createElement(\"div\", {\n    onClick: changeNick,\n    className: \"myButton2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"ChangeNick\"), React.createElement(\"div\", {\n    onClick: loginAsGuest,\n    className: \"myButton3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Login as Guest\"));\n}\n\nexport default RoomList;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/RoomList/RoomList.js"],"names":["React","useEffect","useContext","useState","SocketContext","useHistory","useDispatch","Swal","RoomList","history","dispatch","socket","rooms","updateRoomList","localStorageData","JSON","parse","localStorage","getItem","title","changeTitle","emit","on","res","console","log","length","redirect","room","type","payload","name","push","newRoom","Math","floor","random","renderRooms","map","i","index","roomId","users","e","changeNick","currentInfo","fire","input","then","value","setItem","stringify","loginAsGuest","nickname","guestUser","googleId","imageUrl","email","givenName","familyName"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport \"./RoomList.scss\";\nimport SocketContext from \"../../context\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\n\nimport Swal from \"sweetalert2\";\n\nfunction RoomList() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  let { socket } = useContext(SocketContext);\n\n  let [rooms, updateRoomList] = useState([]);\n\n  const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n\n  let [title, changeTitle] = useState(\"No Active Rooms Found\");\n  useEffect(() => {\n    socket.emit(\"getAllRooms\");\n  }, [socket]);\n\n  useEffect(() => {\n    socket.on(\"sendAllRooms\", res => {\n      console.log(res);\n      if (res.length > 0) {\n        changeTitle(\"Rooms\");\n      }\n      updateRoomList(res);\n    });\n  }, [socket, rooms]);\n\n  const redirect = room => {\n    if (localStorageData) {\n      dispatch({\n        type: \"SET_INFO\",\n        payload: { name: localStorageData.name, room }\n      });\n      history.push(\"/canvas\");\n    } else {\n      history.push(\"/login\");\n    }\n  };\n\n  const newRoom = () => {\n    if (localStorageData) {\n      dispatch({\n        type: \"SET_INFO\",\n        payload: {\n          name: localStorageData.name,\n          room: Math.floor(Math.random() * 500)\n        }\n      });\n      history.push(\"/canvas\");\n    } else {\n      history.push(\"/login\");\n    }\n  };\n\n  const renderRooms = () => {\n    if (rooms.length > 0) {\n      return rooms.map((i, index) => {\n        return (\n          <div className=\"list-item\" key={index}>\n            <h3>Room {i.roomId || \"Room Name\"}</h3>\n            <h4>{i.users.length}/4</h4>\n            <button onClick={e => redirect(i.roomId)}>\n              {i.users.length > 4 ? \"FULL\" : \"Join\"}\n            </button>\n          </div>\n        );\n      });\n    }\n  };\n\n  const changeNick = () => {\n    let currentInfo = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n    if (!currentInfo) {\n      Swal.fire(\"wait!\", \"Login first before setting name!\", \"warning\");\n      history.push(\"/login\");\n    } else {\n      Swal.fire({\n        title: \"New Nickname\",\n        input: \"text\"\n      }).then(res => {\n        if (res.value) {\n          currentInfo.name = res.value;\n          localStorage.setItem(\"loginUserInfo\", JSON.stringify(currentInfo));\n        }\n      });\n    }\n  };\n\n  const loginAsGuest = () => {\n    console.log(\"login as guest\");\n    let nickname = \"Guest\";\n    Swal.fire({\n      title: \"set Nickname\",\n      input: \"text\"\n    }).then(res => {\n      if (res.value) {\n        nickname = res.value;\n      }\n    });\n\n    let guestUser = {\n      googleId: Math.floor(Math.random() * 1000000000000000000000),\n      imageUrl:\n        \"https://lh3.googleusercontent.com/-ExcCE_u-6AA/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3re0f6aLElaFPaWzTzCEPQKovJ8fsw/s96-c/photo.jpg\",\n      email: \"guest@gmail.com\",\n      name: nickname || \"Guest\",\n      givenName: \"test\",\n      familyName: \"test\"\n    };\n    console.log(localStorageData);\n  };\n\n  return (\n    <div className=\"RoomList\">\n      <div className=\"Container\">\n        <div className=\"child\">\n          <h1>{title}</h1>\n          {renderRooms()}\n        </div>\n      </div>\n      <div onClick={newRoom} className=\"myButton\">\n        New Room\n      </div>\n      <div onClick={changeNick} className=\"myButton2\">\n        ChangeNick\n      </div>\n      <div onClick={loginAsGuest} className=\"myButton3\">\n        Login as Guest\n      </div>\n    </div>\n  );\n}\n\nexport default RoomList;\n"]},"metadata":{},"sourceType":"module"}