{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Canvas/Canvas.js\";\nimport React, { useRef, useEffect, useContext } from \"react\";\nimport \"./Canvas.scss\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport Chat from \"../Chat/Chat\";\nimport UserList from \"../UserList/UserList\";\nimport SocketContext from \"../../context\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\"; // let socket;\n\nfunction Canvas() {\n  let _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n\n  const _useSelector = useSelector(state => state.contactReducer),\n        name = _useSelector.name,\n        room = _useSelector.room;\n\n  const history = useHistory();\n  const canvas = useRef();\n  useEffect(() => {\n    let googleUserInfo = localStorageData;\n    socket.emit(\"join\", {\n      name,\n      room,\n      googleUserInfo\n    }, () => {\n      history.push(\"/\");\n      socket.emit(\"disconnect\");\n      alert(\"Error\");\n      socket.off();\n    });\n    socket.on(\"updateData\", data => {\n      if (canvas.current && data) {\n        canvas.current.loadSaveData(data, true);\n      }\n    });\n  }, [room, name, socket, localStorageData]);\n  useEffect(() => {\n    return () => {\n      socket.emit(\"disconnect\");\n      console.log(\"will unmount\");\n    };\n  }, [socket]);\n  return React.createElement(\"section\", {\n    className: \"Canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Chat, {\n    socket: socket,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"CanvasContainer\",\n    onMouseUp: () => {\n      socket.emit(\"drawingData\", {\n        data: canvas.current.getSaveData(),\n        room\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(CanvasDraw, {\n    ref: canvas,\n    disabled: false,\n    brushRadius: 6,\n    canvasWidth: 900,\n    canvasHeight: 600,\n    lazyRadius: 0,\n    hideInterface: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(UserList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))));\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Canvas/Canvas.js"],"names":["React","useRef","useEffect","useContext","CanvasDraw","Chat","UserList","SocketContext","useSelector","useHistory","Canvas","socket","localStorageData","JSON","parse","localStorage","getItem","state","contactReducer","name","room","history","canvas","googleUserInfo","emit","push","alert","off","on","data","current","loadSaveData","console","log","getSaveData"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useContext } from \"react\";\n\nimport \"./Canvas.scss\";\nimport CanvasDraw from \"react-canvas-draw\";\n\nimport Chat from \"../Chat/Chat\";\nimport UserList from \"../UserList/UserList\";\nimport SocketContext from \"../../context\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\n// let socket;\n\nfunction Canvas() {\n  let { socket } = useContext(SocketContext);\n  const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n  const { name, room } = useSelector(state => state.contactReducer);\n  const history = useHistory();\n\n  const canvas = useRef();\n\n  useEffect(() => {\n    let googleUserInfo = localStorageData;\n\n    socket.emit(\"join\", { name, room, googleUserInfo }, () => {\n      history.push(\"/\");\n      socket.emit(\"disconnect\");\n      alert(\"Error\");\n      socket.off();\n    });\n\n    socket.on(\"updateData\", data => {\n      if (canvas.current && data) {\n        canvas.current.loadSaveData(data, true);\n      }\n    });\n  }, [room, name, socket, localStorageData]);\n\n  useEffect(() => {\n    return () => {\n      socket.emit(\"disconnect\");\n      console.log(\"will unmount\");\n    };\n  }, [socket]);\n\n  return (\n    <section className=\"Canvas\">\n      <div className=\"Container\">\n        <Chat socket={socket} />\n        <div\n          className=\"CanvasContainer\"\n          onMouseUp={() => {\n            socket.emit(\"drawingData\", {\n              data: canvas.current.getSaveData(),\n              room\n            });\n          }}\n        >\n          <CanvasDraw\n            ref={canvas}\n            disabled={false}\n            brushRadius={6}\n            canvasWidth={900}\n            canvasHeight={600}\n            lazyRadius={0}\n            hideInterface={false}\n          />\n          <UserList />\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}