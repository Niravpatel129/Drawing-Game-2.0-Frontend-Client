{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Canvas/Canvas.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport \"./Canvas.scss\";\nimport { isMobile } from \"react-device-detect\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport io from \"socket.io-client\";\nlet socket;\n\nfunction Canvas() {\n  const canvas = useRef();\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        saved = _useState2[0],\n        updatedSaved = _useState2[1];\n\n  useEffect(() => {\n    socket = io.connect(\"http://localhost:5000/\");\n  }, []);\n  useEffect(() => {\n    if (socket) {\n      socket.on(\"updateData\", data => {\n        console.log(\"recieve data\");\n        canvas.current.loadSaveData(data, true);\n      });\n    }\n  });\n\n  const undo = () => {\n    canvas.current.undo();\n  };\n\n  const handleOnChange = () => {\n    updatedSaved(canvas.current.getSaveData());\n  };\n\n  return React.createElement(\"section\", {\n    className: \"Canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, !isMobile ? React.createElement(\"div\", {\n    onMouseDown: () => {\n      console.log(\"sending data\");\n      socket.emit(\"drawingData\", canvas.current.getSaveData());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(CanvasDraw, {\n    ref: canvas,\n    canvasWidth: 1200,\n    canvasHeight: 550,\n    disabled: false,\n    lazyRadius: 0,\n    hideInterface: false,\n    onChange: handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: undo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Undo\")) : React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Mobile not supported\"));\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Canvas/Canvas.js"],"names":["React","useRef","useState","useEffect","isMobile","CanvasDraw","io","socket","Canvas","canvas","saved","updatedSaved","connect","on","data","console","log","current","loadSaveData","undo","handleOnChange","getSaveData","emit"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,eAAP;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAMC,MAAM,GAAGR,MAAM,EAArB;;AADgB,oBAEcC,QAAQ,EAFtB;AAAA;AAAA,QAETQ,KAFS;AAAA,QAEFC,YAFE;;AAIhBR,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,GAAGD,EAAE,CAACM,OAAH,CAAW,wBAAX,CAAT;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACM,EAAP,CAAU,YAAV,EAAwBC,IAAI,IAAI;AAC9BC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAP,QAAAA,MAAM,CAACQ,OAAP,CAAeC,YAAf,CAA4BJ,IAA5B,EAAkC,IAAlC;AACD,OAHD;AAID;AACF,GAPQ,CAAT;;AASA,QAAMK,IAAI,GAAG,MAAM;AACjBV,IAAAA,MAAM,CAACQ,OAAP,CAAeE,IAAf;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC3BT,IAAAA,YAAY,CAACF,MAAM,CAACQ,OAAP,CAAeI,WAAf,EAAD,CAAZ;AACD,GAFD;;AAIA,SACE;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACjB,QAAD,GACC;AACE,IAAA,WAAW,EAAE,MAAM;AACjBW,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAT,MAAAA,MAAM,CAACe,IAAP,CAAY,aAAZ,EAA2Bb,MAAM,CAACQ,OAAP,CAAeI,WAAf,EAA3B;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,UAAD;AACE,IAAA,GAAG,EAAEZ,MADP;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,YAAY,EAAE,GAHhB;AAIE,IAAA,QAAQ,EAAE,KAJZ;AAKE,IAAA,UAAU,EAAE,CALd;AAME,IAAA,aAAa,EAAE,KANjB;AAOE,IAAA,QAAQ,EAAEW,cAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAeE;AAAQ,IAAA,OAAO,EAAED,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,CADD,GAmBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BApBJ,CADF;AAyBD;;AAED,eAAeX,MAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport \"./Canvas.scss\";\nimport { isMobile } from \"react-device-detect\";\nimport CanvasDraw from \"react-canvas-draw\";\n\nimport io from \"socket.io-client\";\n\nlet socket;\n\nfunction Canvas() {\n  const canvas = useRef();\n  const [saved, updatedSaved] = useState();\n\n  useEffect(() => {\n    socket = io.connect(\"http://localhost:5000/\");\n  }, []);\n\n  useEffect(() => {\n    if (socket) {\n      socket.on(\"updateData\", data => {\n        console.log(\"recieve data\");\n        canvas.current.loadSaveData(data, true);\n      });\n    }\n  });\n\n  const undo = () => {\n    canvas.current.undo();\n  };\n\n  const handleOnChange = () => {\n    updatedSaved(canvas.current.getSaveData());\n  };\n\n  return (\n    <section className=\"Canvas\">\n      {!isMobile ? (\n        <div\n          onMouseDown={() => {\n            console.log(\"sending data\");\n            socket.emit(\"drawingData\", canvas.current.getSaveData());\n          }}\n        >\n          <CanvasDraw\n            ref={canvas}\n            canvasWidth={1200}\n            canvasHeight={550}\n            disabled={false}\n            lazyRadius={0}\n            hideInterface={false}\n            onChange={handleOnChange}\n          />\n          <button onClick={undo}>Undo</button>\n        </div>\n      ) : (\n        <h1>Mobile not supported</h1>\n      )}\n    </section>\n  );\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}