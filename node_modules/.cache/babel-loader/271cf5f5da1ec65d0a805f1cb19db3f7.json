{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/StatusMessage/StatusMessage.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport \"./StatusMessage.scss\";\nimport SocketContext from \"../../context\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction StatusMessage() {\n  let _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        gameStarted = _useState2[0],\n        setGameStarted = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        status = _useState4[0],\n        setStatus = _useState4[1];\n\n  const drawer = useSelector(state => state.canDrawReducer);\n  const dispatch = useDispatch(); // sockets\n\n  socket.on(\"gameStart\", () => {\n    setStatus(\"Game In Progress\");\n    setGameStarted(true);\n  });\n  socket.on(\"gameEnded\", () => {\n    setStatus(\"Game Not Started\");\n    dispatch({\n      type: \"SET_DRAW\",\n      payload: false\n    });\n    setGameStarted(false);\n  });\n  useEffect(() => {\n    if (!gameStarted) {\n      setStatus(\"Game Not Started\");\n    } else {\n      setStatus(\"Game In Progress\");\n    }\n  }, [drawer, gameStarted]);\n  return React.createElement(\"div\", {\n    className: \"StatusMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, status);\n}\n\nexport default StatusMessage;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/StatusMessage/StatusMessage.js"],"names":["React","useState","useContext","useEffect","SocketContext","useSelector","useDispatch","StatusMessage","socket","gameStarted","setGameStarted","status","setStatus","drawer","state","canDrawReducer","dispatch","on","type","payload"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAO,sBAAP;AACA,OAAOC,aAAP,MAA0B,eAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,SAASC,aAAT,GAAyB;AAAA,oBACNL,UAAU,CAACE,aAAD,CADJ;AAAA,MACjBI,MADiB,eACjBA,MADiB;;AAAA,oBAEeP,QAAQ,CAAC,KAAD,CAFvB;AAAA;AAAA,QAEhBQ,WAFgB;AAAA,QAEHC,cAFG;;AAAA,qBAGKT,QAAQ,CAAC,EAAD,CAHb;AAAA;AAAA,QAGhBU,MAHgB;AAAA,QAGRC,SAHQ;;AAIvB,QAAMC,MAAM,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAA1B;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B,CALuB,CAOvB;;AACAE,EAAAA,MAAM,CAACS,EAAP,CAAU,WAAV,EAAuB,MAAM;AAC3BL,IAAAA,SAAS,CAAC,kBAAD,CAAT;AACAF,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAHD;AAKAF,EAAAA,MAAM,CAACS,EAAP,CAAU,WAAV,EAAuB,MAAM;AAC3BL,IAAAA,SAAS,CAAC,kBAAD,CAAT;AACAI,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,OAAO,EAAE;AAA7B,KAAD,CAAR;AACAT,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAJD;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,WAAL,EAAkB;AAChBG,MAAAA,SAAS,CAAC,kBAAD,CAAT;AACD,KAFD,MAEO;AACLA,MAAAA,SAAS,CAAC,kBAAD,CAAT;AACD;AACF,GANQ,EAMN,CAACC,MAAD,EAASJ,WAAT,CANM,CAAT;AAQA,SAAO;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCE,MAAhC,CAAP;AACD;;AAED,eAAeJ,aAAf","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport \"./StatusMessage.scss\";\nimport SocketContext from \"../../context\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction StatusMessage() {\n  let { socket } = useContext(SocketContext);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [status, setStatus] = useState(\"\");\n  const drawer = useSelector(state => state.canDrawReducer);\n  const dispatch = useDispatch();\n\n  // sockets\n  socket.on(\"gameStart\", () => {\n    setStatus(\"Game In Progress\");\n    setGameStarted(true);\n  });\n\n  socket.on(\"gameEnded\", () => {\n    setStatus(\"Game Not Started\");\n    dispatch({ type: \"SET_DRAW\", payload: false });\n    setGameStarted(false);\n  });\n\n  useEffect(() => {\n    if (!gameStarted) {\n      setStatus(\"Game Not Started\");\n    } else {\n      setStatus(\"Game In Progress\");\n    }\n  }, [drawer, gameStarted]);\n\n  return <div className=\"StatusMessage\">{status}</div>;\n}\n\nexport default StatusMessage;\n"]},"metadata":{},"sourceType":"module"}