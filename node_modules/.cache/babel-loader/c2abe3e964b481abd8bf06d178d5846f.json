{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Canvas/Canvas.js\";\nimport React, { useRef, useEffect, useContext } from \"react\";\nimport \"./Canvas.scss\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport Chat from \"../Chat/Chat\";\nimport UserList from \"../UserList/UserList\";\nimport SocketContext from \"../../context\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport TimerClock from \"../TimerClock/TimerClock\";\nimport WordBlock from \"../WordBlock/WordBlock\"; // let socket;\n\nfunction Canvas() {\n  let _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n\n  const _useSelector = useSelector(state => state.contactReducer),\n        name = _useSelector.name,\n        room = _useSelector.room;\n\n  const history = useHistory();\n  const googleUserInfo = localStorageData;\n  const canvas = useRef();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(googleUserInfo);\n\n    if (!googleUserInfo) {\n      alert(\"Login first please!\");\n      socket.off();\n      history.push(\"/login\");\n    }\n\n    socket.emit(\"join\", {\n      name: googleUserInfo.name,\n      room,\n      googleUserInfo\n    }, err => {\n      alert(err || \"not sure of the error\");\n      socket.emit(\"disconnectUser\", googleUserInfo);\n      socket.off();\n      history.push(\"/\");\n    });\n    socket.on(\"updateData\", data => {\n      if (canvas.current && data) {\n        canvas.current.loadSaveData(data, true);\n      }\n    });\n    socket.on(\"newJoinNotification\", name => {\n      dispatch({\n        type: \"SET_NOTIFICATION\",\n        payload: true\n      });\n      dispatch({\n        type: \"SET_MESSAGE\",\n        payload: `${name} has joined the room`\n      });\n    });\n  }, [room, name, socket, localStorageData, history, googleUserInfo, dispatch]);\n  useEffect(() => {\n    return () => {\n      console.log(\"will unmount\");\n      socket.emit(\"disconnectUser\", googleUserInfo);\n    };\n  }, [socket, googleUserInfo]);\n  return React.createElement(\"section\", {\n    className: \"Canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Chat, {\n    socket: socket,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"CanvasContainer\",\n    onMouseUp: () => {\n      socket.emit(\"drawingData\", {\n        data: canvas.current.getSaveData(),\n        room\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(CanvasDraw, {\n    ref: canvas,\n    disabled: false,\n    brushRadius: 6,\n    canvasWidth: 900,\n    canvasHeight: 600,\n    lazyRadius: 0,\n    hideInterface: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(UserList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(TimerClock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(WordBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))));\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/Canvas/Canvas.js"],"names":["React","useRef","useEffect","useContext","CanvasDraw","Chat","UserList","SocketContext","useSelector","useDispatch","useHistory","TimerClock","WordBlock","Canvas","socket","localStorageData","JSON","parse","localStorage","getItem","state","contactReducer","name","room","history","googleUserInfo","canvas","dispatch","console","log","alert","off","push","emit","err","on","data","current","loadSaveData","type","payload","getSaveData"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useContext } from \"react\";\n\nimport \"./Canvas.scss\";\nimport CanvasDraw from \"react-canvas-draw\";\n\nimport Chat from \"../Chat/Chat\";\nimport UserList from \"../UserList/UserList\";\nimport SocketContext from \"../../context\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport TimerClock from \"../TimerClock/TimerClock\";\nimport WordBlock from \"../WordBlock/WordBlock\";\n\n// let socket;\n\nfunction Canvas() {\n  let { socket } = useContext(SocketContext);\n  const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n  const { name, room } = useSelector(state => state.contactReducer);\n  const history = useHistory();\n  const googleUserInfo = localStorageData;\n  const canvas = useRef();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log(googleUserInfo);\n    if (!googleUserInfo) {\n      alert(\"Login first please!\");\n      socket.off();\n      history.push(\"/login\");\n    }\n\n    socket.emit(\n      \"join\",\n      { name: googleUserInfo.name, room, googleUserInfo },\n      err => {\n        alert(err || \"not sure of the error\");\n        socket.emit(\"disconnectUser\", googleUserInfo);\n        socket.off();\n        history.push(\"/\");\n      }\n    );\n\n    socket.on(\"updateData\", data => {\n      if (canvas.current && data) {\n        canvas.current.loadSaveData(data, true);\n      }\n    });\n\n    socket.on(\"newJoinNotification\", name => {\n      dispatch({ type: \"SET_NOTIFICATION\", payload: true });\n      dispatch({ type: \"SET_MESSAGE\", payload: `${name} has joined the room` });\n    });\n  }, [room, name, socket, localStorageData, history, googleUserInfo, dispatch]);\n\n  useEffect(() => {\n    return () => {\n      console.log(\"will unmount\");\n      socket.emit(\"disconnectUser\", googleUserInfo);\n    };\n  }, [socket, googleUserInfo]);\n\n  return (\n    <section className=\"Canvas\">\n      <div className=\"Container\">\n        <Chat socket={socket} />\n        <div\n          className=\"CanvasContainer\"\n          onMouseUp={() => {\n            socket.emit(\"drawingData\", {\n              data: canvas.current.getSaveData(),\n              room\n            });\n          }}\n        >\n          <CanvasDraw\n            ref={canvas}\n            disabled={false}\n            brushRadius={6}\n            canvasWidth={900}\n            canvasHeight={600}\n            lazyRadius={0}\n            hideInterface={false}\n          />\n          <UserList />\n          <TimerClock />\n          <WordBlock />\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}