{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/UpdatedChat/UpdatedChat.js\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SocketContext from \"../../context\";\nimport Message from \"../Message/Message\";\nimport \"./UpdatedChat.scss\";\nconst poof = new Audio(\"https://raw.githubusercontent.com/Niravpatel129/World-Shooter-game-browser-multiplayer-online-/master/public/assets/poof.mp3\");\npoof.load();\npoof.volume = 0.2;\n\nfunction UpdatedChat() {\n  let _useContext = useContext(SocketContext),\n      socket = _useContext.socket;\n\n  const dispatch = useDispatch();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        msg = _useState2[0],\n        addMsg = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        input = _useState4[0],\n        changeInput = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        drawWord = _useState6[0],\n        setDrawWord = _useState6[1];\n\n  const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n\n  const _useSelector = useSelector(state => state.contactReducer),\n        room = _useSelector.room;\n\n  const canDraw = useSelector(state => state.canDrawReducer);\n  const messagesRef = useRef();\n  useEffect(() => {\n    if (poof.paused) {\n      poof.play();\n    } else {\n      poof.currentTime = 0;\n    }\n  });\n  useEffect(() => {\n    socket.on(\"sendTime\", res => {\n      const draw = res.find(i => i.roomId === room);\n      setDrawWord(draw.gameData.word);\n    });\n  }, [room, socket, drawWord]);\n  useEffect(() => {\n    socket.on(\"updateMessage\", res => {\n      addMsg(res);\n    });\n    return () => {\n      socket.off();\n    };\n  }, [socket]);\n  useEffect(() => {\n    messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n  });\n\n  const submitMessage = e => {\n    if (e.charCode === 13) {\n      if (input) {\n        if (input.toUpperCase().includes(drawWord.toUpperCase())) {\n          socket.emit(\"guessedCorrect\", {\n            user: localStorageData,\n            room\n          });\n          dispatch({\n            type: \"SET_GUESS\",\n            payload: true\n          });\n          dispatch({\n            type: \"SET_NOTIFICATION\",\n            payload: true\n          });\n          dispatch({\n            type: \"SET_MESSAGE\",\n            payload: `You gussed the word! `\n          });\n          socket.emit(\"chatMessage\", {\n            name: localStorageData,\n            room,\n            input: \":star:CORRECT:star:\"\n          });\n        } else {\n          socket.emit(\"chatMessage\", {\n            name: localStorageData,\n            room,\n            input\n          });\n        }\n      }\n\n      changeInput(\"\");\n    }\n  };\n\n  const renderMessage = () => {\n    let style;\n    if (msg) return msg.slice(0).reverse().map((e, index) => {\n      if (e.message === \":star::star::star:CORRECT:star::star::star:\") {\n        style = {\n          backgroundColor: \"#84BAEE\"\n        };\n      } else if (!e.name.name) {\n        style = {\n          backgroundColor: \"#EDA1A1\",\n          fontWeight: 900\n        };\n      } else {\n        style = {};\n      }\n\n      return React.createElement(Message, {\n        src: e.name.imageUrl,\n        name: e.name.name,\n        message: e.message,\n        style: style,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    });\n  };\n\n  const Chat = () => {\n    let placeholder = \"Write your answer here...\";\n\n    if (canDraw) {\n      placeholder = \"You are drawing! ðŸ”’\";\n    }\n\n    return React.createElement(\"div\", {\n      className: \"UpdatedChat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"messages column-reverse\",\n      ref: messagesRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, renderMessage()), React.createElement(\"div\", {\n      className: \"inputContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: input,\n      onChange: e => changeInput(e.target.value),\n      onKeyPress: submitMessage,\n      placeholder: placeholder,\n      disabled: canDraw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })));\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, Chat());\n}\n\nexport default UpdatedChat;","map":{"version":3,"sources":["/Users/admin/Desktop/Apps/multiplayer-drawing-game/client/src/components/UpdatedChat/UpdatedChat.js"],"names":["React","useContext","useEffect","useRef","useState","useDispatch","useSelector","SocketContext","Message","poof","Audio","load","volume","UpdatedChat","socket","dispatch","msg","addMsg","input","changeInput","drawWord","setDrawWord","localStorageData","JSON","parse","localStorage","getItem","state","contactReducer","room","canDraw","canDrawReducer","messagesRef","paused","play","currentTime","on","res","draw","find","i","roomId","gameData","word","off","current","scrollTop","scrollHeight","submitMessage","e","charCode","toUpperCase","includes","emit","user","type","payload","name","renderMessage","style","slice","reverse","map","index","message","backgroundColor","fontWeight","imageUrl","Chat","placeholder","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SocketContext from \"../../context\";\nimport Message from \"../Message/Message\";\nimport \"./UpdatedChat.scss\";\n\nconst poof = new Audio(\n  \"https://raw.githubusercontent.com/Niravpatel129/World-Shooter-game-browser-multiplayer-online-/master/public/assets/poof.mp3\"\n);\n\npoof.load();\n\npoof.volume = 0.2;\n\nfunction UpdatedChat() {\n  let { socket } = useContext(SocketContext);\n  const dispatch = useDispatch();\n  const [msg, addMsg] = useState([]);\n  const [input, changeInput] = useState(\"\");\n  const [drawWord, setDrawWord] = useState(\"\");\n  const localStorageData = JSON.parse(localStorage.getItem(\"loginUserInfo\"));\n\n  const { room } = useSelector(state => state.contactReducer);\n  const canDraw = useSelector(state => state.canDrawReducer);\n\n  const messagesRef = useRef();\n\n\n  useEffect(()=>{\n    if (poof.paused) {\n      poof.play();\n    } else {\n      poof.currentTime = 0;\n    }\n  })\n\n  useEffect(() => {\n    socket.on(\"sendTime\", res => {\n      const draw = res.find(i => i.roomId === room);\n      setDrawWord(draw.gameData.word);\n    });\n  }, [room, socket, drawWord]);\n\n  useEffect(() => {\n    socket.on(\"updateMessage\", res => {\n      addMsg(res);\n    });\n\n    return () => {\n      socket.off();\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    messagesRef.current.scrollTop = messagesRef.current.scrollHeight;\n  });\n\n  const submitMessage = e => {\n    if (e.charCode === 13) {\n      if (input) {\n        if (input.toUpperCase().includes(drawWord.toUpperCase())) {\n          socket.emit(\"guessedCorrect\", { user: localStorageData, room });\n          dispatch({ type: \"SET_GUESS\", payload: true });\n          dispatch({ type: \"SET_NOTIFICATION\", payload: true });\n          dispatch({ type: \"SET_MESSAGE\", payload: `You gussed the word! ` });\n\n          socket.emit(\"chatMessage\", {\n            name: localStorageData,\n            room,\n            input: \":star:CORRECT:star:\"\n          });\n        } else {\n          socket.emit(\"chatMessage\", { name: localStorageData, room, input });\n        }\n      }\n      changeInput(\"\");\n    }\n  };\n\n  const renderMessage = () => {\n    let style;\n    if (msg)\n      return msg\n        .slice(0)\n        .reverse()\n        .map((e, index) => {\n          if (e.message === \":star::star::star:CORRECT:star::star::star:\") {\n            style = { backgroundColor: \"#84BAEE\" };\n          } else if (!e.name.name) {\n            style = { backgroundColor: \"#EDA1A1\", fontWeight: 900 };\n          } else {\n            style = {};\n          }\n\n          return (\n            <Message\n              src={e.name.imageUrl}\n              name={e.name.name}\n              message={e.message}\n              style={style}\n              key={index}\n            />\n          );\n        });\n  };\n\n  const Chat = () => {\n    let placeholder = \"Write your answer here...\";\n    if (canDraw) {\n      placeholder = \"You are drawing! ðŸ”’\";\n    }\n    return (\n      <div className=\"UpdatedChat\">\n        <div className=\"messages column-reverse\" ref={messagesRef}>\n          {renderMessage()}\n        </div>\n        <div className=\"inputContainer\">\n          <input\n            value={input}\n            onChange={e => changeInput(e.target.value)}\n            onKeyPress={submitMessage}\n            placeholder={placeholder}\n            disabled={canDraw}\n          ></input>\n        </div>\n      </div>\n    );\n  };\n\n  return <React.Fragment>{Chat()}</React.Fragment>;\n}\n\nexport default UpdatedChat;\n"]},"metadata":{},"sourceType":"module"}